---
title: "5-2d-decision-boundary"
author: "math4mads"
code-fold: true
---

```julia
"""
probml page 84,figure 2.13
概率值预测方法 参见: https://discourse.julialang.org/t/extracting-values-from-univariatefinite/62794/3
"""
```

```{julia}
import MLJ:fit!,predict,predict_mode,predict_mean,machine
using MLJ,GLMakie,Random,DataFrames

iris = load_iris(); 
iris =DataFrame(iris);
nums=100

iris[!, :target] = [r.target == "virginica" ? 1.0 : 0.0 for r in eachrow(iris)]
iris=coerce(iris, :target=> Multiclass )
gdf=groupby(iris, :target)
X,y=iris[:,3:4],iris[:,:target]

cats=levels(y)

function boundary_data(df,;n=nums)
    n1=n2=n
    xlow,xhigh=extrema(df[:,1])
    ylow,yhigh=extrema(df[:,2])
    tx = LinRange(xlow,xhigh,n1)
    ty = LinRange(ylow,yhigh,n2)
    x_test = mapreduce(collect, hcat, Iterators.product(tx, ty));
    x_test=MLJ.table(x_test')
    return tx,ty,x_test
end
tx,ty,x_test=boundary_data(X)


function eval_model()
    classifier = @load LogisticClassifier pkg=MLJLinearModels
    mach = fit!(machine(classifier(), X, y))
    
end

yhat,probs_res=eval_model()

```