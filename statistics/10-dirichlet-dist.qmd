---
title: "10-dirichlet-dist"
author: math4mad
code-fold: true
---

:::{.callout-note title="简介"}
dirichlet分布是Beta 分布的多元泛化

参照 :[Visualizing Dirichlet Distributions with Matplotlib](https://blog.bogatron.net/blog/2014/02/02/visualizing-dirichlet-distributions/)
:::

## 1. load package
```{julia}
using Distributions, GLMakie, Random, Pipe
Random.seed!(34343)
```

## 2. Beta 分布
### 2.1  定义
`Beta`分布的定义:
```{julia}
@doc(Beta)
```

`Beta`分布有两个参数`α,β`, 当两个参数取不同值的时候, 分布的概率密度函数变现不同.

###  2.2  不同参数的 `pdf`曲线
```{julia}
xs=range(0,1,100)
params=[[.1,.1],[.5,.5],[1,1],[5,5],[10,10],[50,50]]
#sas1 = @pipe params1.|>(pdf(Beta(_...),xs))
function plot_res()
    fig = Figure(resolution=(900,900))
    axs = [Axis(fig[i, j]) for i in 1:2, j in 1:3]

    for (ax,vec) in zip(axs,params)
        ax.title="$vec"
       lines!(ax,Beta(vec...),color=(:orange, 0.8))
    end
    fig
end
plot_res()
```

## 3 Dirichlet分布
### 3.1 定义
```{julia}
@doc(Dirichlet)
```

### 3.2  Dirichlet  sampling plot
```{julia}
let
    vecs = [[0.1,0.1,0.1],[0.2,0.2,0.2],[1, 1, 1], [2, 2, 2], [6, 6, 6], [10, 10, 10],[20,20,20],[50,50,50],[100,100,100]]
    sas = @pipe vecs |> Dirichlet.(_) |> rand.(_, 1000)

    xs = ys = zs = range(0, 1, 100)
    function plot_res()
        fig = Figure(resolution=(900,900))
        axs = [Axis3(fig[i, j];azimuth=0.2pi) for i in 1:3, j in 1:3]

        for (ax, sa,vec) in zip(axs, sas,vecs)
            ax.title="$vec"
            lines!(ax, [1, 0, 0,1], [0, 1, 0,0], [0, 0, 1,0];color=(:lightgreen,0.5),linewidth=3)
            scatter!(ax, eachrow(sa)...; markersize=4, color=(:orange, 0.9))
        end

        fig
    end
    plot_res()

end
```

