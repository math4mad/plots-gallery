[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Example schedule:\n\n\n\n\n\n\n\n\n\nMorning\nAfternoon\n\n\n\n\nL\nIntro + Data manipulation\ngit / GitHub\n\n\nM\nGeneralised Linear Models\nData visualisation\n\n\nX\nMixed models / GAM / Bayes\nFunctional programming + Students work\n\n\nJ\nMultivariate analyses\nReproducible workflows\n\n\nV\nUsing R as GIS + Students work\nProject presentations",
    "crumbs": [
      "Schedule"
    ]
  },
  {
    "objectID": "materials.html",
    "href": "materials.html",
    "title": "Course Materials",
    "section": "",
    "text": "Datasets\nSlides",
    "crumbs": [
      "Materials"
    ]
  },
  {
    "objectID": "vis/market-for-chip-production.html",
    "href": "vis/market-for-chip-production.html",
    "title": "Market share for logic chip production, by manufacturing stage, 2021",
    "section": "",
    "text": "info\n\n\n\n\nref:Market share for logic chip production, by manufacturing stage, 2021\nload pacakge\nCode\nusing CairoMakie,CSV,DataFrames,Pipe,Tidier,HypertextLiteral\nusing MakieThemes\nusing StatsBase\nMakie.set_theme!(ggthemr(:dust))",
    "crumbs": [
      "Data Viz",
      "Market share for logic chip production, by manufacturing stage, 2021"
    ]
  },
  {
    "objectID": "vis/market-for-chip-production.html#load-data-dataframe",
    "href": "vis/market-for-chip-production.html#load-data-dataframe",
    "title": "Market share for logic chip production, by manufacturing stage, 2021",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/market-share-logic-chip-production-manufacturing-stage.csv\")|&gt;DataFrame\ndf=coalesce.(df, 0.0)\n\n\n9×6 DataFrame\n\n\n\nRow\nEntity\nCode\nYear\nDesign\nFabrication\nAssembly, testing and packaging\n\n\n\nString15\nAny\nInt64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nChina\nCHN\n2021\n9.0\n12.0\n14.0\n\n\n2\nItaly\nITA\n2021\n0.0\n2.0\n0.0\n\n\n3\nJapan\nJPN\n2021\n6.0\n1.0\n7.0\n\n\n4\nMalaysia\nMYS\n2021\n0.0\n0.0\n2.0\n\n\n5\nOthers\n0.0\n2021\n9.0\n0.0\n5.0\n\n\n6\nSingapore\nSGP\n2021\n0.0\n0.0\n2.0\n\n\n7\nSouth Korea\nKOR\n2021\n6.0\n11.0\n13.0\n\n\n8\nTaiwan\nTWN\n2021\n9.0\n47.0\n29.0\n\n\n9\nUnited States\nUSA\n2021\n61.0\n27.0\n28.0",
    "crumbs": [
      "Data Viz",
      "Market share for logic chip production, by manufacturing stage, 2021"
    ]
  },
  {
    "objectID": "vis/market-for-chip-production.html#plot-bar-plot",
    "href": "vis/market-for-chip-production.html#plot-bar-plot",
    "title": "Market share for logic chip production, by manufacturing stage, 2021",
    "section": "3. plot bar plot",
    "text": "3. plot bar plot\n\n\nCode\ncats=names(df)\nrow,_=size(df)\nfunction plot_barplt(df)\n fig=Figure()\n axs=[Axis(fig[1,1]),Axis(fig[1,2]),Axis(fig[2,1])]\n \n for (idx, ax) in enumerate(axs)\n     df=sort(df,cats[3+idx];rev=false)\n     ax.title=\"$(cats[3+idx])\"\n     ax.yticks=(1:row,df.Entity)\n     ax.xgridvisible=false\n     ax.ygridvisible=false\n     xs=df.Entity\n     ys=@pipe select(df,3+idx)|&gt;_[:,1]|&gt;map(x-&gt;(x/sum(_))*100,_)|&gt;round.(_,digits=0)\n     #@info ys\n     barplot!(ax,1:row,ys;direction=:x,color=ys,bar_labels=:y,flip_labels_at=20,\n     color_over_background=:dodgerblue3,\n     color_over_bar=:white,\n     )\n\n end\n\n supertitle = Label(fig[0, :], \"Market share for logic chip production, by manufacturing\nstage, 2021\", fontsize = 20)\n fig\n \nend\nplot_barplt(df)",
    "crumbs": [
      "Data Viz",
      "Market share for logic chip production, by manufacturing stage, 2021"
    ]
  },
  {
    "objectID": "vis/golden-warriors-court.html",
    "href": "vis/golden-warriors-court.html",
    "title": "Golden State Warrior court",
    "section": "",
    "text": "Code\nusing GLMakie,GeometryBasics,Images\nGLMakie.activate!(ssao=true)\nGLMakie.closeall() # close any open screen\n\n#=======Setting  define notice for ssao setting========#\nfig = Figure(resolution = (1000, 1000))\nssao = Makie.SSAO(radius = 3.0, blur = 2)\nax = LScene(fig[1, 1], scenekw = (ssao=ssao,),show_axis=false)\nax.scene.ssao.bias[] = 0.025\n#=======================================================#\n\n\n## ===##\n\n\nimg = load(\"./imgs/gs.jpeg\")\nxs = range(-250.0, 250.0, length=size(img,1))\nys = range(-50.0,420.0, length=size(img,2))\n\n\n#=======================================================#\n\n\"\"\"\n## define Rect\nrect = Rect(start-x,start-y,height,width)\n\"\"\"\nn=6\nrect = Rect(0.0, 0.0,290,200)\n\nmesh!(ax, rect, ssao=true,color=img)\n\n\n\nfig",
    "crumbs": [
      "Data Viz",
      "Golden State Warrior court"
    ]
  },
  {
    "objectID": "vis/simpson-paradox-on-penguines.html",
    "href": "vis/simpson-paradox-on-penguines.html",
    "title": "Simpson’s paradox on penguins",
    "section": "",
    "text": "Code\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Simpson’s paradox on penguins"
    ]
  },
  {
    "objectID": "vis/simpson-paradox-on-penguines.html#load-data",
    "href": "vis/simpson-paradox-on-penguines.html#load-data",
    "title": "Simpson’s paradox on penguins",
    "section": "load data",
    "text": "load data\n\n\nCode\ndf=@pipe CSV.File(\"./data/palmerpenguins.csv\")|&gt;DataFrame|&gt;dropmissing\nfirst(df,10)\n\n\n10×7 DataFrame\n\n\n\nRow\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\nString15\nString15\nFloat64\nFloat64\nInt64\nInt64\nString7\n\n\n\n\n1\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n\n\n2\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n\n\n3\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n\n\n5\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n\n\n6\nAdelie\nTorgersen\n38.9\n17.8\n181\n3625\nfemale\n\n\n7\nAdelie\nTorgersen\n39.2\n19.6\n195\n4675\nmale\n\n\n8\nAdelie\nTorgersen\n41.1\n17.6\n182\n3200\nfemale\n\n\n9\nAdelie\nTorgersen\n38.6\n21.2\n191\n3800\nmale\n\n\n10\nAdelie\nTorgersen\n34.6\n21.1\n198\n4400\nmale\n\n\n\n\n\n\n\n\nCode\n   describe(df)\n\n\n7×7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion…\nAny\nUnion…\nAny\nInt64\nDataType\n\n\n\n\n1\nspecies\n\nAdelie\n\nGentoo\n0\nString15\n\n\n2\nisland\n\nBiscoe\n\nTorgersen\n0\nString15\n\n\n3\nbill_length_mm\n43.9928\n32.1\n44.5\n59.6\n0\nFloat64\n\n\n4\nbill_depth_mm\n17.1649\n13.1\n17.3\n21.5\n0\nFloat64\n\n\n5\nflipper_length_mm\n200.967\n172\n197.0\n231\n0\nInt64\n\n\n6\nbody_mass_g\n4207.06\n2700\n4050.0\n6300\n0\nInt64\n\n\n7\nsex\n\nfemale\n\nmale\n0\nString7\n\n\n\n\n\n\n\n\nCode\n```{julia}\n#| label: fig-simpson-paradox\n#| fig-cap: simpson-paradox on palmerpenguins\n#| fig-align: center\n#| warning: false\naxis = (width = 300, height = 300)\npenguin_bill = data(df) * mapping(\n    :bill_length_mm =&gt; (t -&gt; t / 10) =&gt;\"bill_length\",\n    :bill_depth_mm =&gt; (t -&gt; t / 10) =&gt;\"bill_depth\",\n)\npipeline1=penguin_bill * linear() * mapping(color = :species)\npipeline2=penguin_bill * mapping(color = :species)*visual(Scatter;strokewidth=1,strokcolor=:black)\npipeline3=penguin_bill *linear()\n\nplt =(pipeline1+pipeline2+pipeline3)*visual(alpha = 0.5)\ndraw(plt; axis = axis)\n```\n\n\n\n\n\n\n\n\nFigure 1: simpson-paradox on palmerpenguins",
    "crumbs": [
      "Data Viz",
      "Simpson’s paradox on penguins"
    ]
  },
  {
    "objectID": "vis/cost-of-space-launch.html",
    "href": "vis/cost-of-space-launch.html",
    "title": "Cost of space launches to low Earth orbit",
    "section": "",
    "text": "info\n\n\n\nref: Cost of space launches to low Earth orbit",
    "crumbs": [
      "Data Viz",
      "Cost of space launches to low Earth orbit"
    ]
  },
  {
    "objectID": "vis/cost-of-space-launch.html#load-package",
    "href": "vis/cost-of-space-launch.html#load-package",
    "title": "Cost of space launches to low Earth orbit",
    "section": "load package",
    "text": "load package\n\n\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success\n\n\n\n\nCode\nmake_title(\"Part One : Data Processing\")\n\n\n    \n       Part One : Data Processing",
    "crumbs": [
      "Data Viz",
      "Cost of space launches to low Earth orbit"
    ]
  },
  {
    "objectID": "vis/cost-of-space-launch.html#load-datadataframe",
    "href": "vis/cost-of-space-launch.html#load-datadataframe",
    "title": "Cost of space launches to low Earth orbit",
    "section": "1.1 load data=>dataframe",
    "text": "1.1 load data=&gt;dataframe\n\n\nCode\n    df=@pipe CSV.File(\"./data/cost-space-launches-low-earth-orbit.csv\")|&gt;DataFrame\ndf =@chain df begin\n   @select(1,3,4,5)\n   @arrange(Year)\n   @filter(Entity ∉ [\"Delta E\",\"Scout\",\"Minotaur I\",\"Space Shuttle\"])\n   end\nfirst(df,5)\n\n\n5×4 DataFrame\n\n\n\nRow\nEntity\nYear\ncost_per_kg\nlaunch_class\n\n\n\nString31\nInt64\nInt64\nString7\n\n\n\n\n1\nKosmos\n1962\n14900\nSmall\n\n\n2\nAtlas Centaur\n1963\n29500\nMedium\n\n\n3\nTitan II\n1964\n30600\nMedium\n\n\n4\nProton\n1965\n8200\nHeavy\n\n\n5\nTitan III+\n1965\n21000\nMedium\n\n\n\n\n\n\n\n\nCode\nmake_title(\"Part Two : Plots\")\n\n\n    \n       Part Two : Plots\n    \n\n\n\n\nCode\n axis = (width = 600, height =1200)\n data_layer=data(df) \n mapping_layer1=mapping(:Year,:cost_per_kg,color=:launch_class)\n visual_layer1 = visual(Scatter;strokewidth=2,strokecolor=:black)\n mapping_layer2=mapping(:Year,:cost_per_kg, text=:Entity =&gt; verbatim)\n visual_layer2 = visual(Makie.Text;color=:black)\n plt=data_layer*mapping_layer1*visual_layer1\n text_pipe=data_layer*mapping_layer2*visual_layer2\ndraw(plt+text_pipe,axis=axis)\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Cost of space launches to low Earth orbit"
    ]
  },
  {
    "objectID": "vis/child-mortality-rate-1960to2021.html",
    "href": "vis/child-mortality-rate-1960to2021.html",
    "title": "Child mortality rate, 1960 to 2021",
    "section": "",
    "text": "ref\n\n\n\n\nref : Child mortality rate, 1960 to 2021\npackage :The newggslopegraph function from the CGPfunctions package\nCode\n include(\"utils.jl\")\n\n\n[ Info: loading success\nCode\nmake_title(\"Part one : Data processing\")\n\n\n    \n       Part one : Data processing",
    "crumbs": [
      "Data Viz",
      "Child mortality rate, 1960 to 2021"
    ]
  },
  {
    "objectID": "vis/child-mortality-rate-1960to2021.html#load-csv",
    "href": "vis/child-mortality-rate-1960to2021.html#load-csv",
    "title": "Child mortality rate, 1960 to 2021",
    "section": "load csv",
    "text": "load csv\n\n\nCode\ndf=@pipe CSV.File(\"./data/child-mortality-1960-vs-latest-slope.csv\")|&gt;DataFrame|&gt;rename(_,\"Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Wealth_quintile: All wealth quintiles\"=&gt;:rate)|&gt;select(_,Not(:Code,:Continent,\"Population (historical estimates)\"))|&gt;dropmissing\n\n\n13472×3 DataFrame13447 rows omitted\n\n\n\nRow\nEntity\nYear\nrate\n\n\n\nString\nInt64\nFloat64\n\n\n\n\n1\nAfghanistan\n1957\n37.5905\n\n\n2\nAfghanistan\n1958\n36.9628\n\n\n3\nAfghanistan\n1959\n36.3437\n\n\n4\nAfghanistan\n1960\n35.7301\n\n\n5\nAfghanistan\n1961\n35.1658\n\n\n6\nAfghanistan\n1962\n34.584\n\n\n7\nAfghanistan\n1963\n34.0159\n\n\n8\nAfghanistan\n1964\n33.4848\n\n\n9\nAfghanistan\n1965\n32.9421\n\n\n10\nAfghanistan\n1966\n32.3938\n\n\n11\nAfghanistan\n1967\n31.8366\n\n\n12\nAfghanistan\n1968\n31.2825\n\n\n13\nAfghanistan\n1969\n30.7243\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n13461\nZimbabwe\n2010\n8.61062\n\n\n13462\nZimbabwe\n2011\n8.05877\n\n\n13463\nZimbabwe\n2012\n7.21463\n\n\n13464\nZimbabwe\n2013\n6.62226\n\n\n13465\nZimbabwe\n2014\n6.26086\n\n\n13466\nZimbabwe\n2015\n6.04718\n\n\n13467\nZimbabwe\n2016\n5.78704\n\n\n13468\nZimbabwe\n2017\n5.61751\n\n\n13469\nZimbabwe\n2018\n5.36877\n\n\n13470\nZimbabwe\n2019\n5.26659\n\n\n13471\nZimbabwe\n2020\n5.17696\n\n\n13472\nZimbabwe\n2021\n4.9522",
    "crumbs": [
      "Data Viz",
      "Child mortality rate, 1960 to 2021"
    ]
  },
  {
    "objectID": "vis/child-mortality-rate-1960to2021.html#tidy-data",
    "href": "vis/child-mortality-rate-1960to2021.html#tidy-data",
    "title": "Child mortality rate, 1960 to 2021",
    "section": "tidy data",
    "text": "tidy data\n\n\nCode\n  query_years=[1960,1980,2000,2020]\n  query_countries=[\"Abkhazia\",\"Uganda\",\"Kenya\",\"Egypt\",\"Spain\",\"Japan\",\"France\"]\n  @eval(Main, input_years=query_years)\n  @eval(Main, input_countries =query_countries)\n  @eval(Main,input_points=length(query_years))\n  df=@chain df begin\n      @filter(Year ∈ !!input_years)\n      @group_by(Entity)\n      #filter(d-&gt;nrow(d)==4,_) \n      @filter(length(Year)==!!input_points) \n      @arrange(Year)\n      @ungroup\n      coerce(_,  :Year=&gt;OrderedFactor)\n      @mutate(rate=round(rate,digits=1))\n      @filter(Entity ∈ !!input_countries)\n  end\n\n\n24×3 DataFrame\n\n\n\nRow\nEntity\nYear\nrate\n\n\n\nString\nCat…\nFloat64\n\n\n\n\n1\nEgypt\n1960\n31.8\n\n\n2\nEgypt\n1980\n16.8\n\n\n3\nEgypt\n2000\n4.7\n\n\n4\nEgypt\n2020\n2.0\n\n\n5\nFrance\n1960\n2.8\n\n\n6\nFrance\n1980\n1.2\n\n\n7\nFrance\n2000\n0.5\n\n\n8\nFrance\n2020\n0.4\n\n\n9\nJapan\n1960\n4.0\n\n\n10\nJapan\n1980\n1.0\n\n\n11\nJapan\n2000\n0.5\n\n\n12\nJapan\n2020\n0.2\n\n\n13\nKenya\n1960\n19.7\n\n\n14\nKenya\n1980\n11.1\n\n\n15\nKenya\n2000\n9.9\n\n\n16\nKenya\n2020\n3.9\n\n\n17\nSpain\n1960\n5.5\n\n\n18\nSpain\n1980\n1.5\n\n\n19\nSpain\n2000\n0.5\n\n\n20\nSpain\n2020\n0.3\n\n\n21\nUganda\n1960\n22.3\n\n\n22\nUganda\n1980\n21.9\n\n\n23\nUganda\n2000\n14.6\n\n\n24\nUganda\n2020\n4.4\n\n\n\n\n\n\n\n\nCode\nmake_title(\"Part 2:  Plot\")\n\n\n    \n       Part 2:  Plot\n    \n\n\n\n\nCode\n  @rput df\n  R\"\"\"\n    # install.packages(\"CGPfunctions\")\n     library(CGPfunctions)\n     newggslopegraph(dataframe = df,\n                Times = Year,\n                Measurement = rate,\n                Grouping = Entity,\n                Title = \"Child mortality rate\",\n                SubTitle = \"1960-2020\",\n                Caption = \"By R CHARTS\",\n                LineThickness = 0.5,\n                # DataLabelPadding =0.2,\n                # DataLabelLineSize = 0.5,\n                # DataLabelFillColor = \"lightblue\",\n                ThemeChoice = \"wsj\"\n                )\n  \"\"\"\n\n\n\n\n\n\n\n\n\nRObject{VecSxp}",
    "crumbs": [
      "Data Viz",
      "Child mortality rate, 1960 to 2021"
    ]
  },
  {
    "objectID": "vis/mapsf.html",
    "href": "vis/mapsf.html",
    "title": "basic example of mapsf",
    "section": "",
    "text": "Code\nlibrary(mapsf)\n\n\nWarning: package 'mapsf' was built under R version 4.2.3\n\n\nCode\n# Import the sample dataset\nmtq &lt;- mf_get_mtq()\n# Plot the base map\nmf_map(x = mtq)\n# Plot proportional symbols\nmf_map(x = mtq, var = \"POP\", type = \"prop\", leg_pos = \"topright\")\n# Plot a map layout\nmf_layout(\n  title = \"Population in Martinique\",\n  credits = \"T. Giraud; Sources: INSEE & IGN, 2018\"\n)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Export a map with a theme and extra margins\nmf_theme(\"green\")\nmf_export(\n  x = mtq, filename = \"mtq.png\",\n  width = 600, res = 120,\n  expandBB = c(0, 0, 0, .3)\n)\n\n\nWarning in grSoftVersion(): unable to load shared object '/Library/Frameworks/R.framework/Resources/modules//R_X11.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 0x0006): Library not loaded: /opt/X11/lib/libSM.6.dylib\n  Referenced from: &lt;BBB44505-4BB3-30FA-9ED6-ABC69D534041&gt; /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/modules/R_X11.so\n  Reason: tried: '/opt/X11/lib/libSM.6.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/X11/lib/libSM.6.dylib' (no such file), '/opt/X11/lib/libSM.6.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libSM.6.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk-17.0.1+12/Contents/Home/lib/server/libSM.6.dylib' (no such file)\n\n\nWarning in cairoVersion(): unable to load shared object '/Library/Frameworks/R.framework/Resources/library/grDevices/libs//cairo.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/library/grDevices/libs//cairo.so, 0x0006): Library not loaded: /opt/X11/lib/libXrender.1.dylib\n  Referenced from: &lt;25AEF222-E381-3C27-AC91-0E12B2DF269A&gt; /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/grDevices/libs/cairo.so\n  Reason: tried: '/opt/X11/lib/libXrender.1.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/X11/lib/libXrender.1.dylib' (no such file), '/opt/X11/lib/libXrender.1.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libXrender.1.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk-17.0.1+12/Contents/Home/lib/server/libXrender.1.dylib' (no such file)\n\n\nWarning in png(filename, width = fd[1], height = fd[2], res = res, type =\n\"cairo-png\", : failed to load cairo DLL\n\n\nCode\n# Plot a shadow\nmf_shadow(mtq, col = \"grey10\", add = TRUE)\n# Plot a choropleth map\nmf_map(\n  x = mtq, var = \"MED\", type = \"choro\",\n  pal = \"Dark Mint\",\n  breaks = \"quantile\",\n  nbreaks = 6,\n  leg_title = \"Median Income\\n(euros)\",\n  leg_val_rnd = -2,\n  add = TRUE\n)\n# Start an inset map\nmf_inset_on(x = \"worldmap\", pos = \"right\")\n# Plot mtq position on a worldmap\nmf_worldmap(mtq, col = \"#0E3F5C\")\n# Close the inset\nmf_inset_off()\n# Plot a title\nmf_title(\"Wealth in Martinique, 2015\")\n# Plot credits\nmf_credits(\"T. Giraud\\nSources: INSEE & IGN, 2018\")\n# Plot a scale bar\nmf_scale(size = 5)\n# Plot a north arrow\nmf_arrow(\"topleft\")\n\n\n\n\n\n\n\n\n\nCode\ndev.off()\n\n\nnull device \n          1 \n\n\n\n\nCode\nmtq &lt;- mf_get_mtq()\nhead(mtq)\n\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 695444 ymin: 1598818 xmax: 717731 ymax: 1645182\nProjected CRS: WGS 84 / UTM zone 20N\n  INSEE_COM              STATUS            LIBGEO  POP   MED CHOM  ACT\n1     97201 Simple municipality L'Ajoupa-Bouillon 1902 13633  254  801\n2     97202 Simple municipality Les Anses-d'Arlet 3737 14558  425 1659\n3     97203 Simple municipality      Basse-Pointe 3357 14456  400 1395\n4     97204 Simple municipality         Le Carbet 3683 18847  285 1568\n5     97205 Simple municipality       Case-Pilote 4458 21005  347 2096\n6     97206 Simple municipality        Le Diamant 5976 19704  430 2654\n                            geom\n1 MULTIPOLYGON (((699261 1637...\n2 MULTIPOLYGON (((709840 1599...\n3 MULTIPOLYGON (((697602 1638...\n4 MULTIPOLYGON (((702229 1628...\n5 MULTIPOLYGON (((698805 1621...\n6 MULTIPOLYGON (((709840 1599...\n\n\n\n\nCode\nmf_map(mtq)\nmf_map(mtq, var = c(\"POP\", \"MED\"), type = \"prop_choro\")",
    "crumbs": [
      "Data Viz",
      "basic example of mapsf"
    ]
  },
  {
    "objectID": "vis/ai-performance-with-datasize.html",
    "href": "vis/ai-performance-with-datasize.html",
    "title": "Artificial intelligence: Performance on knowledge tests vs. training computation",
    "section": "",
    "text": "info\n\n\n\n\nref:Artificial intelligence: Performance on knowledge tests vs. training computation\n\n\n\nload pacakge\n\n\nCode\nusing CSV,DataFrames,Pipe,Tidier\nusing CairoMakie,AlgebraOfGraphics,MakieThemes\nMakie.set_theme!(ggthemr(:dust))",
    "crumbs": [
      "Data Viz",
      "Artificial intelligence: Performance on knowledge tests vs. training computation"
    ]
  },
  {
    "objectID": "vis/infographic-style-charts-using-waffle.html",
    "href": "vis/infographic-style-charts-using-waffle.html",
    "title": "Infographic-style charts using the R waffle package",
    "section": "",
    "text": "ref\n\n\n\n-ref :Infographic-style charts using the R waffle package\n\n\n\n\nCode\nlibrary(waffle)\n\n\nLoading required package: ggplot2\n\n\nCode\nlibrary(extrafont)\n\n\nRegistering fonts with R\n\n\n\n\nCode\nfont_import()\n\n\nImporting fonts may take a few minutes, depending on the number of fonts and the speed of the system.\nContinue? [y/n] \n\n\nExiting.\n\n\nCode\nfonts()[grep(\"Awesome5\", fonts())]\n\n\ncharacter(0)\n\n\nCode\nloadfonts();\n\n\n.Keyboard already registered with pdfFont().\n\n\n.New York already registered with pdfFont().\n\n\n.SF Arabic already registered with pdfFont().\n\n\n.SF Arabic Rounded already registered with pdfFont().\n\n\n.SF Armenian already registered with pdfFont().\n\n\n.SF Armenian Rounded already registered with pdfFont().\n\n\n.SF Camera already registered with pdfFont().\n\n\n.SF Compact already registered with pdfFont().\n\n\n.SF Compact Rounded already registered with pdfFont().\n\n\n.SF Georgian already registered with pdfFont().\n\n\n.SF Georgian Rounded already registered with pdfFont().\n\n\n.SF Hebrew already registered with pdfFont().\n\n\n.SF Hebrew Rounded already registered with pdfFont().\n\n\n.SF NS Mono already registered with pdfFont().\n\n\n.SF NS Rounded already registered with pdfFont().\n\n\nAcademy Engraved LET already registered with pdfFont().\n\n\nAndale Mono already registered with pdfFont().\n\n\nMore than one version of regular/bold/italic found for Apple Braille. Skipping setup for this font.\n\n\nAppleMyungjo already registered with pdfFont().\n\n\nArial already registered with pdfFont().\n\n\nArial Black already registered with pdfFont().\n\n\nArial Narrow already registered with pdfFont().\n\n\nArial Rounded MT Bold already registered with pdfFont().\n\n\nArial Unicode MS already registered with pdfFont().\n\n\nBodoni 72 Smallcaps already registered with pdfFont().\n\n\nBodoni Ornaments already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of Brush Script MT. Skipping setup for this font.\n\n\nComic Sans MS already registered with pdfFont().\n\n\nCourier New already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of DIN Alternate. Skipping setup for this font.\n\n\nNo regular (non-bold, non-italic) version of DIN Condensed. Skipping setup for this font.\n\n\nFont Awesome 6 Free Solid already registered with pdfFont().\n\n\nFontAwesome already registered with pdfFont().\n\n\nGeorgia already registered with pdfFont().\n\n\nImpact already registered with pdfFont().\n\n\nJuliaMono already registered with pdfFont().\n\n\nJuliaMono Black already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono BlackItalic. Skipping setup for this font.\n\n\nNo regular (non-bold, non-italic) version of JuliaMono BoldItalic. Skipping setup for this font.\n\n\nJuliaMono ExtraBold already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono ExtraBoldItalic. Skipping setup for this font.\n\n\nNo regular (non-bold, non-italic) version of JuliaMono Italic. Skipping setup for this font.\n\n\nJuliaMono Latin already registered with pdfFont().\n\n\nJuliaMono Light already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono LightItalic. Skipping setup for this font.\n\n\nJuliaMono Medium already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono MediumItalic. Skipping setup for this font.\n\n\nJuliaMono SemiBold already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono SemiBoldItalic. Skipping setup for this font.\n\n\nKhmer Sangam MN already registered with pdfFont().\n\n\nLao Sangam MN already registered with pdfFont().\n\n\nLuminari already registered with pdfFont().\n\n\nMicrosoft Sans Serif already registered with pdfFont().\n\n\nNoto Sans Adlam already registered with pdfFont().\n\n\nNoto Sans Avestan already registered with pdfFont().\n\n\nNoto Sans Bamum already registered with pdfFont().\n\n\nNoto Sans Bassa Vah already registered with pdfFont().\n\n\nNoto Sans Batak already registered with pdfFont().\n\n\nNoto Sans Bhaiksuki already registered with pdfFont().\n\n\nNoto Sans Brahmi already registered with pdfFont().\n\n\nNoto Sans Buginese already registered with pdfFont().\n\n\nNoto Sans Buhid already registered with pdfFont().\n\n\nNoto Sans Carian already registered with pdfFont().\n\n\nNoto Sans CaucAlban already registered with pdfFont().\n\n\nNoto Sans Chakma already registered with pdfFont().\n\n\nNoto Sans Cham already registered with pdfFont().\n\n\nNoto Sans Coptic already registered with pdfFont().\n\n\nNoto Sans Cuneiform already registered with pdfFont().\n\n\nNoto Sans Cypriot already registered with pdfFont().\n\n\nNoto Sans Duployan already registered with pdfFont().\n\n\nNoto Sans EgyptHiero already registered with pdfFont().\n\n\nNoto Sans Elbasan already registered with pdfFont().\n\n\nNoto Sans Glagolitic already registered with pdfFont().\n\n\nNoto Sans Gothic already registered with pdfFont().\n\n\nNoto Sans HanifiRohg already registered with pdfFont().\n\n\nNoto Sans Hanunoo already registered with pdfFont().\n\n\nNoto Sans Hatran already registered with pdfFont().\n\n\nNoto Sans ImpAramaic already registered with pdfFont().\n\n\nNoto Sans InsPahlavi already registered with pdfFont().\n\n\nNoto Sans InsParthi already registered with pdfFont().\n\n\nNoto Sans Kaithi already registered with pdfFont().\n\n\nNoto Sans Kayah Li already registered with pdfFont().\n\n\nNoto Sans Kharoshthi already registered with pdfFont().\n\n\nNoto Sans Khojki already registered with pdfFont().\n\n\nNoto Sans Khudawadi already registered with pdfFont().\n\n\nNoto Sans Lepcha already registered with pdfFont().\n\n\nNoto Sans Limbu already registered with pdfFont().\n\n\nNoto Sans Linear A already registered with pdfFont().\n\n\nNoto Sans Linear B already registered with pdfFont().\n\n\nNoto Sans Lisu already registered with pdfFont().\n\n\nNoto Sans Lycian already registered with pdfFont().\n\n\nNoto Sans Lydian already registered with pdfFont().\n\n\nNoto Sans Mahajani already registered with pdfFont().\n\n\nNoto Sans Mandaic already registered with pdfFont().\n\n\nNoto Sans Manichaean already registered with pdfFont().\n\n\nNoto Sans Marchen already registered with pdfFont().\n\n\nNoto Sans MeeteiMayek already registered with pdfFont().\n\n\nNoto Sans Mende Kikakui already registered with pdfFont().\n\n\nNoto Sans Meroitic already registered with pdfFont().\n\n\nNoto Sans Miao already registered with pdfFont().\n\n\nNoto Sans Modi already registered with pdfFont().\n\n\nNoto Sans Mongolian already registered with pdfFont().\n\n\nNoto Sans Mro already registered with pdfFont().\n\n\nNoto Sans Multani already registered with pdfFont().\n\n\nNoto Sans Nabataean already registered with pdfFont().\n\n\nNoto Sans Newa already registered with pdfFont().\n\n\nNoto Sans NewTaiLue already registered with pdfFont().\n\n\nNoto Sans NKo already registered with pdfFont().\n\n\nNoto Sans Ol Chiki already registered with pdfFont().\n\n\nNo regular (non-bold, non-italic) version of Noto Sans Old Italic. Skipping setup for this font.\n\n\nNoto Sans Old Permic already registered with pdfFont().\n\n\nNoto Sans Old Turkic already registered with pdfFont().\n\n\nNoto Sans OldHung already registered with pdfFont().\n\n\nNoto Sans OldNorArab already registered with pdfFont().\n\n\nNoto Sans OldPersian already registered with pdfFont().\n\n\nNoto Sans OldSouArab already registered with pdfFont().\n\n\nNoto Sans Osage already registered with pdfFont().\n\n\nNoto Sans Osmanya already registered with pdfFont().\n\n\nNoto Sans Pahawh Hmong already registered with pdfFont().\n\n\nNoto Sans Palmyrene already registered with pdfFont().\n\n\nNoto Sans PauCinHau already registered with pdfFont().\n\n\nNoto Sans PhagsPa already registered with pdfFont().\n\n\nNoto Sans Phoenician already registered with pdfFont().\n\n\nNoto Sans PsaPahlavi already registered with pdfFont().\n\n\nNoto Sans Rejang already registered with pdfFont().\n\n\nNoto Sans Samaritan already registered with pdfFont().\n\n\nNoto Sans Saurashtra already registered with pdfFont().\n\n\nNoto Sans Sharada already registered with pdfFont().\n\n\nNoto Sans Siddham already registered with pdfFont().\n\n\nNoto Sans SoraSomp already registered with pdfFont().\n\n\nNoto Sans Sundanese already registered with pdfFont().\n\n\nNoto Sans Syloti Nagri already registered with pdfFont().\n\n\nNoto Sans Syriac already registered with pdfFont().\n\n\nNoto Sans Tagalog already registered with pdfFont().\n\n\nNoto Sans Tagbanwa already registered with pdfFont().\n\n\nNoto Sans Tai Le already registered with pdfFont().\n\n\nNoto Sans Tai Tham already registered with pdfFont().\n\n\nNoto Sans Tai Viet already registered with pdfFont().\n\n\nNoto Sans Takri already registered with pdfFont().\n\n\nNoto Sans Thaana already registered with pdfFont().\n\n\nNoto Sans Tifinagh already registered with pdfFont().\n\n\nNoto Sans Tirhuta already registered with pdfFont().\n\n\nNoto Sans Ugaritic already registered with pdfFont().\n\n\nNoto Sans Vai already registered with pdfFont().\n\n\nNoto Sans Wancho already registered with pdfFont().\n\n\nNoto Sans WarangCiti already registered with pdfFont().\n\n\nNoto Sans Yi already registered with pdfFont().\n\n\nNoto Serif Ahom already registered with pdfFont().\n\n\nNoto Serif Balinese already registered with pdfFont().\n\n\nNoto Serif Hmong Nyiakeng already registered with pdfFont().\n\n\nParty LET already registered with pdfFont().\n\n\nSTIX Two Text already registered with pdfFont().\n\n\nSystem Font already registered with pdfFont().\n\n\nTahoma already registered with pdfFont().\n\n\nTimes New Roman already registered with pdfFont().\n\n\nTrattatello already registered with pdfFont().\n\n\nTrebuchet MS already registered with pdfFont().\n\n\nVerdana already registered with pdfFont().\n\n\nWebdings already registered with pdfFont().\n\n\nWingdings already registered with pdfFont().\n\n\nWingdings 2 already registered with pdfFont().\n\n\nWingdings 3 already registered with pdfFont().\n\n\n.Keyboard already registered with postscriptFont().\n\n\n.New York already registered with postscriptFont().\n\n\n.SF Arabic already registered with postscriptFont().\n\n\n.SF Arabic Rounded already registered with postscriptFont().\n\n\n.SF Armenian already registered with postscriptFont().\n\n\n.SF Armenian Rounded already registered with postscriptFont().\n\n\n.SF Camera already registered with postscriptFont().\n\n\n.SF Compact already registered with postscriptFont().\n\n\n.SF Compact Rounded already registered with postscriptFont().\n\n\n.SF Georgian already registered with postscriptFont().\n\n\n.SF Georgian Rounded already registered with postscriptFont().\n\n\n.SF Hebrew already registered with postscriptFont().\n\n\n.SF Hebrew Rounded already registered with postscriptFont().\n\n\n.SF NS Mono already registered with postscriptFont().\n\n\n.SF NS Rounded already registered with postscriptFont().\n\n\nAcademy Engraved LET already registered with postscriptFont().\n\n\nAndale Mono already registered with postscriptFont().\n\n\nMore than one version of regular/bold/italic found for Apple Braille. Skipping setup for this font.\n\n\nAppleMyungjo already registered with postscriptFont().\n\n\nArial already registered with postscriptFont().\n\n\nArial Black already registered with postscriptFont().\n\n\nArial Narrow already registered with postscriptFont().\n\n\nArial Rounded MT Bold already registered with postscriptFont().\n\n\nArial Unicode MS already registered with postscriptFont().\n\n\nBodoni 72 Smallcaps already registered with postscriptFont().\n\n\nBodoni Ornaments already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of Brush Script MT. Skipping setup for this font.\n\n\nComic Sans MS already registered with postscriptFont().\n\n\nCourier New already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of DIN Alternate. Skipping setup for this font.\n\n\nNo regular (non-bold, non-italic) version of DIN Condensed. Skipping setup for this font.\n\n\nFont Awesome 6 Free Solid already registered with postscriptFont().\n\n\nFontAwesome already registered with postscriptFont().\n\n\nGeorgia already registered with postscriptFont().\n\n\nImpact already registered with postscriptFont().\n\n\nJuliaMono already registered with postscriptFont().\n\n\nJuliaMono Black already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono BlackItalic. Skipping setup for this font.\n\n\nNo regular (non-bold, non-italic) version of JuliaMono BoldItalic. Skipping setup for this font.\n\n\nJuliaMono ExtraBold already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono ExtraBoldItalic. Skipping setup for this font.\n\n\nNo regular (non-bold, non-italic) version of JuliaMono Italic. Skipping setup for this font.\n\n\nJuliaMono Latin already registered with postscriptFont().\n\n\nJuliaMono Light already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono LightItalic. Skipping setup for this font.\n\n\nJuliaMono Medium already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono MediumItalic. Skipping setup for this font.\n\n\nJuliaMono SemiBold already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of JuliaMono SemiBoldItalic. Skipping setup for this font.\n\n\nKhmer Sangam MN already registered with postscriptFont().\n\n\nLao Sangam MN already registered with postscriptFont().\n\n\nLuminari already registered with postscriptFont().\n\n\nMicrosoft Sans Serif already registered with postscriptFont().\n\n\nNoto Sans Adlam already registered with postscriptFont().\n\n\nNoto Sans Avestan already registered with postscriptFont().\n\n\nNoto Sans Bamum already registered with postscriptFont().\n\n\nNoto Sans Bassa Vah already registered with postscriptFont().\n\n\nNoto Sans Batak already registered with postscriptFont().\n\n\nNoto Sans Bhaiksuki already registered with postscriptFont().\n\n\nNoto Sans Brahmi already registered with postscriptFont().\n\n\nNoto Sans Buginese already registered with postscriptFont().\n\n\nNoto Sans Buhid already registered with postscriptFont().\n\n\nNoto Sans Carian already registered with postscriptFont().\n\n\nNoto Sans CaucAlban already registered with postscriptFont().\n\n\nNoto Sans Chakma already registered with postscriptFont().\n\n\nNoto Sans Cham already registered with postscriptFont().\n\n\nNoto Sans Coptic already registered with postscriptFont().\n\n\nNoto Sans Cuneiform already registered with postscriptFont().\n\n\nNoto Sans Cypriot already registered with postscriptFont().\n\n\nNoto Sans Duployan already registered with postscriptFont().\n\n\nNoto Sans EgyptHiero already registered with postscriptFont().\n\n\nNoto Sans Elbasan already registered with postscriptFont().\n\n\nNoto Sans Glagolitic already registered with postscriptFont().\n\n\nNoto Sans Gothic already registered with postscriptFont().\n\n\nNoto Sans HanifiRohg already registered with postscriptFont().\n\n\nNoto Sans Hanunoo already registered with postscriptFont().\n\n\nNoto Sans Hatran already registered with postscriptFont().\n\n\nNoto Sans ImpAramaic already registered with postscriptFont().\n\n\nNoto Sans InsPahlavi already registered with postscriptFont().\n\n\nNoto Sans InsParthi already registered with postscriptFont().\n\n\nNoto Sans Kaithi already registered with postscriptFont().\n\n\nNoto Sans Kayah Li already registered with postscriptFont().\n\n\nNoto Sans Kharoshthi already registered with postscriptFont().\n\n\nNoto Sans Khojki already registered with postscriptFont().\n\n\nNoto Sans Khudawadi already registered with postscriptFont().\n\n\nNoto Sans Lepcha already registered with postscriptFont().\n\n\nNoto Sans Limbu already registered with postscriptFont().\n\n\nNoto Sans Linear A already registered with postscriptFont().\n\n\nNoto Sans Linear B already registered with postscriptFont().\n\n\nNoto Sans Lisu already registered with postscriptFont().\n\n\nNoto Sans Lycian already registered with postscriptFont().\n\n\nNoto Sans Lydian already registered with postscriptFont().\n\n\nNoto Sans Mahajani already registered with postscriptFont().\n\n\nNoto Sans Mandaic already registered with postscriptFont().\n\n\nNoto Sans Manichaean already registered with postscriptFont().\n\n\nNoto Sans Marchen already registered with postscriptFont().\n\n\nNoto Sans MeeteiMayek already registered with postscriptFont().\n\n\nNoto Sans Mende Kikakui already registered with postscriptFont().\n\n\nNoto Sans Meroitic already registered with postscriptFont().\n\n\nNoto Sans Miao already registered with postscriptFont().\n\n\nNoto Sans Modi already registered with postscriptFont().\n\n\nNoto Sans Mongolian already registered with postscriptFont().\n\n\nNoto Sans Mro already registered with postscriptFont().\n\n\nNoto Sans Multani already registered with postscriptFont().\n\n\nNoto Sans Nabataean already registered with postscriptFont().\n\n\nNoto Sans Newa already registered with postscriptFont().\n\n\nNoto Sans NewTaiLue already registered with postscriptFont().\n\n\nNoto Sans NKo already registered with postscriptFont().\n\n\nNoto Sans Ol Chiki already registered with postscriptFont().\n\n\nNo regular (non-bold, non-italic) version of Noto Sans Old Italic. Skipping setup for this font.\n\n\nNoto Sans Old Permic already registered with postscriptFont().\n\n\nNoto Sans Old Turkic already registered with postscriptFont().\n\n\nNoto Sans OldHung already registered with postscriptFont().\n\n\nNoto Sans OldNorArab already registered with postscriptFont().\n\n\nNoto Sans OldPersian already registered with postscriptFont().\n\n\nNoto Sans OldSouArab already registered with postscriptFont().\n\n\nNoto Sans Osage already registered with postscriptFont().\n\n\nNoto Sans Osmanya already registered with postscriptFont().\n\n\nNoto Sans Pahawh Hmong already registered with postscriptFont().\n\n\nNoto Sans Palmyrene already registered with postscriptFont().\n\n\nNoto Sans PauCinHau already registered with postscriptFont().\n\n\nNoto Sans PhagsPa already registered with postscriptFont().\n\n\nNoto Sans Phoenician already registered with postscriptFont().\n\n\nNoto Sans PsaPahlavi already registered with postscriptFont().\n\n\nNoto Sans Rejang already registered with postscriptFont().\n\n\nNoto Sans Samaritan already registered with postscriptFont().\n\n\nNoto Sans Saurashtra already registered with postscriptFont().\n\n\nNoto Sans Sharada already registered with postscriptFont().\n\n\nNoto Sans Siddham already registered with postscriptFont().\n\n\nNoto Sans SoraSomp already registered with postscriptFont().\n\n\nNoto Sans Sundanese already registered with postscriptFont().\n\n\nNoto Sans Syloti Nagri already registered with postscriptFont().\n\n\nNoto Sans Syriac already registered with postscriptFont().\n\n\nNoto Sans Tagalog already registered with postscriptFont().\n\n\nNoto Sans Tagbanwa already registered with postscriptFont().\n\n\nNoto Sans Tai Le already registered with postscriptFont().\n\n\nNoto Sans Tai Tham already registered with postscriptFont().\n\n\nNoto Sans Tai Viet already registered with postscriptFont().\n\n\nNoto Sans Takri already registered with postscriptFont().\n\n\nNoto Sans Thaana already registered with postscriptFont().\n\n\nNoto Sans Tifinagh already registered with postscriptFont().\n\n\nNoto Sans Tirhuta already registered with postscriptFont().\n\n\nNoto Sans Ugaritic already registered with postscriptFont().\n\n\nNoto Sans Vai already registered with postscriptFont().\n\n\nNoto Sans Wancho already registered with postscriptFont().\n\n\nNoto Sans WarangCiti already registered with postscriptFont().\n\n\nNoto Sans Yi already registered with postscriptFont().\n\n\nNoto Serif Ahom already registered with postscriptFont().\n\n\nNoto Serif Balinese already registered with postscriptFont().\n\n\nNoto Serif Hmong Nyiakeng already registered with postscriptFont().\n\n\nParty LET already registered with postscriptFont().\n\n\nSTIX Two Text already registered with postscriptFont().\n\n\nSystem Font already registered with postscriptFont().\n\n\nTahoma already registered with postscriptFont().\n\n\nTimes New Roman already registered with postscriptFont().\n\n\nTrattatello already registered with postscriptFont().\n\n\nTrebuchet MS already registered with postscriptFont().\n\n\nVerdana already registered with postscriptFont().\n\n\nWebdings already registered with postscriptFont().\n\n\nWingdings already registered with postscriptFont().\n\n\nWingdings 2 already registered with postscriptFont().\n\n\nWingdings 3 already registered with postscriptFont().\n\n\n\n\nCode\nwaffle(c(50, 30, 15, 5), rows = 5, title = \"Your basic waffle chart\")",
    "crumbs": [
      "Data Viz",
      "Infographic-style charts using the R waffle package"
    ]
  },
  {
    "objectID": "vis/choropleth-maps-in-R.html",
    "href": "vis/choropleth-maps-in-R.html",
    "title": "Choropleth maps in R",
    "section": "",
    "text": "ref\n\n\n\n\nref :Choropleth maps in R\n\n\n\n\n\nCode\n # install.packages(\"sf\")\nlibrary(sf)\n\n\nWarning: package 'sf' was built under R version 4.2.3\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nCode\n# install.packages(\"dplyr\")\nlibrary(dplyr)\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\n# install.packages(\"giscoR\")\nlibrary(giscoR)\n\nyear_ref &lt;- 2013\n\nnuts2_IT &lt;- gisco_get_nuts(\n  year = year_ref,\n  resolution = 20, \n  nuts_level = 2,\n  country = \"Italy\") %&gt;%\n  select(NUTS_ID, NAME_LATN)\n\n# Transform the shape\nnuts2_IT_32632 &lt;- st_transform(nuts2_IT, 32632)\n\n# Filter to select data from 2013\ndisp_income &lt;- giscoR::tgs00026 %&gt;%\n  filter(time == year_ref) %&gt;%\n  select(-time)\n\nnuts2_IT_32632_data &lt;- nuts2_IT_32632 %&gt;%\n  left_join(disp_income, by = c(\"NUTS_ID\" = \"geo\"))\n\nplot(nuts2_IT_32632_data[, \"values\"],\n     breaks = \"jenks\",\n     main = \"Choropleth map\")",
    "crumbs": [
      "Data Viz",
      "Choropleth maps in R"
    ]
  },
  {
    "objectID": "vis/nba-short-half-court.html",
    "href": "vis/nba-short-half-court.html",
    "title": "NBA shot chart",
    "section": "",
    "text": "Code\nusing Images\nimport CairoMakie:Axis\ninclude(\"utils.jl\")\n\n\n[ Info: loading success\n\n\n\n\nCode\nimg = load(\"./imgs/halfcourt.png\")\nxs = range(-250.0, 250.0, length=size(img,1))\nys = range(-50.0,420.0, length=size(img,2))\n\n\n-50.0:0.37630104083266613:420.0\n\n\n\n\n\nCode\ndf=@pipe CSV.File(\"./data/nba_shot.csv\")|&gt;DataFrame|&gt;dropmissing|&gt;Float64.(_)\ndf.shot=coerce(df.shot, Multiclass)\nfirst(df,10)\n\n\n10×3 DataFrame\n\n\n\nRow\nx\ny\nshot\n\n\n\nFloat64\nFloat64\nCat…\n\n\n\n\n1\n95.0\n242.0\n1.0\n\n\n2\n129.0\n43.0\n0.0\n\n\n3\n20.0\n10.0\n0.0\n\n\n4\n-127.0\n239.0\n0.0\n\n\n5\n-13.0\n14.0\n1.0\n\n\n6\n30.0\n252.0\n1.0\n\n\n7\n168.0\n208.0\n0.0\n\n\n8\n130.0\n17.0\n1.0\n\n\n9\n9.0\n21.0\n0.0\n\n\n10\n-2.0\n264.0\n0.0\n\n\n\n\n\n\n\n\nCode\nusing GLMakie\nfig=Figure()\nax=Axis(fig[1,1])\nGLMakie.image!(ax,rotl90(img))\n\n\nplt = AlgebraOfGraphics.data(df) * mapping(:x, :y,color=:shot)\ndraw!(fig[1,1],plt * visual(Scatter))\nfig\n\n\n\n\n\n\n\n\n\n\n\nCode\nset_aog_theme!()\n\naxis = (width = 150, height = 150)\nshot_frequency = AlgebraOfGraphics.data(df) * frequency() * mapping(:shot)\ndraw(shot_frequency; axis)\n\n\n\n\n\n\n\n\n\n\n\nCode\nlet \n  axis = (type = Axis3, width =600, height = 600)\n   layer = AlgebraOfGraphics.density() * visual(Wireframe, linewidth=0.05)\n   plt = AlgebraOfGraphics.data(df)* layer* mapping(:x,:y) \n   draw(plt; axis)\n    \nend",
    "crumbs": [
      "Data Viz",
      "NBA shot chart"
    ]
  },
  {
    "objectID": "vis/world-electricity-generation.html",
    "href": "vis/world-electricity-generation.html",
    "title": "Total electricity generation”",
    "section": "",
    "text": "info\n\n\n\n\nref:Total electricity generation\nload pacakge\nCode\nusing CairoMakie,CSV,DataFrames,Pipe,Tidier,HypertextLiteral\nusing MakieThemes\nusing StatsBase\nusing AlgebraOfGraphics\nMakie.set_theme!(ggthemr(:dust))",
    "crumbs": [
      "Data Viz",
      "Total electricity generation\""
    ]
  },
  {
    "objectID": "vis/world-electricity-generation.html#load-data-dataframe",
    "href": "vis/world-electricity-generation.html#load-data-dataframe",
    "title": "Total electricity generation”",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/electricity-generation.csv\")|&gt;DataFrame|&gt;rename(_,\"Electricity generation - TWh\"=&gt;:EGtwh)|&gt;coalesce.(_, 0.0)\n\nshow(levels(df.Entity))\nfirst(df,5)\n\n\n[\"ASEAN (Ember)\", \"Afghanistan\", \"Africa\", \"Africa (EI)\", \"Africa (Ember)\", \"Albania\", \"Algeria\", \"American Samoa\", \"Angola\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Asia\", \"Asia (Ember)\", \"Asia Pacific (EI)\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"CIS (EI)\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central African Republic\", \"Central America (EI)\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Comoros\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote d'Ivoire\", \"Croatia\", \"Cuba\", \"Cyprus\", \"Czechia\", \"Democratic Republic of Congo\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"East Timor\", \"Eastern Africa (EI)\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Eswatini\", \"Ethiopia\", \"Europe\", \"Europe (EI)\", \"Europe (Ember)\", \"European Union (27)\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Guiana\", \"French Polynesia\", \"G20 (Ember)\", \"G7 (Ember)\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"High-income countries\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Kosovo\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latin America and Caribbean (Ember)\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Lithuania\", \"Low-income countries\", \"Lower-middle-income countries\", \"Luxembourg\", \"Macao\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Martinique\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Middle Africa (EI)\", \"Middle East (EI)\", \"Middle East (Ember)\", \"Moldova\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Niue\", \"Non-OECD (EI)\", \"North America\", \"North America (EI)\", \"North America (Ember)\", \"North Korea\", \"North Macedonia\", \"Norway\", \"OECD (EI)\", \"OECD (Ember)\", \"Oceania\", \"Oceania (Ember)\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Helena\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Pierre and Miquelon\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South America\", \"South Korea\", \"South Sudan\", \"South and Central America (EI)\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"Suriname\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Togo\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks and Caicos Islands\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"United States Virgin Islands\", \"Upper-middle-income countries\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela\", \"Vietnam\", \"Western Africa (EI)\", \"Western Sahara\", \"World\", \"Yemen\", \"Zambia\", \"Zimbabwe\"]\n\n\n5×4 DataFrame\n\n\n\nRow\nEntity\nCode\nYear\nEGtwh\n\n\n\nString\nAny\nInt64\nFloat64\n\n\n\n\n1\nASEAN (Ember)\n0.0\n2000\n368.08\n\n\n2\nASEAN (Ember)\n0.0\n2001\n396.6\n\n\n3\nASEAN (Ember)\n0.0\n2002\n423.11\n\n\n4\nASEAN (Ember)\n0.0\n2003\n447.7\n\n\n5\nASEAN (Ember)\n0.0\n2004\n485.55\n\n\n\n\n\n\n\n\nCode\nlist=(\"United States\",\"United Kingdom\",\"France\",\"India\",\"Sweden\")\n@eval(Main, myvars =list )\ndf2=@chain df begin\n    @filter(Entity in !!myvars)\nend\n\n\n190×4 DataFrame165 rows omitted\n\n\n\nRow\nEntity\nCode\nYear\nEGtwh\n\n\n\nString\nAny\nInt64\nFloat64\n\n\n\n\n1\nFrance\nFRA\n1985\n344.465\n\n\n2\nFrance\nFRA\n1986\n362.995\n\n\n3\nFrance\nFRA\n1987\n378.486\n\n\n4\nFrance\nFRA\n1988\n392.087\n\n\n5\nFrance\nFRA\n1989\n404.85\n\n\n6\nFrance\nFRA\n1990\n417.2\n\n\n7\nFrance\nFRA\n1991\n451.62\n\n\n8\nFrance\nFRA\n1992\n460.02\n\n\n9\nFrance\nFRA\n1993\n469.66\n\n\n10\nFrance\nFRA\n1994\n474.6\n\n\n11\nFrance\nFRA\n1995\n491.2\n\n\n12\nFrance\nFRA\n1996\n509.16\n\n\n13\nFrance\nFRA\n1997\n500.96\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n179\nUnited States\nUSA\n2011\n4088.87\n\n\n180\nUnited States\nUSA\n2012\n4040.67\n\n\n181\nUnited States\nUSA\n2013\n4055.61\n\n\n182\nUnited States\nUSA\n2014\n4096.01\n\n\n183\nUnited States\nUSA\n2015\n4083.99\n\n\n184\nUnited States\nUSA\n2016\n4087.56\n\n\n185\nUnited States\nUSA\n2017\n4052.31\n\n\n186\nUnited States\nUSA\n2018\n4201.55\n\n\n187\nUnited States\nUSA\n2019\n4158.38\n\n\n188\nUnited States\nUSA\n2020\n4043.18\n\n\n189\nUnited States\nUSA\n2021\n4153.62\n\n\n190\nUnited States\nUSA\n2022\n4286.91\n\n\n\n\n\n\n## 3. plot\n\n\nCode\naxis = (width = 1000, height =500,xticklabelrotation = pi/8,title=\"Electricity generation\",subtitle=\"Measured in terawatt-hours.\")\ndata_layer = data(df2)\nmapping_layer=mapping(:Year,:EGtwh,color=:Entity)\nvisual_layer = visual(ScatterLines;stroke=1,strokecolor=(:red,0.8),markersize=4,linewidth=5)\ndraw(data_layer * mapping_layer * visual_layer,axis=axis)\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Total electricity generation\""
    ]
  },
  {
    "objectID": "vis/annual-death-rate-in-diff-age.html",
    "href": "vis/annual-death-rate-in-diff-age.html",
    "title": "Annual death rates in people of different ages",
    "section": "",
    "text": "ref\n\n\n\n\nref :Annual death rates in people of different ages\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Annual death rates in people of different ages"
    ]
  },
  {
    "objectID": "vis/annual-death-rate-in-diff-age.html#load-data-dataframe",
    "href": "vis/annual-death-rate-in-diff-age.html#load-data-dataframe",
    "title": "Annual death rates in people of different ages",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/annual-death-rates-in-different-age-groups.csv\")|&gt;DataFrame\ncats=names(df)\nrename!(df,  \"Central death rate - Type: period - Sex: both - Age: 0\"=&gt;:age0,\n              \"Central death rate - Type: period - Sex: both - Age: 10\"=&gt;:age10,\n              \"Central death rate - Type: period - Sex: both - Age: 25\"=&gt;:age25,\n              \"Central death rate - Type: period - Sex: both - Age: 45\"=&gt;:age45,\n              \"Central death rate - Type: period - Sex: both - Age: 65\"=&gt;:age65,\n              \"Central death rate - Type: period - Sex: both - Age: 80\"=&gt;:age80    \n)\nfirst(df,10)\n\n\n10×9 DataFrame\n\n\n\nRow\nEntity\nCode\nYear\nage0\nage10\nage25\nage45\nage65\nage80\n\n\n\nString\nString15?\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nAfghanistan\nAFG\n1950\n353.469\n7.10599\n14.9553\n24.7113\n72.9251\n219.856\n\n\n2\nAfghanistan\nAFG\n1951\n350.066\n7.04221\n14.8208\n24.475\n72.3925\n218.43\n\n\n3\nAfghanistan\nAFG\n1952\n342.826\n6.91651\n14.5584\n24.0431\n71.3978\n215.819\n\n\n4\nAfghanistan\nAFG\n1953\n335.489\n6.79443\n14.3049\n23.6353\n70.4698\n213.431\n\n\n5\nAfghanistan\nAFG\n1954\n328.739\n6.88345\n14.2338\n23.4879\n70.0566\n211.938\n\n\n6\nAfghanistan\nAFG\n1955\n320.919\n6.55437\n13.8029\n22.8619\n68.6513\n208.779\n\n\n7\nAfghanistan\nAFG\n1956\n313.825\n6.44994\n13.5662\n22.4995\n67.7879\n206.572\n\n\n8\nAfghanistan\nAFG\n1957\n306.734\n6.31585\n13.2953\n22.0842\n66.7916\n204.067\n\n\n9\nAfghanistan\nAFG\n1958\n299.564\n6.1871\n13.0174\n21.6528\n65.7387\n201.421\n\n\n10\nAfghanistan\nAFG\n1959\n292.941\n6.06023\n12.7585\n21.249\n64.7374\n198.98\n\n\n\n\n\n\n\n\nCode\nmake_title(\"Part 2: Plot\")\n\n\n    \n       Part 2: Plot\n    \n\n\n\n\nCode\nfrance=@chain df begin \n   @filter(Entity==\"France\")\n   @select(3:9)\n   @pivot_longer(_, 2:7, names_to = age_group, values_to =rate)\n   #@group_by(age_group)\nend\n\ntwo_country=@chain df begin \n   @select(1,3:9)\n   @pivot_longer(_, 3:8, names_to = age_group, values_to =rate)\n   @filter(Entity ∈ [\"France\",\"South Africa\"])\n   @group_by(Entity)\n   @arrange(Year)\n   @ungroup\nend\n\n\n1668×4 DataFrame1643 rows omitted\n\n\n\nRow\nEntity\nYear\nage_group\nrate\n\n\n\nString\nInt64\nString\nFloat64\n\n\n\n\n1\nFrance\n1816\nage0\n205.34\n\n\n2\nFrance\n1816\nage10\n6.15\n\n\n3\nFrance\n1816\nage25\n10.25\n\n\n4\nFrance\n1816\nage45\n14.52\n\n\n5\nFrance\n1816\nage65\n46.12\n\n\n6\nFrance\n1816\nage80\n163.13\n\n\n7\nFrance\n1817\nage0\n200.27\n\n\n8\nFrance\n1817\nage10\n6.42\n\n\n9\nFrance\n1817\nage25\n9.64\n\n\n10\nFrance\n1817\nage45\n14.81\n\n\n11\nFrance\n1817\nage65\n48.33\n\n\n12\nFrance\n1817\nage80\n159.54\n\n\n13\nFrance\n1818\nage0\n201.52\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n1657\nSouth Africa\n2020\nage0\n21.4911\n\n\n1658\nSouth Africa\n2020\nage10\n0.40998\n\n\n1659\nSouth Africa\n2020\nage25\n3.14994\n\n\n1660\nSouth Africa\n2020\nage45\n9.43341\n\n\n1661\nSouth Africa\n2020\nage65\n35.0478\n\n\n1662\nSouth Africa\n2020\nage80\n86.7938\n\n\n1663\nSouth Africa\n2021\nage0\n27.3008\n\n\n1664\nSouth Africa\n2021\nage10\n0.46976\n\n\n1665\nSouth Africa\n2021\nage25\n3.63036\n\n\n1666\nSouth Africa\n2021\nage45\n10.8592\n\n\n1667\nSouth Africa\n2021\nage65\n41.6478\n\n\n1668\nSouth Africa\n2021\nage80\n109.58\n\n\n\n\n\n\n\n\n\nCode\n  data_layer=data(two_country)\n  map_layer=mapping(:Year,:rate,layout=:age_group,color=:Entity)\n  visual_layer = visual(Lines,linewidth=2)\n  \n  plt=data_layer*map_layer*visual_layer\n  draw(plt,facet = (;linkyaxes = :none),legend=(position=:bottom, titleposition=:left, framevisible=true, padding=2))\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Annual death rates in people of different ages"
    ]
  },
  {
    "objectID": "vis/timeseries-aog.html",
    "href": "vis/timeseries-aog.html",
    "title": "Time Series in Aog",
    "section": "",
    "text": "Code\nusing StateSpaceModels,DataFrames,CSV \nusing AlgebraOfGraphics,CairoMakie\nusing Pipe,MakieThemes\nMakie.set_theme!(ggthemr(:dust))\n\n\n\n\nCode\n   axis=(title=\"Nile River Annual Flow\",xlabel=\"year\",ylabel=\"waer height\",xticklabelrotation=pi/8)\n   data_layter=@pipe CSV.File(StateSpaceModels.NILE) |&gt;DataFrame|&gt;data\n   map_layer=mapping(:year, :flow)\n   visual_layer=visual(Lines,color=:lightblue,linewidth=2)\n   draw(data_layter*map_layer*visual_layer,axis=axis)",
    "crumbs": [
      "Data Viz",
      "Time Series  in Aog"
    ]
  },
  {
    "objectID": "vis/test-tailwind.html",
    "href": "vis/test-tailwind.html",
    "title": "Test Tailwind css",
    "section": "",
    "text": "Code\ninclude(\"utils.jl\")\n\n\n[ Info: loading success\n\n\n\n\nCode\n  @htl(\"\"\"\n    &lt;button class=\"btn btn-primary rounded-1\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\"&gt;Toggle right offcanvas&lt;/button&gt;\n\n&lt;div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\"&gt;\n  &lt;div class=\"offcanvas-header\"&gt;\n    &lt;h5 id=\"offcanvasRightLabel\"&gt;Offcanvas right&lt;/h5&gt;\n    &lt;button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"&gt;&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;div class=\"offcanvas-body\"&gt;\n    ...\n  &lt;/div&gt;\n&lt;/div&gt;\n  \"\"\")\n\n\n    Toggle right offcanvas\n\n\n  \n    Offcanvas right\n    \n  \n  \n    ...",
    "crumbs": [
      "Data Viz",
      "Test Tailwind css"
    ]
  },
  {
    "objectID": "vis/use-ggplot-map.html",
    "href": "vis/use-ggplot-map.html",
    "title": "use ggplot2 map",
    "section": "",
    "text": "Code\nusing RCall \n\nR\"\"\"\nlibrary(ggplot2)\nlibrary(maps)\n\n# Import the data with coordinates\nworld &lt;- map_data(\"world\")\n\n# Plot the map. group = group connects the points in the correct order\nggplot(data = world, aes(x = long, y = lat, group = group)) + \n  geom_polygon() \n\n# Equivalent to:\nggplot(world, aes(map_id = region)) +\n  geom_map(data = world, map = world,\n    aes(x = long, y = lat, map_id = region))\n\"\"\"\n\n\n┌ Warning: RCall.jl: Warning: package ‘maps’ was built under R version 4.2.3\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n┌ Warning: RCall.jl: Warning in geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region)) :\n│   Ignoring unknown aesthetics: x and y\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n\n\n\n\n\n\n\n\n\nRObject{VecSxp}",
    "crumbs": [
      "Data Viz",
      "use ggplot2  map"
    ]
  },
  {
    "objectID": "math/2-function.html",
    "href": "math/2-function.html",
    "title": "2-Two Variables Function corss-section",
    "section": "",
    "text": "二元函数的分解理解\n\n\n\n二元函数可以从两个变量的方向分解开来研究\n固定一个变量, 改变另一个变量,得到一组一元函数\n在下列函数图里:\n\n第一列固定 y值(取一组离散值),改变 x值(连续变量)\n第二列x,y 都是连续值,二元函数自身\n第三列固定 x值(取一组离散值),改变 y值(连续变量)\n\n这里的方法和概率概念的边缘概率(marginal probability)一样, 意思是给定一个条件(固定一个值), 改变另一个变量的取值. 二元分布的概率密度函数就是二元函数,只不过曲线下积分等于 1\nCode\nusing GLMakie\nxs = ys = -3:0.1:3\nxs2 = ys2 = -2:1:2\nlen = length(xs)\nf1(x, y) = x^2 - y^2\nf2(x, y) = ℯ^(−(x^2) − (y^2))\nf3(x, y) = y^2\nf4(x, y) = 2 + 2x - y\nf5(x, y) = x + 2y + 3\nf6(x, y) = x^2 + y^2\nf7(x, y) = -x^2 - y^2\nf8(x, y) = x^2 \n\nfunc_arr = [f1,f2,f3,f4,f5,f6,f7,f8]\nlatexstr_arr=[L\"f(x, y) = x^2 - y^2\",L\"f(x,y)=ℯ^{−x^2 −y^2}\",L\"f(x,y)=y^2\",\nL\"f(x,y)=2 + 2x - y\",L\"f(x,y)=x + 2y + 3\",L\"f(x,y)=x^2 + y^2\",L\"f(x,y)=-(x^2+y^2)\",L\"f(x,y)=x^2\"]\n\n\"\"\"\n make_z(index::Int)\n 根据函数索引返回 julia 函数表达式和\n 函数 latex string\n\"\"\"\nfunction make_z(index::Int)\n    return ( (x,y)-&gt;func_arr[index](x,y),latexstr_arr[index])\nend\n\n\nmake_z\nCode\nfunction plot_func(func_z,latexstr)\n    f = Figure(resolution=(1800, 1000))\n    ax1 = Axis3(f[1, 1], title=L\"fixed y\", azimuth=0.3pi)\n    ax2 = Axis3(f[1, 2], title=L\"surface\", azimuth=0.3pi)\n    ax3 = Axis3(f[1, 3], title=L\"fixed x\", azimuth=0.3pi)\n    ax4 = Axis(f[2, 1])\n    ax5 = Axis(f[2, 3])\n    ax6 = Axis3(f[2, 2], azimuth=0.3pi)\n    Label(f[0, :], latexstr, fontsize=40)\n    zs = [func_z(x, y) for x in xs, y in ys]\n    surface!(ax2, xs, ys, zs, color=:lightblue)\n    for y in ys2\n        yspan = fill(y, len)\n        lines!(ax1, xs, yspan, func_z.(xs, yspan), color=:black, lw=3)\n        lines!(ax4, xs, func_z.(xs, y), color=:black, lw=3)\n        lines!(ax6, xs, yspan, func_z.(xs, yspan), color=:black, lw=3)\n    end\n    for x in xs2\n        xspan = fill(x, len)\n        lines!(ax3, xspan, ys, func_z.(xspan, ys), color=:red, lw=3)\n        lines!(ax5, ys, func_z.(x, ys), color=:red, lw=3)\n        lines!(ax6, xspan, ys, func_z.(xspan, ys), color=:red, lw=3)\n\n    end\n\n    surface!(ax6, xs, ys, zs, color=:lightblue)\n\n\n    return f\nend\n\n\nplot_func (generic function with 1 method)\nCode\nlet \nmake_z(1)|&gt;d-&gt;plot_func(d[1],d[2]) \nend",
    "crumbs": [
      "Math",
      "2-Two Variables Function corss-section"
    ]
  },
  {
    "objectID": "math/2-function.html#section",
    "href": "math/2-function.html#section",
    "title": "2-Two Variables Function corss-section",
    "section": "",
    "text": "Figure 1: 1\n\n\n\n\n\n\n\n\n\n\nFigure 2: 3\n\n\n\n\n\n\n\n\n\n\nFigure 3: 4\n\n\n\n\n\n\n\n\n\n\nFigure 4: 5\n\n\n\n\n\n\n\n\n\n\nFigure 5: 6\n\n\n\n\n\n\n\n\n\n\nFigure 6: 7\n\n\n\n\n\n\n\n\n\n\nFigure 7: 8\n\n\n\n\n\n\n\n\n\n\nFigure 8: 9\n\n\n\n\n\n\n\n\n\n\nFigure 9: 10",
    "crumbs": [
      "Math",
      "2-Two Variables Function corss-section"
    ]
  },
  {
    "objectID": "math/4-one-variable-integral.html",
    "href": "math/4-one-variable-integral.html",
    "title": "4-single-variable-integral",
    "section": "",
    "text": "一元函数积分示意\n\n\n\n欧拉方法, 改变Δx, 提高近似精度\n使用 rect = Rect(start-x,start-y,width,height)方法 绘制线性近似的矩形\n\nstart-x: 初始的点的 x 坐标\nstart-y 初始的点的 y 坐标 这里为 0 矩形初始点都在 x轴上\nwidth Δx\nheight 函数值\n\nfig[fldmod1(idx,3)...] fldmod1 方法来生成 plot layout\n\n\n\n\nCode\nusing GLMakie,Distributions,Pipe\n\nws=[1,0.8,0.5,0.3,0.2,0.1] #Δx 数组\nd=Normal()\nxs=-3:0.1:3 \nys=pdf.(d,xs)\n\n\"\"\"\n## define Rect\nrect = Rect(start-x,start-y,width,height)\n\"\"\"\nfunction  rect(;x=0,w=0.5)\n    return  Rect(x,0,w,pdf.(d,x))\nend\n\n\nfunction plot_hist(ax,box)\n    mesh!(ax, box, color=(:lightblue,0.4))\n    wireframe!(ax, box; color = :black, transparency=true)\nend\n\nfunction plot_res()\n    fig=Figure()\n    for (idx,w) in enumerate(ws)\n        local ax=Axis(fig[fldmod1(idx,3)...],title=L\"Δx=%$(w)\")\n        lines!(ax,xs,ys)\n        @pipe  Vector(-3:w:3).|&gt;rect(;x=_,w=w).|&gt;plot_hist(ax,_)\n    end\n    fig\n    #save(\"one-single-variable-euler-method-2.png\",fig)\nend\n\nplot_res()",
    "crumbs": [
      "Math",
      "4-single-variable-integral"
    ]
  },
  {
    "objectID": "math/5-himmelblau-function.html",
    "href": "math/5-himmelblau-function.html",
    "title": "5-himmelblau-plot",
    "section": "",
    "text": "配置 ssao\n\n\n\nCode\n  using GLMakie\n  GLMakie.activate!(ssao=true)\n  GLMakie.closeall() \n  fig = Figure(resolution = (800, 800))\n  ssao = Makie.SSAO(radius = 5.0, blur = 3)\n  ax = LScene(fig[1, 1], scenekw = (ssao=ssao,),show_axis=false)\n  ax.scene.ssao.bias[] = 0.025\n\n\n0.025",
    "crumbs": [
      "Math",
      "5-himmelblau-plot"
    ]
  },
  {
    "objectID": "math/5-himmelblau-function.html#load-package",
    "href": "math/5-himmelblau-function.html#load-package",
    "title": "5-himmelblau-plot",
    "section": "",
    "text": "配置 ssao\n\n\n\nCode\n  using GLMakie\n  GLMakie.activate!(ssao=true)\n  GLMakie.closeall() \n  fig = Figure(resolution = (800, 800))\n  ssao = Makie.SSAO(radius = 5.0, blur = 3)\n  ax = LScene(fig[1, 1], scenekw = (ssao=ssao,),show_axis=false)\n  ax.scene.ssao.bias[] = 0.025\n\n\n0.025",
    "crumbs": [
      "Math",
      "5-himmelblau-plot"
    ]
  },
  {
    "objectID": "math/5-himmelblau-function.html#define-bio-variate-funciton",
    "href": "math/5-himmelblau-function.html#define-bio-variate-funciton",
    "title": "5-himmelblau-plot",
    "section": "2 define bio-variate funciton",
    "text": "2 define bio-variate funciton\n\n2.1 配置函数\n\n\nmake_cubic: plot 小立方体函数\nmack_z : 根据传入函数的(x,y)坐标返回值, 即 z坐标值\n\n\n\n\nCode\n  make_cubic(;x=0,y=0,h,w)=Rect3f(Vec3f(x,y,0), Vec3f(w,w,h))\n\n  function make_z(func)\n   return (x,y)-&gt;func(x,y)\n  end\n\n\nmake_z (generic function with 1 method)\n\n\n\n\n2.2 二元函数\n\n不限于此\n\n\n\nCode\n  f(x,y)=cos(x) * sin(y)\n\n\nf (generic function with 1 method)",
    "crumbs": [
      "Math",
      "5-himmelblau-plot"
    ]
  },
  {
    "objectID": "math/5-himmelblau-function.html#plot",
    "href": "math/5-himmelblau-function.html#plot",
    "title": "5-himmelblau-plot",
    "section": "3 plot",
    "text": "3 plot\n\n\n可以改变 xs,ys step的值, 增加后, 立方体会变小\nbox_width=0.19 设置比xs,ys 的间隔小一点, 留出空隙\n\n\n\n\nCode\n    xs=range(0,15,50)\n    ys=range(0,15,50) \n    box_width=0.19\n    function plot_double_integ(funcz)\n      local box = [make_cubic(;x=x,y=y,h=funcz(x,y),w=box_width) for x in xs  for y in ys]\n      local zs=  [funcz(x,y) for x in xs , y in ys]\n      for  i in eachindex(box)\n      mesh!(ax, box[i], ssao=true,color=:lightblue)\n      wireframe!(ax, box[i]; color = :black, transparency=true)\n    end\n\n    #wireframe!(ax,xs,ys,zs,color=(:red,0.8),linewidth=1)\n    fig\n  end\n\n  make_z(f)|&gt;plot_double_integ",
    "crumbs": [
      "Math",
      "5-himmelblau-plot"
    ]
  },
  {
    "objectID": "math/3-oval-spere.html",
    "href": "math/3-oval-spere.html",
    "title": "3-oval-sphere-params-equation",
    "section": "",
    "text": "球体参数方程\n球体可以看做是二元球面的连续积分,这里的离散球面图和二元函数的分解道理相同\n\n\n\nCode\n  using GLMakie,LinearAlgebra\nlet\nuspan=0:0.01:1.82pi  #  不要到 2pi, 留出空隙, 可以观察内部\nvspan=0:0.01:1pi\nf = Figure()\nax = Axis3(f[1, 1];azimuth=-0.1pi,elevation=-0.05pi)\ncol = repeat([1:50;50:-1:1],outer=2)\n\n\nfunction plot_sphere(r::Int)\n    xs=[r*cos(u)*sin(v) for u in uspan,v in vspan]\n    ys=[r*sin(u)*sin(v) for u in uspan,v in vspan]\n    zs=[r*cos(v) for u in uspan,v in vspan]\n    surface!(xs,ys,zs,color=color=col)\nend\n\n\nfor  r in [2,5,8]\n    plot_sphere(r)\nend\n\n\nf\nend",
    "crumbs": [
      "Math",
      "3-oval-sphere-params-equation"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "内容简介",
    "section": "",
    "text": "介绍\n\n\n\nGLMakie 方法\n\n\nCourse info & details here\ncommit chage gh-pages",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "statistics/15-bubble-plot.html",
    "href": "statistics/15-bubble-plot.html",
    "title": "15-bubble-plot",
    "section": "",
    "text": "简介\n\n\n\n\nref csv",
    "crumbs": [
      "Statistics",
      "15-bubble-plot"
    ]
  },
  {
    "objectID": "statistics/15-bubble-plot.html#load-pacakge",
    "href": "statistics/15-bubble-plot.html#load-pacakge",
    "title": "15-bubble-plot",
    "section": "1. load pacakge",
    "text": "1. load pacakge\n\n\nCode\nusing GLMakie,CSV,DataFrames,GLMakie,LinearAlgebra,Pipe",
    "crumbs": [
      "Statistics",
      "15-bubble-plot"
    ]
  },
  {
    "objectID": "statistics/15-bubble-plot.html#load-data-dataframe",
    "href": "statistics/15-bubble-plot.html#load-data-dataframe",
    "title": "15-bubble-plot",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\nfeature=[\"Height\",\"Weight\",\"Bodyfat\"]\ndata=@pipe CSV.File(\"./data/BodyFat.csv\")|&gt;DataFrame|&gt;dropmissing|&gt;select(_,feature)\nfirst(data,10)\n\n\n10×3 DataFrame\n\n\n\nRow\nHeight\nWeight\nBodyfat\n\n\n\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n73.5\n247.25\n32.3\n\n\n2\n71.5\n177.25\n22.5\n\n\n3\n69.0\n156.25\n22.0\n\n\n4\n67.75\n154.25\n12.3\n\n\n5\n70.0\n177.0\n20.5\n\n\n6\n72.0\n198.0\n22.6\n\n\n7\n71.5\n200.5\n28.7\n\n\n8\n70.25\n163.0\n21.3\n\n\n9\n71.5\n241.25\n29.9\n\n\n10\n71.0\n218.5\n21.3",
    "crumbs": [
      "Statistics",
      "15-bubble-plot"
    ]
  },
  {
    "objectID": "statistics/15-bubble-plot.html#plot-bubble-img",
    "href": "statistics/15-bubble-plot.html#plot-bubble-img",
    "title": "15-bubble-plot",
    "section": "3. plot bubble img",
    "text": "3. plot bubble img\n\n\nCode\n    function plot_bubble()\n        fig=Figure()\n        ax=Axis(fig[1,1];title=\"Bubble size: BodyFat\",xlabel=\"$(feature[1])\",ylabel=\"$(feature[2])\")\n        Box(fig[1,1];color = (:orange,0.1),strokewidth=0.5)\n        scatter!(ax,data[!,1],data[!,2],markersize=data[!,3].*2,color=(:blue,0.2),strokewidth=3,strokecolor=:black)\n        fig\n        #save(\"Bubble-size-BodyFat.png\",fig)\n    end\n\n    plot_bubble()",
    "crumbs": [
      "Statistics",
      "15-bubble-plot"
    ]
  },
  {
    "objectID": "statistics/1-normaldist.html",
    "href": "statistics/1-normaldist.html",
    "title": "1-normal-distributions",
    "section": "",
    "text": "gaussian distributions\n\n\n\n目的: 增强显示效果\n\n\n\n\nCode\n  using GLMakie, Distributions, Random\n  Random.seed!(124)\n\n  colors = [\"#FF410D\", \"#6EE2FF\", \"#F7C530\", \"#95CC5E\", \"#D0DFE6\", \"#F79D1E\"]\n  μσpairs = [[-3, 1], [-0.3, 1], [0, 1], [1.2, 1], [4, 1], [5, 1]] #方差相同, 均值变化\n  μσpairs2 = [[0, 0.8], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]]   # 均值相同, 方差变化\n\n  ts = range(-10, 10, 200)\n  fig = Figure(resolution=(1000, 600))\n  ax1 = Axis(fig[1, 1:2], xlabel=\"μ change, σ=1\")\n  ax2 = Axis(fig[1, 3], xlabel=\"μ=0,σ change\")\n\n  for (p, p2, c) in zip(μσpairs, μσpairs2, colors)\n      local pdf1(x) = pdf(Normal(p...), x)\n      local pdf2(x) = pdf(Normal(p2...), x)\n      lines!(ax1, ts, pdf1.(ts), label=\"$(p[1]),  $(p[2])\", color=c, linewidth=3)\n      band!(ax1, ts, fill(0, length(ts)), pdf1.(ts); color=(c, 0.1)) #半透明区域\n      lines!(ax2, ts, pdf2.(ts), label=\"$(p2[1]),  $(p2[2])\", color=c, linewidth=3)\n      band!(ax2, ts, fill(0, length(ts)), pdf2.(ts); color=(c, 0.1)) #半透明区域\n  end\n  axislegend(ax1)\n  axislegend(ax2)\n  fig",
    "crumbs": [
      "Statistics",
      "1-normal-distributions"
    ]
  },
  {
    "objectID": "statistics/2-2d-descison-boundary.html",
    "href": "statistics/2-2d-descison-boundary.html",
    "title": "2-2dimension decision boundary",
    "section": "",
    "text": "Code\nusing GLMakie\nusing StatsFuns: logistic",
    "crumbs": [
      "Statistics",
      "2-2dimension decision boundary"
    ]
  },
  {
    "objectID": "statistics/2-2d-descison-boundary.html#load-package",
    "href": "statistics/2-2d-descison-boundary.html#load-package",
    "title": "2-2dimension decision boundary",
    "section": "",
    "text": "Code\nusing GLMakie\nusing StatsFuns: logistic",
    "crumbs": [
      "Statistics",
      "2-2dimension decision boundary"
    ]
  },
  {
    "objectID": "statistics/2-2d-descison-boundary.html#plots",
    "href": "statistics/2-2d-descison-boundary.html#plots",
    "title": "2-2dimension decision boundary",
    "section": "3. plots",
    "text": "3. plots\n\n\nCode\nfontsize_theme = Theme(fontsize=16)\nset_theme!(fontsize_theme)\n\nfig = Figure(resolution=(900,900))\n\nfunction surface_data(w)\n    fun(x, y) = logistic(w' * [x, y])\n    span = range(-10, 10, 100)\n    zs = [fun(x, y) for x in span, y in span]\n    return span, span, zs\nend\n\nws = [3, 0, -3]\nlet\n    for (idx, x) in enumerate(ws)\n        for (idy, y) in enumerate(ws)\n            w = [x, y] == [0, 0] ? vec([0, 0.5]) : vec([x, y])\n            xs, ys, zs = surface_data(w)\n            ax = Axis3(fig[idx, idy], title=\"w=($(w[1]),$(w[2]))\")\n            surface!(ax, xs, ys, zs)\n        end\n    end\nend\n\nfig\n\n\n\n\n\n\n\n\nFigure 1: 2d-decision-boundary",
    "crumbs": [
      "Statistics",
      "2-2dimension decision boundary"
    ]
  },
  {
    "objectID": "statistics/6-mutli-variable-distributions.html",
    "href": "statistics/6-mutli-variable-distributions.html",
    "title": "6-bio-normal-dist",
    "section": "",
    "text": "Code\nusing GLMakie\nusing Distributions\nusing Latexify\n\nGLMakie.activate!()\n\nn=100\nxs=ys=range(-4,4,n)\nμ=[0 , 0]\nΣ=[1 0 ; 0 1]\nd=MvNormal(μ,Σ)\nd2=Normal()\nzs=[pdf(d,[x,y]) for x in xs , y in ys]\n\n# 投影到 x-z 平面数据\nxz=[Point3f(4,y,pdf(d2,y)/2) for y in ys]\n\n# 投影到 y-z 平面数据\nyz=[Point3f(x,4,pdf(d2,x)/2) for x in ys]\n\n\nstr=latexify([0,0])\nfig = Figure(size=(600,600))\nax = Axis3(fig[1, 1],title=L\"\\mu \")\nsurface!(xs,ys,zs;space=:data)\nlines!(ax, xz;linewidth=3)\nlines!(ax, yz;linewidth=3)\n\nfig\n#save(\"./imgs/mutli-normal-dist.png\",fig)",
    "crumbs": [
      "Statistics",
      "6-bio-normal-dist"
    ]
  },
  {
    "objectID": "statistics/13-understand-bayes.html",
    "href": "statistics/13-understand-bayes.html",
    "title": "13-understanding-bayes",
    "section": "",
    "text": "简介\n\n\n\n下面我们考察一下一枚硬币真实参数为:p(head)=0.6的硬币在不同观察结果(obs)下的似然率估计\n估计两个点p(head)=[a=0.5,b=0.8]\n在这两个点的最大似然率的估计可以表示为赔率(odds), 注意这不是概率\n可以直观的在概率密度图上观察到两者的差异\n当 观测值逐渐增加以后, 两个点的条件概率会趋近于 0, 赔率会趋近于 1 \\[L(a,b)=\\frac{p(obs|a)}{p(obs|b)}\\]",
    "crumbs": [
      "Statistics",
      "13-understanding-bayes"
    ]
  },
  {
    "objectID": "statistics/13-understand-bayes.html#load-package",
    "href": "statistics/13-understand-bayes.html#load-package",
    "title": "13-understanding-bayes",
    "section": "1. load package",
    "text": "1. load package\n\n using Distributions,GLMakie",
    "crumbs": [
      "Statistics",
      "13-understanding-bayes"
    ]
  },
  {
    "objectID": "statistics/13-understand-bayes.html#define-likelihood-function",
    "href": "statistics/13-understand-bayes.html#define-likelihood-function",
    "title": "13-understanding-bayes",
    "section": "2. define likelihood function",
    "text": "2. define likelihood function\n\nxc=[0.5,0.8]\nfunction plot_likelihood(;p=0.6,n=10,s=6)\n    probrange=range(0.0,1.0,50)\n    fig=Figure(resolution=(500,300))\n    ax=Axis(fig[1,1])\n    fun(p)=Binomial(n,p)|&gt;d-&gt;pdf(d,s)\n    data=Float64[fun(p) for p in probrange]\n    \n\n    pdf1=fun(xc[1]);pdf2=fun(xc[2])\n    lines!(ax,probrange,data,label=\"n=$(n),success=$(s)\")\n    scatter!(ax,xc,[pdf1,pdf2];color=[:red,:green],markersize=20)\n    lines!(ax,[xc[1],xc[2],xc[2]],[pdf1,pdf1,pdf2];linestyle=:dot)\n    axislegend(halign =:left, valign =:top)\n    fig\nend\n\nplot_likelihood (generic function with 1 method)",
    "crumbs": [
      "Statistics",
      "13-understanding-bayes"
    ]
  },
  {
    "objectID": "statistics/13-understand-bayes.html#plot-results",
    "href": "statistics/13-understand-bayes.html#plot-results",
    "title": "13-understanding-bayes",
    "section": "3. plot results",
    "text": "3. plot results\n\n3.1 10 次硬币试验,6 次正面\n两个点的高度相除就是基于实验观察的赔率\n\nplot_likelihood()\n\n\n\n\n\n\n\n\n\n\n3.2 100次试验 60 次正面\n\nplot_likelihood(;p=0.6,n=100,s=60)\n\n\n\n\n\n\n\n\n\n\n3.3 500次试验,300 次正面\n\nplot_likelihood(;p=0.6,n=500,s=300)\n\n\n\n\n\n\n\n\n\n在上述实验中模型参数是事先知道的:p(head)=0.6,但是对于很多问题, 参数未知. 在这种情况下, 如果给定两个参数, 优先选择赔率最大的参数作为估计",
    "crumbs": [
      "Statistics",
      "13-understanding-bayes"
    ]
  },
  {
    "objectID": "statistics/17-normal-noise-data.html",
    "href": "statistics/17-normal-noise-data.html",
    "title": "normal-noise-data",
    "section": "",
    "text": "info\n\n\n\nref :Understanding Regression Analysis_ A Conditional Distribution Approah-CRC (2020)\n观点: 数据测量并不是一次性的. 在反复的测量中, 出现的数据点代表了附近邻居的信息, 与数据点性质越接近的邻居 测量值越接近于这个值. 在实际使用中, 数据点和附近邻居点的信息偏差可以用正态分布来建模",
    "crumbs": [
      "Statistics",
      "normal-noise-data"
    ]
  },
  {
    "objectID": "statistics/17-normal-noise-data.html#load-pacakge",
    "href": "statistics/17-normal-noise-data.html#load-pacakge",
    "title": "normal-noise-data",
    "section": "1. load pacakge",
    "text": "1. load pacakge\n\nusing GLMakie, Distributions, Random \nRandom.seed!(34343)\n\nTaskLocalRNG()",
    "crumbs": [
      "Statistics",
      "normal-noise-data"
    ]
  },
  {
    "objectID": "statistics/17-normal-noise-data.html#make-noise-data",
    "href": "statistics/17-normal-noise-data.html#make-noise-data",
    "title": "normal-noise-data",
    "section": "2. make noise data",
    "text": "2. make noise data\n\nstep=80\nxs=ys=range(-4,4,step)\nzs=range(0,1,step)\n\nnoise_dist=Normal(0,0.4)\nf(x)=2(x)\ndata=f.(xs)\nnoise=rand(noise_dist,step)\nnoise_data=data+noise\nzsd=fill(0,step)\n\n80-element Vector{Int64}:\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n ⋮\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0",
    "crumbs": [
      "Statistics",
      "normal-noise-data"
    ]
  },
  {
    "objectID": "statistics/17-normal-noise-data.html#plot",
    "href": "statistics/17-normal-noise-data.html#plot",
    "title": "normal-noise-data",
    "section": "3. plot",
    "text": "3. plot\n\nfig=Figure(resolution=(800,600))\nax=Axis3(fig[1,1],limits=(-4,4,-4,4,0,1),aspect = (1.5, 1, 2/3),azimuth=-0.2pi)\n\nlines!(ax, xs, data,zsd, linestyle=:dot, linewidth=8,color=(:red, 0.8),label=\"real data\")\nscatter!(ax, xs, noise_data,zsd,marker=:circle,markersize=16,color=(:lightgreen,0.1),strokewidth=2,strokecolor=:black,label=\"noise data\")\n\nfor i in [-2,0,2]\n    local dist=Normal(i,0.4)\n    local data=[Point3f(i,y,pdf(dist,y)) for y in ys]\n    lines!(ax, data,label=\"noise dist at $i\")\nend\n\naxislegend(ax)\nfig",
    "crumbs": [
      "Statistics",
      "normal-noise-data"
    ]
  },
  {
    "objectID": "statistics/4-pair-plots.html",
    "href": "statistics/4-pair-plots.html",
    "title": "4-pair-plots",
    "section": "",
    "text": "\"\"\"\n probml page 35 fig1.3\n findall(x -&gt; x == c, byCat)  参考 beautiful makie 代码\n\"\"\"\n\n\nCode\nusing MLJ,DataFrames,GLMakie\n    fontsize_theme = Theme(fontsize = 10)\n    set_theme!(fontsize_theme)\n\n    iris = load_iris(); \n    iris = DataFrames.DataFrame(iris);\n    #y, X = unpack(iris, ==(:target); rng=123);\n    byCat = iris.target\n    categ = unique(byCat)\n    label=[\"sepal_length\",\"sepal_width\",\"petal_length\",\"petal_width\"]\n    axs=[]\n    colors1 = [:orange,:lightgreen,:purple]\n   \n\n    fig = Figure(resolution=(1400,1400))\n   \n    function plot_diag(i,j)\n            \n                ax = Axis(fig[i, i])\n                push!(axs,ax)\n                for (j, c) in enumerate(categ)\n                    indc = findall(x -&gt; x == c, byCat)\n                    density!(ax, iris[:,i][indc]; color = (colors1[j], 0.5), label = \"$(c)\",\n                        strokewidth = 1.25, strokecolor = colors1[j])\n                end\n    end\n\n\n\"\"\"\n    plot_cor(i,j)\n    生成非对角列的散点图\nTBW\n\"\"\"\nfunction plot_cor(i,j)\n        ax = Axis(fig[i, j])\n        #push!(axs,ax)\n            for (k, c) in enumerate(categ)\n                indc = findall(x -&gt; x == c, byCat)\n                #@show indc\n                scatter!(ax, iris[:,i][indc],iris[:,j][indc];color=colors1[k])\n            end\n    end\n\n    function plot_pair()\n        [( i==j ? plot_diag(i,j) : plot_cor(i,j)) for i in 1:4,j in 1:4]\n    end\n\n    function add_xy_label()\n        for i in 1:4\n         axx=Axis(fig[4, i], xlabel =label[i],)\n         axy=Axis(fig[i, 1], ylabel =label[i],)\n        end\n    end\n    \n    function  add_legend()\n        Legend(fig[2:3, 5], axs[1],\"Label\";width=100,height=200)\n    end\n    \n    \n    \n     function main()\n       plot_pair()\n       add_xy_label()\n       add_legend()\n       fig\n       #save(\"./imgs/iris-corner-plot2.png\",fig)\n     end\n   #save(\"./imgs/iris-corner-plot.png\",fig)\n\n\nmain (generic function with 1 method)\n\n\n\nPlotData\n\n\n\n\nCode\nwith_theme(fontsize_theme, fontsize = 25) do\n    main()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n  first(iris,10)\n\n\n10×5 DataFrame\n\n\n\nRow\nsepal_length\nsepal_width\npetal_length\npetal_width\ntarget\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nCat…\n\n\n\n\n1\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n2\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n3\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n6\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n7\n4.6\n3.4\n1.4\n0.3\nsetosa\n\n\n8\n5.0\n3.4\n1.5\n0.2\nsetosa\n\n\n9\n4.4\n2.9\n1.4\n0.2\nsetosa\n\n\n10\n4.9\n3.1\n1.5\n0.1\nsetosa",
    "crumbs": [
      "Statistics",
      "4-pair-plots"
    ]
  },
  {
    "objectID": "statistics/8-dotplot.html",
    "href": "statistics/8-dotplot.html",
    "title": "8-dotplot",
    "section": "",
    "text": "简介\n\n\n\n用于单一属性的频数统计\n\nfrom Creating Stacked Dot Plots in R\n使用 RCall.jl,ggplot2\n在 lock5 stat 中会大量使用这个方法",
    "crumbs": [
      "Statistics",
      "8-dotplot"
    ]
  },
  {
    "objectID": "statistics/8-dotplot.html#load-package",
    "href": "statistics/8-dotplot.html#load-package",
    "title": "8-dotplot",
    "section": "1. load package",
    "text": "1. load package\n\n\nCode\nusing TidierPlots,RCall\nusing DataFrames,Random\nRandom.seed!(121212)\n\n\nTaskLocalRNG()",
    "crumbs": [
      "Statistics",
      "8-dotplot"
    ]
  },
  {
    "objectID": "statistics/8-dotplot.html#make-data",
    "href": "statistics/8-dotplot.html#make-data",
    "title": "8-dotplot",
    "section": "2. make data",
    "text": "2. make data\n\n\nCode\nraw=rand(1:20,100)\ndf=DataFrame(x=raw)\nshow(df)\n\n\n100×1 DataFrame\n Row │ x     \n     │ Int64 \n─────┼───────\n   1 │    19\n   2 │     2\n   3 │    15\n   4 │    16\n   5 │    16\n   6 │    18\n   7 │    15\n   8 │    13\n   9 │    12\n  10 │     2\n  11 │    20\n  ⋮  │   ⋮\n  91 │     3\n  92 │    12\n  93 │     8\n  94 │    16\n  95 │     3\n  96 │     3\n  97 │     8\n  98 │    14\n  99 │    14\n 100 │    12\n79 rows omitted",
    "crumbs": [
      "Statistics",
      "8-dotplot"
    ]
  },
  {
    "objectID": "statistics/8-dotplot.html#plot",
    "href": "statistics/8-dotplot.html#plot",
    "title": "8-dotplot",
    "section": "3. plot",
    "text": "3. plot\n\n\nCode\n    @rput df\n    R\"\"\"\n    library(ggplot2)\n   ggplot(df, aes(x = x)) + \n  geom_dotplot(dotsize = .75, stackratio = 1.2, \n               fill = \"steelblue\") + \n  scale_y_continuous(NULL, breaks = NULL) + \n  labs(title = \"Stacked Dot Plot\", x = \"Data Values\") +\n  theme_minimal()\n    \"\"\"\n\n\n┌ Warning: RCall.jl: Bin width defaults to 1/30 of the range of the data. Pick better value with\n│ `binwidth`.\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n\n\n\n\n\n\n\n\n\nRObject{VecSxp}",
    "crumbs": [
      "Statistics",
      "8-dotplot"
    ]
  },
  {
    "objectID": "statistics/9-2d-decision-boundary.html",
    "href": "statistics/9-2d-decision-boundary.html",
    "title": "9-2d-descision-boundary",
    "section": "",
    "text": "简介\n\n\n\n\nref: probml page84 figure 2.13\ndataset:iris\nplots:使用 GLMakie:contourf 方法",
    "crumbs": [
      "Statistics",
      "9-2d-descision-boundary"
    ]
  },
  {
    "objectID": "statistics/9-2d-decision-boundary.html#load-package",
    "href": "statistics/9-2d-decision-boundary.html#load-package",
    "title": "9-2d-descision-boundary",
    "section": "1. load package",
    "text": "1. load package\n\n\nCode\n    import MLJ:fit!,fitted_params\n    using GLMakie,MLJ,CSV,DataFrames",
    "crumbs": [
      "Statistics",
      "9-2d-descision-boundary"
    ]
  },
  {
    "objectID": "statistics/9-2d-decision-boundary.html#process-data",
    "href": "statistics/9-2d-decision-boundary.html#process-data",
    "title": "9-2d-descision-boundary",
    "section": "2 process data",
    "text": "2 process data\n\n2.1 import iris datset\n\n\nCode\niris = load_iris();\n\n#selectrows(iris, 1:3)  |&gt; pretty\n\niris = DataFrames.DataFrame(iris);\nfirst(iris,5)|&gt;display\ny, X = unpack(iris, ==(:target); rng=123);\n\nX=select!(X,3:4)\n\nbyCat = iris.target\ncateg = unique(byCat)\ncolors = [:orange,:lightgreen,:purple];\n\n\n5×5 DataFrame\n\n\n\nRow\nsepal_length\nsepal_width\npetal_length\npetal_width\ntarget\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nCat…\n\n\n\n\n1\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n2\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n3\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n\n\n\n\n\n\n2.2 make desc boundary data\n\n生成决策边界实际是利用训练模型对区间内的每个点都做出预测,利用两个属性的最大值和最小值 生成 grid 数据,这是 test数据\n\n\n\nCode\n# grid data\n   n1 = n2 = 20\n   tx = LinRange(0, 8, 40)\n   ty = LinRange(-1, 4, 40)\n   X_test = mapreduce(collect, hcat, Iterators.product(tx, ty))\n   X_test = MLJ.table(X_test')\n\n\nTables.MatrixTable{LinearAlgebra.Adjoint{Float64, Matrix{Float64}}} with 1600 rows, 2 columns, and schema:\n :x1  Float64\n :x2  Float64",
    "crumbs": [
      "Statistics",
      "9-2d-descision-boundary"
    ]
  },
  {
    "objectID": "statistics/9-2d-decision-boundary.html#logisitcs-model",
    "href": "statistics/9-2d-decision-boundary.html#logisitcs-model",
    "title": "9-2d-descision-boundary",
    "section": "3. Logisitcs model",
    "text": "3. Logisitcs model\n\n3.1 training model\n\n\nCode\n   LogisticClassifier = @load LogisticClassifier pkg=MLJLinearModels\n   #X, y = make_blobs(centers = 2)\n   mach = fit!(machine(LogisticClassifier(), X, y))\n   predict(mach, X)\n   fitted_params(mach)\n   probs=predict(mach, X_test)|&gt;Array #返回分类概率值\n   probres=[broadcast(pdf, probs,cat) for cat in categ]\n\n\nimport MLJLinearModels ✔\n\n\n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: Training machine(LogisticClassifier(lambda = 2.220446049250313e-16, …), …).\n┌ Info: Solver: MLJLinearModels.LBFGS{Optim.Options{Float64, Nothing}, NamedTuple{(), Tuple{}}}\n│   optim_options: Optim.Options{Float64, Nothing}\n└   lbfgs_options: NamedTuple{(), Tuple{}} NamedTuple()\n\n\n3-element Vector{Vector{Float64}}:\n [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  9.671834765600391e-132, 7.370874765820906e-135, 5.617320408186208e-138, 4.2809421636823794e-141, 3.2624925190464766e-144, 2.4863352574885955e-147, 1.8948282567827453e-150, 1.4440426374071983e-153, 1.1005003388488668e-156, 8.38687836794779e-160]\n [2.6707314921073497e-56, 1.0760270944086094e-53, 4.335270360659973e-51, 1.7466631832673993e-48, 7.037236485793986e-46, 2.835274587075858e-43, 1.142320852844153e-40, 4.6023652763324474e-38, 1.8542746623291115e-35, 7.470798854313656e-33  …  1.3627080472304016e-14, 4.184137656019423e-15, 1.2847218419308875e-15, 3.9446842977544977e-16, 1.2111986969540427e-16, 3.718934578207533e-17, 1.1418831965200673e-17, 3.5061042539858484e-18, 1.0765345419987361e-18, 3.305453963038536e-19]\n [1.6814079540479983e-80, 2.2062917118777524e-77, 2.8950280068446543e-74, 3.798766552624987e-71, 4.9846244275441556e-68, 6.540670593853871e-65, 8.582466430351137e-62, 1.1261648017760677e-58, 1.4777187549191659e-55, 1.9390170205959138e-52  …  0.9999999999999865, 0.9999999999999958, 0.9999999999999987, 0.9999999999999996, 0.9999999999999998, 1.0, 1.0, 1.0, 1.0, 1.0]\n\n\n\n\nCode\nfunction plot_res_contour()\n    fig=Figure()\n    ax = Axis(fig[1, 1], xlabel=\"petal-length\", ylabel=\"petal-width\", title=\"2d3class-contour\")\n    \n    \n    for (idx,cat) in enumerate(categ)\n        indc = findall(x -&gt; x == cat, byCat)\n        scatter!(ax,iris[:,3][indc],iris[:,4][indc];color=(colors[idx], 0.8), markersize=probres[idx].*10, strokewidth=1, strokecolor=:black, label=\"$cat\")\n        \n    end\n   fig\nend\nplot_res_contour()",
    "crumbs": [
      "Statistics",
      "9-2d-descision-boundary"
    ]
  },
  {
    "objectID": "statistics/5-2d-decision-boundary.html",
    "href": "statistics/5-2d-decision-boundary.html",
    "title": "5-2d-decision-boundary",
    "section": "",
    "text": "Code\nimport MLJ:fit!,predict,predict_mode,predict_mean,machine\nusing MLJ,GLMakie,Random,DataFrames\n\niris = load_iris(); \niris =DataFrame(iris);\nnums=100\n\niris[!, :target] = [r.target == \"virginica\" ? 1.0 : 0.0 for r in eachrow(iris)]\niris=coerce(iris, :target=&gt; Multiclass )\ngdf=groupby(iris, :target)\nX,y=iris[:,3:4],iris[:,:target]\n\ncats=levels(y)\n\nfunction boundary_data(df,;n=nums)\n    n1=n2=n\n    xlow,xhigh=extrema(df[:,1])\n    ylow,yhigh=extrema(df[:,2])\n    tx = LinRange(xlow,xhigh,n1)\n    ty = LinRange(ylow,yhigh,n2)\n    x_test = mapreduce(collect, hcat, Iterators.product(tx, ty));\n    x_test=MLJ.table(x_test')\n    return tx,ty,x_test\nend\ntx,ty,x_test=boundary_data(X)\n\n\nusing MLJ\nLogisticClassifier = @load LogisticClassifier pkg=MLJLinearModels\n#X, y = make_blobs(centers = 2)\nmach = fit!(machine(LogisticClassifier(), X, y))\npredict(mach, X)\nfitted_params(mach)\nprobs=predict(mach, x_test)|&gt;Array #返回分类概率值\nprobs_res=broadcast(pdf, probs, 1.0).|&gt;(d-&gt;round(d,digits=2))|&gt;d-&gt;reshape(d,nums,nums) #返回概率为1.0(\"virginica\")的概率值\n\n\n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: Training machine(LogisticClassifier(lambda = 2.220446049250313e-16, …), …).\n┌ Info: Solver: MLJLinearModels.LBFGS{Optim.Options{Float64, Nothing}, NamedTuple{(), Tuple{}}}\n│   optim_options: Optim.Options{Float64, Nothing}\n└   lbfgs_options: NamedTuple{(), Tuple{}} NamedTuple()\n\n\nimport MLJLinearModels ✔\n\n\n100×100 Matrix{Float64}:\n 0.0   0.0   0.0   0.0   0.0   0.0   …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0   …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0   …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0   0.0   0.0   0.0   0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0  0.0\n ⋮                             ⋮     ⋱            ⋮                   \n 0.0   0.0   0.0   0.0   0.0   0.0      1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.0   0.0   0.0   0.0      1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.0   0.0   0.0   0.0   …  1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.0   0.0   0.0   0.0      1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.0   0.0   0.0   0.0      1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.0   0.0   0.0   0.0      1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.0   0.0   0.01  0.01     1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.0   0.01  0.01  0.01  …  1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.0   0.0   0.01  0.01  0.01  0.01     1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.01  0.01  0.01  0.01  0.01  0.02     1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.01  0.01  0.01  0.02  0.02  0.03     1.0  1.0  1.0  1.0  1.0  1.0  1.0\n 0.01  0.01  0.02  0.02  0.03  0.04     1.0  1.0  1.0  1.0  1.0  1.0  1.0",
    "crumbs": [
      "Statistics",
      "5-2d-decision-boundary"
    ]
  },
  {
    "objectID": "statistics/5-2d-decision-boundary.html#plot-results",
    "href": "statistics/5-2d-decision-boundary.html#plot-results",
    "title": "5-2d-decision-boundary",
    "section": "plot results",
    "text": "plot results\n\n\nCode\n    fig=Figure(resolution=(1600,800))\n\n    function plot_res_contour()\n\n        ax = Axis(fig[1, 1], xlabel=\"petal-length\", ylabel=\"petal-width\", title=\"2d2class-contour\")\n        contour!(ax, tx, ty, probs_res; labels=true)\n        colors = [:red, :blue]\n        for i in 1:2\n            scatter!(ax, gdf[i][:, 3], gdf[i][:, 4], color=(colors[i], 0.8), marker=:circle, markersize=10, strokewidth=1, strokecolor=:black, label=gdf[i][1, 5] == 1 ? \"virginica\" : \"non-virginica\")\n        end\n        axislegend(ax, position=:lt)\n        #save(\"./imgs/iris-logreg-2d-2class-contourf.png\",fig)\n        fig\n    end\n\n    function plot_res_contourf()\n\n        ax = Axis(fig[1, 2], xlabel=\"petal-length\", ylabel=\"petal-width\", title=\"2d2class-contourf\")\n        contourf!(ax, tx, ty, probs_res; levels=6, colormap=(:heat, 0.5))\n        #contourf!(ax,tx,ty,yhat;levels=length(cats),colormap=(:heat,0.5))\n        colors = [:red, :blue]\n        for i in 1:2\n            scatter!(ax, gdf[i][:, 3], gdf[i][:, 4], color=(colors[i], 0.8), marker=:circle, markersize=10, strokewidth=1, strokecolor=:black, label=gdf[i][1, 5] == 1.0 ? \"virginica\" : \"non-virginica\")\n        end\n        axislegend(ax, position=:lt)\n        #save(\"./imgs/iris-logreg-2d-2class-contourf.png\",fig)\n        fig\n    end\n\n    plot_res_contourf()\n    plot_res_contour()",
    "crumbs": [
      "Statistics",
      "5-2d-decision-boundary"
    ]
  },
  {
    "objectID": "statistics/3-bio-norm-dist.html",
    "href": "statistics/3-bio-norm-dist.html",
    "title": "3-biovariate-normal-dist",
    "section": "",
    "text": "Code\n  using GLMakie, Distributions\n  using FileIO",
    "crumbs": [
      "Statistics",
      "3-biovariate-normal-dist"
    ]
  },
  {
    "objectID": "statistics/3-bio-norm-dist.html#load-package",
    "href": "statistics/3-bio-norm-dist.html#load-package",
    "title": "3-biovariate-normal-dist",
    "section": "",
    "text": "Code\n  using GLMakie, Distributions\n  using FileIO",
    "crumbs": [
      "Statistics",
      "3-biovariate-normal-dist"
    ]
  },
  {
    "objectID": "statistics/3-bio-norm-dist.html#plot",
    "href": "statistics/3-bio-norm-dist.html#plot",
    "title": "3-biovariate-normal-dist",
    "section": "2. plot",
    "text": "2. plot\n\n\nCode\n    μ = [0, 0]\n    Σ₁ = [2 1.8; 1.8 2]\n    Σ₂ = [1 0; 0 3]\n    Σ₃ = [1 0; 0 1]\n    simga_dict = Dict(\"full\" =&gt; Σ₁, \"diagonal\" =&gt; Σ₂, \"spherical\" =&gt; Σ₃)\n    fig = Figure(resolution=(1200, 800))\n\n    function load_img(src)\n        load(\"./imgs/$(src).png\")\n    end\n\n    function binormal_plot(; μ=[0, 0], Σmatrix::Dict=simga_dict, up::Int=4, n::Int=100)\n        xs = ys = range(-up, up, n)\n        simga_keys = keys(Σmatrix)\n        for (idx, val) in enumerate(simga_keys)\n                local cormatrix = Σmatrix[val]\n                local img=load_img(val)\n                local d = MvNormal(μ, cormatrix)\n                local zs = [pdf(d, [x, y]) for x in xs, y in ys]\n                local ax1 = Axis3(fig[1, idx], title=\"$(val)\")\n                local ax2=  Axis(fig[2, idx],aspect = DataAspect(),height=60)\n                local ax3 = Axis(fig[3, idx];)\n                hidedecorations!(ax2)\n                hidespines!(ax2)\n                surface!(ax1, xs, ys, zs)\n                image!(ax2, rotr90(img))\n                contour!(ax3, xs, ys, zs, levels=10)\n        end\n    end\n\n    binormal_plot()\n    fig",
    "crumbs": [
      "Statistics",
      "3-biovariate-normal-dist"
    ]
  },
  {
    "objectID": "statistics/16-rotate-plots.html",
    "href": "statistics/16-rotate-plots.html",
    "title": "16-rotate-plots",
    "section": "",
    "text": "参考\n\n\n\nMakie: how to make a vertical (rotated by 90deg) lines! plot\n\n\n\n\nCode\nusing GLMakie\n\nwith_theme(theme_light()) do \n    fig = Figure()\n    ax_main = Axis(fig[1,1:2])\n    ax_side = Axis(fig[1,3], xlabel = \"y label\", ylabel = \"x label\") # well, just flip these ones\n    Xs = Ys = -10:0.1:10\n    contour!(ax_main, Xs, Ys, exp.((-Xs'.^2 .- Ys.^2)/25))\n\n    obj = lines!(ax_side, Xs, exp.(-Xs.^2/25))\n    rotate!(obj, -π/2) # rotates your plotted object\n    ax_side.yreversed = true\n    fig\nend",
    "crumbs": [
      "Statistics",
      "16-rotate-plots"
    ]
  },
  {
    "objectID": "statistics/10-dirichlet-dist.html",
    "href": "statistics/10-dirichlet-dist.html",
    "title": "10-dirichlet-dist",
    "section": "",
    "text": "简介\n\n\n\ndirichlet分布是Beta 分布的多元泛化\n参照 :Visualizing Dirichlet Distributions with Matplotlib",
    "crumbs": [
      "Statistics",
      "10-dirichlet-dist"
    ]
  },
  {
    "objectID": "statistics/10-dirichlet-dist.html#load-package",
    "href": "statistics/10-dirichlet-dist.html#load-package",
    "title": "10-dirichlet-dist",
    "section": "1. load package",
    "text": "1. load package\n\n\nCode\nusing Distributions, GLMakie, Random, Pipe\nRandom.seed!(34343)\n\n\nTaskLocalRNG()",
    "crumbs": [
      "Statistics",
      "10-dirichlet-dist"
    ]
  },
  {
    "objectID": "statistics/10-dirichlet-dist.html#beta-分布",
    "href": "statistics/10-dirichlet-dist.html#beta-分布",
    "title": "10-dirichlet-dist",
    "section": "2. Beta 分布",
    "text": "2. Beta 分布\n\n2.1 定义\nBeta分布的定义:\n\n\nCode\n@doc(Beta)\n\n\nBeta(α, β)\nThe Beta distribution has probability density function\n\\[\nf(x; \\alpha, \\beta) = \\frac{1}{B(\\alpha, \\beta)}\nx^{\\alpha - 1} (1 - x)^{\\beta - 1}, \\quad x \\in [0, 1]\n\\]\nThe Beta distribution is related to the Gamma distribution via the property that if \\(X \\sim \\operatorname{Gamma}(\\alpha)\\) and \\(Y \\sim \\operatorname{Gamma}(\\beta)\\) independently, then \\(X / (X + Y) \\sim \\operatorname{Beta}(\\alpha, \\beta)\\).\nBeta()        # equivalent to Beta(1, 1)\nBeta(α)       # equivalent to Beta(α, α)\nBeta(α, β)    # Beta distribution with shape parameters α and β\n\nparams(d)     # Get the parameters, i.e. (α, β)\nExternal links\n\nBeta distribution on Wikipedia\n\n\n\nBeta分布有两个参数α,β, 当两个参数取不同值的时候, 分布的概率密度函数变现不同.\n\n\n2.2 不同参数的 pdf曲线\n\n\nCode\nxs=range(0,1,100)\nparams=[[.1,.1],[.5,.5],[1,1],[5,5],[10,10],[50,50]]\n#sas1 = @pipe params1.|&gt;(pdf(Beta(_...),xs))\nfunction plot_res()\n    fig = Figure(resolution=(900,900))\n    axs = [Axis(fig[i, j]) for i in 1:2, j in 1:3]\n\n    for (ax,vec) in zip(axs,params)\n        ax.title=\"$vec\"\n       lines!(ax,Beta(vec...),color=(:orange, 0.8))\n    end\n    fig\nend\nplot_res()",
    "crumbs": [
      "Statistics",
      "10-dirichlet-dist"
    ]
  },
  {
    "objectID": "statistics/10-dirichlet-dist.html#dirichlet分布",
    "href": "statistics/10-dirichlet-dist.html#dirichlet分布",
    "title": "10-dirichlet-dist",
    "section": "3 Dirichlet分布",
    "text": "3 Dirichlet分布\n\n3.1 定义\n\n\nCode\n@doc(Dirichlet)\n\n\nDirichlet\nThe Dirichlet distribution is often used as the conjugate prior for Categorical or Multinomial distributions. The probability density function of a Dirichlet distribution with parameter \\(\\alpha = (\\alpha_1, \\ldots, \\alpha_k)\\) is:\n\\[\nf(x; \\alpha) = \\frac{1}{B(\\alpha)} \\prod_{i=1}^k x_i^{\\alpha_i - 1}, \\quad \\text{ with }\nB(\\alpha) = \\frac{\\prod_{i=1}^k \\Gamma(\\alpha_i)}{\\Gamma \\left( \\sum_{i=1}^k \\alpha_i \\right)},\n\\quad x_1 + \\cdots + x_k = 1\n\\]\n# Let alpha be a vector\nDirichlet(alpha)         # Dirichlet distribution with parameter vector alpha\n\n# Let a be a positive scalar\nDirichlet(k, a)          # Dirichlet distribution with parameter a * ones(k)\n\n\n\n\n3.2 Dirichlet sampling plot\n\n\nCode\nlet\n    vecs = [[0.1,0.1,0.1],[0.2,0.2,0.2],[1, 1, 1], [2, 2, 2], [6, 6, 6], [10, 10, 10],[20,20,20],[50,50,50],[100,100,100]]\n    sas = @pipe vecs |&gt; Dirichlet.(_) |&gt; rand.(_, 1000)\n\n    xs = ys = zs = range(0, 1, 100)\n    function plot_res()\n        fig = Figure(resolution=(900,900))\n        axs = [Axis3(fig[i, j];azimuth=0.2pi) for i in 1:3, j in 1:3]\n\n        for (ax, sa,vec) in zip(axs, sas,vecs)\n            ax.title=\"$vec\"\n            lines!(ax, [1, 0, 0,1], [0, 1, 0,0], [0, 0, 1,0];color=(:lightgreen,0.5),linewidth=3)\n            scatter!(ax, eachrow(sa)...; markersize=4, color=(:orange, 0.9))\n        end\n\n        fig\n    end\n    plot_res()\n\nend",
    "crumbs": [
      "Statistics",
      "10-dirichlet-dist"
    ]
  },
  {
    "objectID": "statistics/12-likelihood-coin-toss.html",
    "href": "statistics/12-likelihood-coin-toss.html",
    "title": "12-likelihood of coin toss",
    "section": "",
    "text": "简介\n\n\n\nlikelihook解释 参见:understanding-bayes-a-look-at-the-likelihood\n\n\n\n问题:硬币的\\(p(head)=?\\)\n模型:二项式分布\n搜索所有\\(p(head)\\) 产生观测结果的概率, 选出最有可能的一个 \\(p(head)\\)\n\n似然率要解决的问题 对于投掷 10 次硬币, 获取 7 次正面的结果 pdf(Binomial(10,0.5),data=7)\npdf(Binomial(10,0.7),data=7)\npdf(Binomial(10,0.1),data=7)\n返回值都不为 0,意思是p(head)=[0.1,0.5,0.7]的硬币都有机会获得这个观测结果 在这种硬币P(head)参数未知的情况下, 我们挑选出最有可能的一个参数值,这就是最大似然率估计",
    "crumbs": [
      "Statistics",
      "12-likelihood of coin toss"
    ]
  },
  {
    "objectID": "statistics/12-likelihood-coin-toss.html#load-package",
    "href": "statistics/12-likelihood-coin-toss.html#load-package",
    "title": "12-likelihood of coin toss",
    "section": "1. load package",
    "text": "1. load package\n\n\nCode\nusing Distributions,GLMakie,Random,Pipe\nRandom.seed!(123)\n\n\nTaskLocalRNG()",
    "crumbs": [
      "Statistics",
      "12-likelihood of coin toss"
    ]
  },
  {
    "objectID": "statistics/12-likelihood-coin-toss.html#基本概率模型二项式分布",
    "href": "statistics/12-likelihood-coin-toss.html#基本概率模型二项式分布",
    "title": "12-likelihood of coin toss",
    "section": "2. 基本概率模型:二项式分布",
    "text": "2. 基本概率模型:二项式分布\n\n\nCode\n@doc(Binomial)\n\n\nBinomial(n,p)\nA Binomial distribution characterizes the number of successes in a sequence of independent trials. It has two parameters: n, the number of trials, and p, the probability of success in an individual trial, with the distribution:\n\\[\nP(X = k) = {n \\choose k}p^k(1-p)^{n-k},  \\quad \\text{ for } k = 0,1,2, \\ldots, n.\n\\]\nBinomial()      # Binomial distribution with n = 1 and p = 0.5\nBinomial(n)     # Binomial distribution for n trials with success rate p = 0.5\nBinomial(n, p)  # Binomial distribution for n trials with success rate p\n\nparams(d)       # Get the parameters, i.e. (n, p)\nntrials(d)      # Get the number of trials, i.e. n\nsuccprob(d)     # Get the success rate, i.e. p\nfailprob(d)     # Get the failure rate, i.e. 1 - p\nExternal links:\n\nBinomial distribution on Wikipedia",
    "crumbs": [
      "Statistics",
      "12-likelihood of coin toss"
    ]
  },
  {
    "objectID": "statistics/12-likelihood-coin-toss.html#硬币试验的不同观测值概率模型定义",
    "href": "statistics/12-likelihood-coin-toss.html#硬币试验的不同观测值概率模型定义",
    "title": "12-likelihood of coin toss",
    "section": "3. 硬币试验的不同观测值概率模型定义",
    "text": "3. 硬币试验的不同观测值概率模型定义\n定义input_data 函数接受data观测值,返回一个新的函数, 参数是概率值, 返回值为概率密度\n\n\nCode\n@kwdef struct CoinToss\n    total::Int=10\n    success::Int=7\nend\nfunction input_data(params::CoinToss)\n   total,success=params.total,params.success\n   return  (p::Real)-&gt; @pipe Binomial(total,p)|&gt;pdf(_,success)\nend\n\n\ninput_data (generic function with 1 method)",
    "crumbs": [
      "Statistics",
      "12-likelihood of coin toss"
    ]
  },
  {
    "objectID": "statistics/12-likelihood-coin-toss.html#次试验不同正面观察结果下的概率密度图",
    "href": "statistics/12-likelihood-coin-toss.html#次试验不同正面观察结果下的概率密度图",
    "title": "12-likelihood of coin toss",
    "section": "4. 10次试验,不同正面观察结果下的概率密度图",
    "text": "4. 10次试验,不同正面观察结果下的概率密度图\n\n\nCode\nprobrange=range(0.0,1.0,50)\nsuccess_arr=0:10  #不同正面次数\nfig=Figure(resolution=(600,600))\nfor i in success_arr\n    params=CoinToss(success=i)\n    local row= div(i,3)\n    local col=rem(i,3)\n    local ax=Axis(fig[row+1,col])\n    \n    local likelihood=input_data(params)\n    max_likelihood=likelihood.(probrange)|&gt;maximum\n    x=undef\n    for i in probrange\n        if likelihood(i)==max_likelihood\n            x=round(i,digits=2)\n           \n        end\n    end\n    lines!(ax,probrange,likelihood.(probrange),label=\"head=$(i)\")\n    vlines!(ax,[x],label=\"p=$(x)\")\n    ax.title=\"head=$(i),p=$(x)\"\n   \nend\nfig\n\n\n\n\n\n\n\n\n\n\n5. 最大似然率估计的正式方法\nDistributions.jl提供了fit_mle函数\n\n\nCode\n@doc(fit_mle)\n\n\nfit_mle(D, x)\nFit a distribution of type D to a given data set x.\n\nFor univariate distribution, x can be an array of arbitrary size.\nFor multivariate distribution, x should be a matrix, where each column is a sample.\n\nfit_mle(D, x, w)\nFit a distribution of type D to a weighted data set x, with weights given by w.\nHere, w should be an array with length n, where n is the number of samples contained in x.\nfit_mle(::Type{&lt;:Beta}, x::AbstractArray{T})\nMaximum Likelihood Estimate of Beta Distribution via Newton’s Method\nfit_mle(::Type{&lt;:Weibull}, x::AbstractArray{&lt;:Real}; \nalpha0::Real = 1, maxiter::Int = 1000, tol::Real = 1e-16)\nCompute the maximum likelihood estimate of the Weibull distribution with Newton’s method.\n\n\n\n\nCode\nfor i in 1:10\n@info \"total=10,success=$i mle\"=&gt; fit_mle(Binomial, 10,[i])\nend\n\n\n[ Info: \"total=10,success=1 mle\" =&gt; Binomial{Float64}(n=10, p=0.1)\n[ Info: \"total=10,success=2 mle\" =&gt; Binomial{Float64}(n=10, p=0.2)\n[ Info: \"total=10,success=3 mle\" =&gt; Binomial{Float64}(n=10, p=0.3)\n[ Info: \"total=10,success=4 mle\" =&gt; Binomial{Float64}(n=10, p=0.4)\n[ Info: \"total=10,success=5 mle\" =&gt; Binomial{Float64}(n=10, p=0.5)\n[ Info: \"total=10,success=6 mle\" =&gt; Binomial{Float64}(n=10, p=0.6)\n[ Info: \"total=10,success=7 mle\" =&gt; Binomial{Float64}(n=10, p=0.7)\n[ Info: \"total=10,success=8 mle\" =&gt; Binomial{Float64}(n=10, p=0.8)\n[ Info: \"total=10,success=9 mle\" =&gt; Binomial{Float64}(n=10, p=0.9)\n[ Info: \"total=10,success=10 mle\" =&gt; Binomial{Float64}(n=10, p=1.0)",
    "crumbs": [
      "Statistics",
      "12-likelihood of coin toss"
    ]
  },
  {
    "objectID": "statistics/7-mvnormal-sampling.html",
    "href": "statistics/7-mvnormal-sampling.html",
    "title": "7-mv-normal-sampling",
    "section": "",
    "text": "方法\n\n\n\n通过contour:levels参数控制曲线的范围\nlevels=1 则只绘制出一条等位线",
    "crumbs": [
      "Statistics",
      "7-mv-normal-sampling"
    ]
  },
  {
    "objectID": "statistics/7-mvnormal-sampling.html#load-package",
    "href": "statistics/7-mvnormal-sampling.html#load-package",
    "title": "7-mv-normal-sampling",
    "section": "1. load package",
    "text": "1. load package\n\n\nCode\nusing Distributions,GLMakie,Random\nRandom.seed!(343434)\n\n\nTaskLocalRNG()",
    "crumbs": [
      "Statistics",
      "7-mv-normal-sampling"
    ]
  },
  {
    "objectID": "statistics/7-mvnormal-sampling.html#define-distributions-params",
    "href": "statistics/7-mvnormal-sampling.html#define-distributions-params",
    "title": "7-mv-normal-sampling",
    "section": "2. define distributions params",
    "text": "2. define distributions params\n\n\nCode\nμ=[3,2]\nΣ=[1 -1.5;-1.5 4]\nd=MvNormal(μ,Σ)\nxs=range(0,6,100)\nys=range(-4,7,100)\ndens_mvnormal = [pdf(d, [i, j]) for i in xs, j in ys]\nrand_sample=rand(d,100)\n\n\n2×100 Matrix{Float64}:\n 2.04893  3.14939  2.04006  2.96766  3.14777  …  2.9465   2.47969   3.17612\n 3.31172  2.04522  2.43717  1.83891  1.69139     2.44297  0.862216  0.327061",
    "crumbs": [
      "Statistics",
      "7-mv-normal-sampling"
    ]
  },
  {
    "objectID": "statistics/7-mvnormal-sampling.html#plot-res",
    "href": "statistics/7-mvnormal-sampling.html#plot-res",
    "title": "7-mv-normal-sampling",
    "section": "3. plot res",
    "text": "3. plot res\n\n\nCode\nfunction plot_func(fig,idx,levels=1)\n    ax=Axis(fig[1,idx], xlabel=L\"X\", ylabel=L\"Y\")\n    Box(fig[1,idx];color = (:orange,0.1))\n    scatter!(ax,rand_sample;marker=:circle,markersize=10,color=(:green,0.1),\n             strokewidth=1,strokecolor=:black)\n    contour!(ax,xs, ys,dens_mvnormal;levels=levels,linewidth=1)\nend\nfunction plot_mvnormal()\n    fig=Figure(resolution=(800,400))\n    [plot_func(fig,idx,levels) for (idx,levels) in enumerate([1,16])]\n    fig\nend\nplot_mvnormal()",
    "crumbs": [
      "Statistics",
      "7-mv-normal-sampling"
    ]
  },
  {
    "objectID": "statistics/14-unicode-plot.html",
    "href": "statistics/14-unicode-plot.html",
    "title": "14-unicode-plot-method",
    "section": "",
    "text": "简介\n\n\n\n使用Readme ·UnicodePlots.jl 以字符形式作图\n\n\n\n\nCode\nusing Plots,UnicodePlots\ndata=[21, 17, 21, 18, 22, 31, 31, 34, 34, 35, 35, 36, 39, 36,35]\nplt=scatterplot(data)\nshow(plt)\n\n\n      ┌────────────────────────────────────────┐ \n   40 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⡀⠀⠂⠀⠂⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠄⠀⠀⠀⠄⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠄⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n   10 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ \n      └────────────────────────────────────────┘ \n      ⠀0⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀20⠀ \n\n\n(18, 49)",
    "crumbs": [
      "Statistics",
      "14-unicode-plot-method"
    ]
  },
  {
    "objectID": "machinelearning/1-classfication-comparison.html",
    "href": "machinelearning/1-classfication-comparison.html",
    "title": "classfication models comparison",
    "section": "",
    "text": "import MLJ:predict,predict_mode\n    using  MLJ,GLMakie,DataFrames,Random\n    Random.seed!(1222)\n\nTaskLocalRNG()",
    "crumbs": [
      "Machine Learning",
      "classfication models comparison"
    ]
  },
  {
    "objectID": "machinelearning/1-classfication-comparison.html#load-package",
    "href": "machinelearning/1-classfication-comparison.html#load-package",
    "title": "classfication models comparison",
    "section": "",
    "text": "import MLJ:predict,predict_mode\n    using  MLJ,GLMakie,DataFrames,Random\n    Random.seed!(1222)\n\nTaskLocalRNG()",
    "crumbs": [
      "Machine Learning",
      "classfication models comparison"
    ]
  },
  {
    "objectID": "machinelearning/1-classfication-comparison.html#make-data",
    "href": "machinelearning/1-classfication-comparison.html#make-data",
    "title": "classfication models comparison",
    "section": "2. make data",
    "text": "2. make data\n\n    function circle_data()\n    X, y = make_circles(400; noise=0.1, factor=0.3)\n    df = DataFrame(X)\n    df.y = y\n    return df\n    end\n    function moons_data()\n        X, y = make_moons(400; noise=0.1)\n        df = DataFrame(X)\n        df.y = y\n        return df\n    end\n    function blob_data()\n        X, y = make_blobs(400, 2; centers=2, cluster_std=[1.0, 2.0])\n        df = DataFrame(X)\n        df.y = y\n        return df\n    end\n    #cat=df1.y|&gt;levels|&gt;unique\n    colors=[:green, :purple]\n\n2-element Vector{Symbol}:\n :green\n :purple",
    "crumbs": [
      "Machine Learning",
      "classfication models comparison"
    ]
  },
  {
    "objectID": "machinelearning/1-classfication-comparison.html#define-function",
    "href": "machinelearning/1-classfication-comparison.html#define-function",
    "title": "classfication models comparison",
    "section": "3. define function",
    "text": "3. define function\n\nfunction plot_origin_data(df)\n    fig=Figure()\n    ax=Axis(fig[1,1])\n    local cat=df.y|&gt;levels|&gt;unique\n    \n    local colors=[:green, :purple]\n    for (i,c) in enumerate(cat)\n        d=df[y.==c,:]\n        scatter!(ax, d[:,1],d[:,2],color=(colors[i],0.6))\n        #@show d\n    end\n    fig\nend\n\nnums=100\nfunction boundary_data(df,;n=nums)\n    n1=n2=n\n    xlow,xhigh=extrema(df[:,:x1])\n    ylow,yhigh=extrema(df[:,:x2])\n    tx = LinRange(xlow,xhigh,n1)\n    ty = LinRange(ylow,yhigh,n2)\n    x_test = mapreduce(collect, hcat, Iterators.product(tx, ty));\n    x_test=MLJ.table(x_test')\n    return tx,ty,x_test\nend\n\nfunction plot_desc_boudary(fig,ytest,i;df=df1,row=1)\n        tx,ty,xs,ys, xtest=boundary_data(df)\n        local ax=Axis(fig[row,i],title=\"$(names[i])\")\n\n        contourf!(ax, tx,ty,ytest,levels=length(cat),colormap=:phase)\n\n        for (i,c) in enumerate(cat)\n            d=df[y.==c,:]\n            scatter!(ax, d[:,1],d[:,2],color=(colors[i],0.6))\n        end\n        hidedecorations!(ax)\nend\n\nplot_desc_boudary (generic function with 1 method)",
    "crumbs": [
      "Machine Learning",
      "classfication models comparison"
    ]
  },
  {
    "objectID": "machinelearning/1-classfication-comparison.html#define-machine-learning-models",
    "href": "machinelearning/1-classfication-comparison.html#define-machine-learning-models",
    "title": "classfication models comparison",
    "section": "4. define machine learning models",
    "text": "4. define machine learning models\n\n    using CatBoost.MLJCatBoostInterface\n    SVC = @load SVC pkg=LIBSVM   \n    KNNClassifier = @load KNNClassifier pkg=NearestNeighborModels\n    DecisionTreeClassifier = @load DecisionTreeClassifier pkg=DecisionTree\n    RandomForestClassifier = @load RandomForestClassifier pkg=DecisionTree\n    CatBoostClassifier = @load CatBoostClassifier pkg=CatBoost\n    BayesianLDA = @load BayesianLDA pkg=MultivariateStats\n    Booster = @load AdaBoostStumpClassifier pkg=DecisionTree\n    \n    models=[KNNClassifier,DecisionTreeClassifier,RandomForestClassifier,CatBoostClassifier,BayesianLDA,SVC]\n    names=[\"KNN\",\"DecisionTree\",\"RandomForest\",\"CatBoost\",\"BayesianLDA\",\"SVC\"]\n   function _fit(df::DataFrame,m)\n    X,y=df[:,1:2],df[:,3]\n    _,_,xtest=boundary_data(df;n=nums)\n    local predict= m==MLJLIBSVMInterface.SVC  ? MLJ.predict : MLJ.predict_mode \n    model=m()\n   mach = machine(model, X, y)|&gt;fit!\n   yhat=predict(mach, xtest)\n   ytest=yhat|&gt;Array|&gt;d-&gt;reshape(d,nums,nums)\n   return  ytest\nend\n\n\n\nfunction plot_desc_boudary(fig,ytest,i;df=df1,row=1)\n    tx,ty,_=boundary_data(df)\n    local y=df.y\n    local ax=Axis(fig[row,i],title=\"$(names[i])\")\n    cat=y|&gt;levels|&gt;unique\n    contourf!(ax, tx,ty,ytest,levels=length(cat),colormap=:redsblues)\n\n    for (i,c) in enumerate(cat)\n        d=df[y.==c,:]\n        scatter!(ax, d[:,1],d[:,2],color=(colors[i],0.6))\n    end\n    hidedecorations!(ax)\n    \n\nend\n\nfunction plot_comparsion(testdata,df;row=1)\n    \n    for (i,data) in enumerate(testdata)\n        plot_desc_boudary(fig,data,i;df=df,row=row)\n    end\n    fig\nend\n\n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: For silent loading, specify `verbosity=0`. \n[ Info: For silent loading, specify `verbosity=0`. \n\n\nimport MLJLIBSVMInterface ✔\nimport NearestNeighborModels ✔\nimport MLJDecisionTreeInterface ✔\nimport MLJDecisionTreeInterface ✔\nimport CatBoost ✔\nimport MLJMultivariateStatsInterface ✔\nimport MLJDecisionTreeInterface ✔\n\n\nplot_comparsion (generic function with 1 method)\n\n\n\nfig=Figure(resolution=(2100,1000))\nfunction plot_comparsion(testdata,df,row=1)\n    \n    for i in eachindex(testdata)\n        plot_desc_boudary(fig,testdata[i],i;df=df,row=row)\n    end\n    fig\nend\n\n\n\ndf1=circle_data()\n\nytest1=[_fit(df1,m) for (i,m) in enumerate(models)]\n\ndf2=moons_data()\nytest2=[_fit(df2,m) for (i,m) in enumerate(models)]\n\ndf3=blob_data()\nytest3=[_fit(df3,m) for (i,m) in enumerate(models)]\n\ndfs=[df2,df1,df3]\nytests=[ytest2,ytest1,ytest3]\n\nfig=Figure(resolution=(2100,1000))\n\nfor (df, data,i)  in zip(dfs,ytests,[1,2,3])\n    plot_comparsion(data,df;row=i)\nend\n\nfig\n\n[ Info: Training machine(KNNClassifier(K = 5, …), …).\n[ Info: Training machine(DecisionTreeClassifier(max_depth = -1, …), …).\n[ Info: Training machine(RandomForestClassifier(max_depth = -1, …), …).\n[ Info: Training machine(CatBoostClassifier(iterations = 1000, …), …).\n[ Info: Training machine(BayesianLDA(method = gevd, …), …).\n[ Info: Training machine(SVC(kernel = RadialBasis, …), …).\n[ Info: Training machine(KNNClassifier(K = 5, …), …).\n[ Info: Training machine(DecisionTreeClassifier(max_depth = -1, …), …).\n[ Info: Training machine(RandomForestClassifier(max_depth = -1, …), …).\n[ Info: Training machine(CatBoostClassifier(iterations = 1000, …), …).\n[ Info: Training machine(BayesianLDA(method = gevd, …), …).\n[ Info: Training machine(SVC(kernel = RadialBasis, …), …).\n[ Info: Training machine(KNNClassifier(K = 5, …), …).\n[ Info: Training machine(DecisionTreeClassifier(max_depth = -1, …), …).\n[ Info: Training machine(RandomForestClassifier(max_depth = -1, …), …).\n[ Info: Training machine(CatBoostClassifier(iterations = 1000, …), …).\n[ Info: Training machine(BayesianLDA(method = gevd, …), …).\n[ Info: Training machine(SVC(kernel = RadialBasis, …), …).",
    "crumbs": [
      "Machine Learning",
      "classfication models comparison"
    ]
  },
  {
    "objectID": "math/7-what-is-dimension.html",
    "href": "math/7-what-is-dimension.html",
    "title": "7-what is dimension in mathematics?",
    "section": "",
    "text": "info\n\n\n\nref: Understanding Regression Analysis ch06 figure 6.3\n\nWhat is a dimension? This is a very difficult problem to understand. The most basic problem in mathematics is the measurement of the physical properties of reality. The most commonly used tool for measuring is a ruler. We can turn the dimension problem into another problem, and to measure the differences between different objects in a set, we need several rulers that cannot replace each other\n什么是维度.这是一个非常难理解的问题.数学最基础的问题是对现实实物属性的度量.度量最常用的工具是直尺. 我们可以把维度问题转化为另一个问题,要度量一个集合中不同对象的差异 ,需要几把不能相互代替的尺子\nusing CairoMakie,Distributions,Turing,LinearAlgebra\nusing Plots,StatsPlots\nimport CairoMakie:wireframe!,scatter!",
    "crumbs": [
      "Math",
      "7-what is dimension in mathematics?"
    ]
  },
  {
    "objectID": "math/7-what-is-dimension.html#生活在三维空间中平面的维度",
    "href": "math/7-what-is-dimension.html#生活在三维空间中平面的维度",
    "title": "7-what is dimension in mathematics?",
    "section": "1 生活在三维空间中平面的维度",
    "text": "1 生活在三维空间中平面的维度\n\nxs=ys=Vector(1:0.05:2)\nzs1=[-1+6*x+10*y for x in xs ,y in ys]\nzs2=[0 for x in xs, y in ys]\n\n21×21 Matrix{Int64}:\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n\n\n\nfunction plot_wireframe(zs::Matrix)\n    fig=Figure()\n    ax=Axis3(fig[1,1],azimuth=-pi/4)\n    wireframe!(ax,xs,ys,zs)\n    fig\nend\n\nfunction plot_wireframe(zs1::Matrix,zs2::Matrix)\n    fig=Figure()\n    ax=Axis3(fig[1,1],azimuth=-pi/4)\n    wireframe!(ax,xs,ys,zs1,color=:green)\n    wireframe!(ax,xs,ys,zs2,color=:red)\n    \n    fig\nend\n\nplot_wireframe (generic function with 2 methods)\n\n\n\nplot_wireframe(zs1)\n\n\n\n\n\n\n\nFigure 1: plane-in-3d-space\n\n\n\n\n\n\nplot_wireframe(zs1,zs2)\n\n\n\n\n\n\n\nFigure 2: plane-and-projection-in 2d plane\n\n\n\n\n\nFigure 2 中 度量两个平面的工具是一样. 我们只考虑平面中点之间的属性的差异,脱离三维空间. 绿色平面和红色平面度量方法相同, 只需要两种不同的尺子,度量 x,y 方向的属性就可以分开平面里的不同个体.",
    "crumbs": [
      "Math",
      "7-what is dimension in mathematics?"
    ]
  },
  {
    "objectID": "math/7-what-is-dimension.html#add-some-noise",
    "href": "math/7-what-is-dimension.html#add-some-noise",
    "title": "7-what is dimension in mathematics?",
    "section": "2. add some noise",
    "text": "2. add some noise\n在上面图的基础上,我们可以增加一些噪音\n\nd=Normal(0,2)\nzs4=[[x,y,-1+6*x+10*y+rand(d)] for x in xs  for y in ys]\nmatrix=hcat(zs4...)\n\n3×441 Matrix{Float64}:\n  1.0      1.0      1.0      1.0    …   2.0      2.0      2.0      2.0\n  1.0      1.05     1.1      1.15       1.85     1.9      1.95     2.0\n 15.5215  16.4508  15.7613  17.119     29.0107  28.8441  28.1823  29.6051\n\n\n这时,两个尺子就不够了. 还需要度量噪音,这就是第三位维度",
    "crumbs": [
      "Math",
      "7-what is dimension in mathematics?"
    ]
  },
  {
    "objectID": "math/7-what-is-dimension.html#with-different-noise",
    "href": "math/7-what-is-dimension.html#with-different-noise",
    "title": "7-what is dimension in mathematics?",
    "section": "with different noise",
    "text": "with different noise\n\nσs=[0.0,0.05,0.1,1,1.5,3]\ndists=[Normal(0,σ) for σ in σs ]\n\n6-element Vector{Normal{Float64}}:\n Normal{Float64}(μ=0.0, σ=0.0)\n Normal{Float64}(μ=0.0, σ=0.05)\n Normal{Float64}(μ=0.0, σ=0.1)\n Normal{Float64}(μ=0.0, σ=1.0)\n Normal{Float64}(μ=0.0, σ=1.5)\n Normal{Float64}(μ=0.0, σ=3.0)\n\n\n在不同噪音情况下的平面变化情况\n\nfunction plot_matrix_arr()\n    fig=Figure(resolution=(1200,800))\n    \n     for  idx in eachindex(dists)\n          zs=[[x,y,-1+6*x+10*y+rand(dists[idx])] for x in xs  for y in ys]\n          matrix=hcat(zs...)\n          ax=Axis3(fig[fldmod1(idx,3)...],title=\"σ=$(σs[idx])\",azimuth=pi/8,elevation=-pi/4)\n          scatter!(ax,matrix,color=(:blue,0.5),strokewidth=0.5, strokecolor=:black)\n     end\n     fig\nend\nplot_matrix_arr()\n\n\n\n\n\n\n\n\n\n\n\nrotation",
    "crumbs": [
      "Math",
      "7-what is dimension in mathematics?"
    ]
  },
  {
    "objectID": "math/7-what-is-dimension.html#bayesian-infrence",
    "href": "math/7-what-is-dimension.html#bayesian-infrence",
    "title": "7-what is dimension in mathematics?",
    "section": "3. Bayesian Infrence",
    "text": "3. Bayesian Infrence\n在上面的的图示中, 我们通过添加噪音获得了数据, 通过添加正态分布的噪音,使得数据 形成三个维度, 第三个维度是不确定性因素, 因此可以通过贝叶斯方法推断不确定因素\n\n3.1 生成数据\n\nd=Normal(0,3)\nzs=[-1+6*x+10*y+rand(d) for x in xs  for y in ys]\nX=hcat(xs,ys)\n\n21×2 Matrix{Float64}:\n 1.0   1.0\n 1.05  1.05\n 1.1   1.1\n 1.15  1.15\n 1.2   1.2\n 1.25  1.25\n 1.3   1.3\n 1.35  1.35\n 1.4   1.4\n 1.45  1.45\n 1.5   1.5\n 1.55  1.55\n 1.6   1.6\n 1.65  1.65\n 1.7   1.7\n 1.75  1.75\n 1.8   1.8\n 1.85  1.85\n 1.9   1.9\n 1.95  1.95\n 2.0   2.0\n\n\n\n\n3.2 Turing workflow\n\n@model  function linear_regression(X,y)\n       n = length(y)\n       mu=[-1+6*x+10*y  for x in X[:,1]  for y in X[:,2]]\n       σ² ~ truncated(Normal(0, 5); lower=0)\n       for i in 1:n\n       y[i] ~ Normal(mu[i], σ²)\n       \n    end\nend\n\nmodel = linear_regression(X,zs)\nchain = sample(model, NUTS(), 5_000)\n\n┌ Info: Found initial step size\n└   ϵ = 0.0125\nSampling:  14%|█████▊                                   |  ETA: 0:00:01Sampling: 100%|█████████████████████████████████████████| Time: 0:00:00\n\n\n\nChains MCMC chain (5000×13×1 Array{Float64, 3}):\nIterations        = 1001:1:6000\nNumber of chains  = 1\nSamples per chain = 5000\nWall duration     = 7.3 seconds\nCompute duration  = 7.3 seconds\nparameters        = σ²\ninternals         = lp, n_steps, is_accept, acceptance_rate, log_density, hamiltonian_energy, hamiltonian_energy_error, max_hamiltonian_energy_error, tree_depth, numerical_error, step_size, nom_step_size\nSummary Statistics\n  parameters      mean       std   naive_se      mcse         ess      rhat    ⋯\n      Symbol   Float64   Float64    Float64   Float64     Float64   Float64    ⋯\n          σ²    2.9811    0.1000     0.0014    0.0016   3121.8558    1.0007    ⋯\n                                                                1 column omitted\nQuantiles\n  parameters      2.5%     25.0%     50.0%     75.0%     97.5% \n      Symbol   Float64   Float64   Float64   Float64   Float64 \n          σ²    2.7932    2.9146    2.9751    3.0485    3.1900\n\n\n\n\n\nPlots.plot(chain)",
    "crumbs": [
      "Math",
      "7-what is dimension in mathematics?"
    ]
  },
  {
    "objectID": "math/1-double-integral.html",
    "href": "math/1-double-integral.html",
    "title": "1-double integral picture",
    "section": "",
    "text": "二元函数积分示意\n\n\n\n利用小立方体来近似二元函数曲线下面积\n为了增强效果使用了 GLMakie ssao 方法",
    "crumbs": [
      "Math",
      "1-double integral picture"
    ]
  },
  {
    "objectID": "math/1-double-integral.html#load-package",
    "href": "math/1-double-integral.html#load-package",
    "title": "1-double integral picture",
    "section": "1. load package",
    "text": "1. load package\n\n配置 ssao\n\n\n\nCode\n  using GLMakie\n  GLMakie.activate!(ssao=true)\n  GLMakie.closeall() \n  fig = Figure(resolution = (800, 800))\n  ssao = Makie.SSAO(radius = 5.0, blur = 3)\n  ax = LScene(fig[1, 1], scenekw = (ssao=ssao,),show_axis=false)\n  ax.scene.ssao.bias[] = 0.025\n\n\n0.025",
    "crumbs": [
      "Math",
      "1-double integral picture"
    ]
  },
  {
    "objectID": "math/1-double-integral.html#define-bio-variate-funciton",
    "href": "math/1-double-integral.html#define-bio-variate-funciton",
    "title": "1-double integral picture",
    "section": "2 define bio-variate funciton",
    "text": "2 define bio-variate funciton\n\n2.1 配置函数\n\n\nmake_cubic: plot 小立方体函数\nmack_z : 根据传入函数的(x,y)坐标返回值, 即 z坐标值\n\n\n\n\nCode\n  make_cubic(;x=0,y=0,h,w)=Rect3f(Vec3f(x,y,0), Vec3f(w,w,h))\n\n  function make_z(func)\n   return (x,y)-&gt;func(x,y)\n  end\n\n\nmake_z (generic function with 1 method)\n\n\n\n\n2.2 二元函数\n\n不限于此\n\n\n\nCode\nf1(x,y)=ℯ^(−(x^2)−(y^2))\n  f5(x,y)=x^2+y^2\n\n\nf5 (generic function with 1 method)",
    "crumbs": [
      "Math",
      "1-double integral picture"
    ]
  },
  {
    "objectID": "math/1-double-integral.html#plot",
    "href": "math/1-double-integral.html#plot",
    "title": "1-double integral picture",
    "section": "3 plot",
    "text": "3 plot\n\n\n可以改变 xs,ys step的值, 增加后, 立方体会变小\nbox_width=0.19 设置比xs,ys 的间隔小一点, 留出空隙\n\n\n\n\nCode\n    xs=range(-2,2,20)\n    ys=range(-2,2,20) \n    box_width=0.19\n    function plot_double_integ(funcz)\n      local box = [make_cubic(;x=x,y=y,h=funcz(x,y),w=box_width) for x in xs  for y in ys]\n      local zs=  [funcz(x,y) for x in xs , y in ys]\n      for  i in eachindex(box)\n      mesh!(ax, box[i], ssao=true,color=:lightblue)\n      wireframe!(ax, box[i]; color = :black, transparency=true)\n    end\n\n    #wireframe!(ax,xs,ys,zs,color=(:red,0.8),linewidth=1)\n    fig\n  end\n\n  make_z(f1)|&gt;plot_double_integ\n\n\n\n\n\n\n\n\n\n  二元函数\n  f1(x,y)=ℯ^(−(x^2)−(y^2))\n  f2(x,y)=y^2\n  f3(x,y)=2+2x-y\n  f4(x,y)=x+2y+3\n  f5(x,y)=x^2+y^2\n  f6(x,y)=-f5(x,y)+3\n  f7(x,y)=-f5(x,y)\n  f8(x,y)=ℯ^((x^2)+(y^2))\n  f9(x,y)=sqrt(x^2+y^2)",
    "crumbs": [
      "Math",
      "1-double integral picture"
    ]
  },
  {
    "objectID": "math/6-vector-fields.html",
    "href": "math/6-vector-fields.html",
    "title": "6-gradient-vector-fields",
    "section": "",
    "text": "using GLMakie,Symbolics",
    "crumbs": [
      "Math",
      "6-gradient-vector-fields"
    ]
  },
  {
    "objectID": "math/6-vector-fields.html#load-pacages",
    "href": "math/6-vector-fields.html#load-pacages",
    "title": "6-gradient-vector-fields",
    "section": "",
    "text": "using GLMakie,Symbolics",
    "crumbs": [
      "Math",
      "6-gradient-vector-fields"
    ]
  },
  {
    "objectID": "math/6-vector-fields.html#define-symbolics-variables",
    "href": "math/6-vector-fields.html#define-symbolics-variables",
    "title": "6-gradient-vector-fields",
    "section": "2.define symbolics variables",
    "text": "2.define symbolics variables\n\n@variables x, y\nDx=Differential(x)\nDy=Differential(y)\n\n(::Differential) (generic function with 3 methods)",
    "crumbs": [
      "Math",
      "6-gradient-vector-fields"
    ]
  },
  {
    "objectID": "math/6-vector-fields.html#make-data",
    "href": "math/6-vector-fields.html#make-data",
    "title": "6-gradient-vector-fields",
    "section": "3. make data",
    "text": "3. make data\n使用Symbolics.jl 方法构建求导函数.\n\nof 表示原函数\nfx 沿 x 轴的导函数\nfy 沿 y轴方向的导函数\n\n\nf=x^2+2y^2\ng=5-x^2-2y^2\nh=x+2y+3\nfuncs=[f,g,h]\ndf=[]\nfor fun in funcs\n    local of=build_function(fun, x,y)|&gt;eval\n    local fx=fun|&gt;Dx|&gt;expand_derivatives|&gt;expr-&gt;build_function(expr, x,y)|&gt;eval\n    local fy=fun|&gt;Dy|&gt;expand_derivatives|&gt;expr-&gt;build_function(expr, x,y)|&gt;eval\n    push!(df,[of,fx,fy])\n\nend",
    "crumbs": [
      "Math",
      "6-gradient-vector-fields"
    ]
  },
  {
    "objectID": "math/6-vector-fields.html#plot",
    "href": "math/6-vector-fields.html#plot",
    "title": "6-gradient-vector-fields",
    "section": "4. plot",
    "text": "4. plot\n\nfig=Figure(resolution=(900,600))\nxs=ys=range(-3,3,10)\nfor  i in 1:3\n     local ax1=Axis(fig[1,i],title=L\"%$(funcs[i])\")\n     local ax2=Axis(fig[2,i])\n     local zs=[df[i][1](x,y) for x in xs, y in ys]\n     local us=[df[i][2](x,y) for x in xs, y in ys]\n     local vs=[df[i][3](x,y) for x in xs, y in ys]\n     contour!(ax1,xs,ys,zs)\n     arrows!( ax2,xs, ys, us, vs,lengthscale=i==3 ? 0.2 : 0.05,color=(:purple,0.8))\n\nend\nfig",
    "crumbs": [
      "Math",
      "6-gradient-vector-fields"
    ]
  },
  {
    "objectID": "vis/irish-whiskey-sales.html",
    "href": "vis/irish-whiskey-sales.html",
    "title": "Irish Whiskey Sales",
    "section": "",
    "text": "info\n\n\n\n\nref:Saint Patricks Irish Whiskey Sales\nsource :/Users/lunarcheung/Downloads/The Twisted Nature of Irish Whiskey Sales.png\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Irish Whiskey Sales"
    ]
  },
  {
    "objectID": "vis/irish-whiskey-sales.html#load-data-dataframe",
    "href": "vis/irish-whiskey-sales.html#load-data-dataframe",
    "title": "Irish Whiskey Sales",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\n    df=@pipe CSV.File(\"./data/irish.csv\")|&gt;DataFrame|&gt;dropmissing\n   first(df,5)\n\n\n5×5 DataFrame\n\n\n\nRow\ncategory\nquality\ncountry\nyear\ncases\n\n\n\nString15\nString15\nString\nInt64\nInt64\n\n\n\n\n1\nIrish Whiskey\nStandard\nUnited States\n1990\n243000\n\n\n2\nIrish Whiskey\nStandard\nUnited States\n1991\n214000\n\n\n3\nIrish Whiskey\nStandard\nUnited States\n1992\n219500\n\n\n4\nIrish Whiskey\nStandard\nUnited States\n1993\n225000\n\n\n5\nIrish Whiskey\nStandard\nUnited States\n1994\n239500",
    "crumbs": [
      "Data Viz",
      "Irish Whiskey Sales"
    ]
  },
  {
    "objectID": "vis/irish-whiskey-sales.html#data-preprocessing",
    "href": "vis/irish-whiskey-sales.html#data-preprocessing",
    "title": "Irish Whiskey Sales",
    "section": "3. data preprocessing",
    "text": "3. data preprocessing\n\n\nCode\n df1=@chain df begin\n    @select(country,year, cases)\n    #@filter(country in [\"Ireland\",\"Germany\",\"Russia\",\"France\"])\n    @group_by(country,year)\n    @summarize(country,year,sales=sum(cases)/1000)\n    @ungroup\n    #@mutate(cases=cases/1000)\n    # @filter(country in [\"Ireland\",\"Germany\",\"Russia\"])\n    # @group_by(country)\n    # #@arrange(year)\n    # @mutate(cases =cases.-cases[1])\n    # @ungroup\n    unique!(_)\n    @group_by(country)\n    @arrange(year)\n    @mutate(sales =sales.-sales[1])\n    @ungroup\n\n end\n all_country_data=@chain df1 begin @filter(country ∉ [\"Ireland\",\"Germany\",\"Russia\",\"France\"])\n end\n Ireland_data=@chain df1 begin @filter(country == \"Ireland\")\n end\n four_country_data=@chain df1 begin @filter(country ∈ [\"Ireland\",\"Germany\",\"Russia\",\"France\",\"Spain\"])\n end\n\n\n134×3 DataFrame109 rows omitted\n\n\n\nRow\ncountry\nyear\nsales\n\n\n\nString\nInt64\nFloat64\n\n\n\n\n1\nIreland\n1990\n0.0\n\n\n2\nIreland\n1991\n9.5\n\n\n3\nIreland\n1992\n-26.5\n\n\n4\nIreland\n1993\n-13.0\n\n\n5\nIreland\n1994\n-12.5\n\n\n6\nIreland\n1995\n-22.5\n\n\n7\nIreland\n1996\n-2.4\n\n\n8\nIreland\n1997\n7.8\n\n\n9\nIreland\n1998\n9.25\n\n\n10\nIreland\n1999\n49.15\n\n\n11\nIreland\n2000\n52.1\n\n\n12\nIreland\n2001\n53.35\n\n\n13\nIreland\n2002\n32.8\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n123\nRussia\n2005\n39.75\n\n\n124\nRussia\n2006\n63.25\n\n\n125\nRussia\n2007\n102.75\n\n\n126\nRussia\n2008\n146.75\n\n\n127\nRussia\n2009\n132.0\n\n\n128\nRussia\n2010\n182.0\n\n\n129\nRussia\n2011\n307.25\n\n\n130\nRussia\n2012\n365.25\n\n\n131\nRussia\n2013\n387.25\n\n\n132\nRussia\n2014\n445.75\n\n\n133\nRussia\n2015\n290.5\n\n\n134\nRussia\n2016\n293.5\n\n\n\n\n\n\n\n\nCode\nran=-100:50:350\naxis = (width = 500, height =500,xticks=(ran,[\"$(i)k\" for i in ran]),       xticklabelrotation = pi/8,\ntitlealign = :center,titlesize=24,\ntitle=\"The Twisted Nature of Irish Whiskey Sales\",\n subtitle = rich(\n    \"Within Europe sales have increased 225% since 1990. While\" , rich(\"Ireland's\",color =:blue), \"sales have decreased\",rich(\"Russia, France \\n and Germany\", color =:green),\"sales to   have than made up the difference.\")\n\n)\n\ndata_layer1=data(four_country_data)\ndata_layer2=data(Ireland_data)\n#data_layer3=data(all_country_data)\nmapping_layer1=mapping(:sales,:year,color=:country)\nmapping_layer2=mapping(:sales,:year)\nvisual_layer1 = visual(Lines,linewidth=3)\nvisual_layer2 = visual(Lines, linewidth=8,color=:blue)\n#visual_layer3 = visual(Lines, linewidth=1,color=(:gray,0.3))\nfour_lines=data_layer1* mapping_layer1 * visual_layer1\nireland_line=data_layer2* mapping_layer2 * visual_layer2\n#all_lines=data_layer3* mapping_layer2 * visual_layer3\ndraw(four_lines+ ireland_line ,axis=axis)\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Irish Whiskey Sales"
    ]
  },
  {
    "objectID": "vis/usa-household-use-technology.html",
    "href": "vis/usa-household-use-technology.html",
    "title": "Share of United States households using specific technologies",
    "section": "",
    "text": "info\n\n\n\n\nref:Share of United States households using specific technologies\nload pacakge\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Share of United States households using specific technologies"
    ]
  },
  {
    "objectID": "vis/usa-household-use-technology.html#load-data-dataframe",
    "href": "vis/usa-household-use-technology.html#load-data-dataframe",
    "title": "Share of United States households using specific technologies",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/technology-adoption-by-households-in-the-united-states.csv\")|&gt;DataFrame|&gt;rename(_,\"Technology Diffusion (Comin and Hobijn (2004) and others)\"=&gt;:Tech_Diffusion)|&gt;select(_,Not(:Code))\n\n# gdf=groupby(df,:Entity)\n# cats= @pipe keys(gdf) .|&gt; values(_)[1]\ngdf=@chain df begin \n   @group_by(Entity)\n   @arrange(Year)\n   @ungroup\n   @group_by(Entity)\nend\ncats= @pipe keys(gdf) .|&gt; values(_)[1]\ngroup_size=keys(gdf)|&gt;length;\n\n\n\n\nCode\naxs=[]\nfig=Figure(resolution=(1200,2000))\nfunction plot_diffusion(df,ax,title,c)\n    ax.title=title\n    ax.xticks=([1900,1930,1960,1980,2019],[\"1900\",\"30\",\"60\",\"80\",\"2019\"])\n    ax.yticks=([0,50,100],[\"0%\",\"50%\",\"100%\"])\n    ax.yticklabelsvisible= c==1 ? true :  false\n    xs,ys=df.Year,df.Tech_Diffusion\n    lines!(ax,xs,ys,color=(:red,0.8))\nend\n\nfor idx in 1:45\n    r,c=fldmod1(idx,4)\n    ax=Axis(fig[r,c])\n    push!(axs,ax)\n    df=gdf[idx]\n    title=cats[idx]\n    plot_diffusion(df,ax,title,c)\nend\nlinkyaxes!(axs...)\nlinkxaxes!(axs...)\nfig",
    "crumbs": [
      "Data Viz",
      "Share of United States households using specific technologies"
    ]
  },
  {
    "objectID": "vis/dumbbell-plot.html",
    "href": "vis/dumbbell-plot.html",
    "title": "Dumbbell Plot",
    "section": "",
    "text": "ref\n\n\n\nDumbbell plot in ggplot2\n\n\n\n\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success\n\n\n\n\nCode\nR\"\"\"\n# Seed\nset.seed(1)\n\n# Data\ncustomers &lt;- sample(50:150, 10)\npotential_customers &lt;- sample(150:500, 10)\ncompany &lt;- LETTERS[1:10]\n\n# Data frame\ndf &lt;- data.frame(company = company,\n                 x = customers,\n                 y = potential_customers)\n\"\"\"\ndf=@rget df\nrename!(df,:x=&gt;:customers,:y=&gt;:potential_customers)\nsort(df,:company)\n#df2=@pivot_longer(df, customers:potential_customers)\n\n\n10×3 DataFrame\n\n\n\nRow\ncompany\ncustomers\npotential_customers\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\nA\n117\n234\n\n\n2\nB\n88\n426\n\n\n3\nC\n50\n479\n\n\n4\nD\n83\n412\n\n\n5\nE\n136\n478\n\n\n6\nF\n92\n228\n\n\n7\nG\n63\n362\n\n\n8\nH\n131\n186\n\n\n9\nI\n108\n254\n\n\n10\nJ\n100\n366\n\n\n\n\n\n\n\n\n\nCode\n   fig=Figure()\n   ax=Axis(fig[1,1])\n#    for (idx,row) in enumerate(eachrow(df))\n\n#         hlines!(ax,[idx]; xmin =[row.customers], xmax = [row.potential_customers])\n\n#    end\n#    hlines!(ax, 1:10;xmin=[df.customers...], xmax =[df.potential_customers...], color = :blue)\n   fig\n\n\n\n\n\n\n\n\n\n\n\nCode\n@doc(@select)\n\n\n@select(df, exprs...)\nSelect variables in a DataFrame.\n\nArguments\n\ndf: A DataFrame.\nexprs...: One or more unquoted variable names separated by commas. Variable names can also be used as their positions in the data, like x:y, to select a range of variables.\n\n\n\nExamples\njulia&gt; df = DataFrame(a = repeat('a':'e'), b = 1:5, c = 11:15);\n\njulia&gt; @chain df begin\n       @select(a, b, c)\n       end\n5×3 DataFrame\n Row │ a     b      c     \n     │ Char  Int64  Int64 \n─────┼────────────────────\n   1 │ a         1     11\n   2 │ b         2     12\n   3 │ c         3     13\n   4 │ d         4     14\n   5 │ e         5     15\n\njulia&gt; @chain df begin\n       @select(a:b)\n       end\n5×2 DataFrame\n Row │ a     b     \n     │ Char  Int64 \n─────┼─────────────\n   1 │ a         1\n   2 │ b         2\n   3 │ c         3\n   4 │ d         4\n   5 │ e         5\n\njulia&gt; @chain df begin\n       @select(1:2)\n       end\n5×2 DataFrame\n Row │ a     b     \n     │ Char  Int64 \n─────┼─────────────\n   1 │ a         1\n   2 │ b         2\n   3 │ c         3\n   4 │ d         4\n   5 │ e         5\n\njulia&gt; @chain df begin\n       @select(-(a:b))\n       end\n5×1 DataFrame\n Row │ c     \n     │ Int64 \n─────┼───────\n   1 │    11\n   2 │    12\n   3 │    13\n   4 │    14\n   5 │    15\n\njulia&gt; @chain df begin\n       @select(!(a:b))\n       end\n5×1 DataFrame\n Row │ c     \n     │ Int64 \n─────┼───────\n   1 │    11\n   2 │    12\n   3 │    13\n   4 │    14\n   5 │    15\n\njulia&gt; @chain df begin\n       @select(contains(\"b\"), starts_with(\"c\"))\n       end\n5×2 DataFrame\n Row │ b      c     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1     11\n   2 │     2     12\n   3 │     3     13\n   4 │     4     14\n   5 │     5     15\n\njulia&gt; @chain df begin\n       @select(-(1:2))\n       end\n5×1 DataFrame\n Row │ c     \n     │ Int64 \n─────┼───────\n   1 │    11\n   2 │    12\n   3 │    13\n   4 │    14\n   5 │    15\n\njulia&gt; @chain df begin\n       @select(!(1:2))\n       end\n5×1 DataFrame\n Row │ c     \n     │ Int64 \n─────┼───────\n   1 │    11\n   2 │    12\n   3 │    13\n   4 │    14\n   5 │    15\n\njulia&gt; @chain df begin\n       @select(-c)\n       end\n5×2 DataFrame\n Row │ a     b     \n     │ Char  Int64 \n─────┼─────────────\n   1 │ a         1\n   2 │ b         2\n   3 │ c         3\n   4 │ d         4\n   5 │ e         5\n\njulia&gt; @chain df begin\n       @select(-contains(\"a\"))\n       end\n5×2 DataFrame\n Row │ b      c     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1     11\n   2 │     2     12\n   3 │     3     13\n   4 │     4     14\n   5 │     5     15\n   \njulia&gt; @chain df begin\n       @select(!contains(\"a\"))\n       end\n5×2 DataFrame\n Row │ b      c     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1     11\n   2 │     2     12\n   3 │     3     13\n   4 │     4     14\n   5 │     5     15",
    "crumbs": [
      "Data Viz",
      "Dumbbell Plot"
    ]
  },
  {
    "objectID": "vis/annual-industrial-robots-installed.html",
    "href": "vis/annual-industrial-robots-installed.html",
    "title": "Annual industrial robots installed",
    "section": "",
    "text": "info\n\n\n\n\nref:Annual industrial robots installed\nload pacakge\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Annual industrial robots installed"
    ]
  },
  {
    "objectID": "vis/annual-industrial-robots-installed.html#load-data-dataframe",
    "href": "vis/annual-industrial-robots-installed.html#load-data-dataframe",
    "title": "Annual industrial robots installed",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/annual-industrial-robots-installed.csv\")|&gt;DataFrame|&gt;coalesce.(_, 0.0)|&gt;rename!(_,\"Total number of industrial robots installed by contry, 2021\"=&gt;:total)|&gt;sort(_,:total)\n\nfirst(df,5)\n\n\n5×4 DataFrame\n\n\n\nRow\nEntity\nCode\nYear\ntotal\n\n\n\nString15\nString3\nInt64\nInt64\n\n\n\n\n1\nPoland\nPOL\n2021\n3300\n\n\n2\nSpain\nESP\n2021\n3400\n\n\n3\nSingapore\nSGP\n2021\n3500\n\n\n4\nThailand\nTHA\n2021\n3900\n\n\n5\nCanada\nCAN\n2021\n4300",
    "crumbs": [
      "Data Viz",
      "Annual industrial robots installed"
    ]
  },
  {
    "objectID": "vis/annual-industrial-robots-installed.html#plot",
    "href": "vis/annual-industrial-robots-installed.html#plot",
    "title": "Annual industrial robots installed",
    "section": "3. plot",
    "text": "3. plot\n\n\nCode\n   row,col=size(df)\n   fig=Figure()\n   ax=Axis(fig[1,1])\n   ax.title=\"Annual industrial robots installed\"\n   ax.subtitle=\"2021\"\n   ax.yticks=(1:row,df.Entity)\n   ax.xgridvisible=false\n   ax.ygridvisible=false\n   xs=df.Entity\n   ys=round.(Int,df.total)\n   barplot!(ax,1:row,ys;direction=:x,color=ys,bar_labels=:y,#flip_labels_at=20,\n     #color_over_background=:dodgerblue3,\n     #color_over_bar=:white,\n   )\n   \n   fig",
    "crumbs": [
      "Data Viz",
      "Annual industrial robots installed"
    ]
  },
  {
    "objectID": "vis/vtree-r.html",
    "href": "vis/vtree-r.html",
    "title": "Data exploration with vtree",
    "section": "",
    "text": "info\n\n\n\nData exploration with vtree: diabetes dataset\n\n\n\nlibrary(vtree)\nlibrary(Hmisc)\n\n\nAttaching package: 'Hmisc'\n\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\n\n\ngetHdata(diabetes)\n\n\nhead(diabetes)\n\n    id chol stab.glu hdl ratio glyhb   location age gender height weight  frame\n1 1000  203       82  56   3.6  4.31 Buckingham  46 female     62    121 medium\n2 1001  165       97  24   6.9  4.44 Buckingham  29 female     64    218  large\n3 1002  228       92  37   6.2  4.64 Buckingham  58 female     61    256  large\n4 1003   78       93  12   6.5  4.63 Buckingham  67   male     67    119  large\n5 1005  249       90  28   8.9  7.72 Buckingham  64   male     68    183 medium\n6 1008  248       94  69   3.6  4.81 Buckingham  34   male     71    190  large\n  bp.1s bp.1d bp.2s bp.2d waist hip time.ppn\n1   118    59    NA    NA    29  38      720\n2   112    68    NA    NA    46  48      360\n3   190    92   185    92    49  57      180\n4   110    50    NA    NA    33  38      480\n5   138    80    NA    NA    44  41      300\n6   132    86    NA    NA    36  42      195\n\n\n\nvtree(diabetes,\"frame\",horiz=FALSE,height=250,width=850)\n\n\n\n\n\n\n\n\n\nvtree(diabetes,\"frame location\",horiz=FALSE,height=250,width=850)",
    "crumbs": [
      "Data Viz",
      "Data exploration with vtree"
    ]
  },
  {
    "objectID": "vis/annual-death-rate-by-sex-years.html",
    "href": "vis/annual-death-rate-by-sex-years.html",
    "title": "Annual death rates in people of different ages, by sex world",
    "section": "",
    "text": "ref\n\n\n\n\nref :Annual death rates in people of different ages, by sex\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Annual death rates in people of different ages, by sex world"
    ]
  },
  {
    "objectID": "vis/annual-death-rate-by-sex-years.html#load-data-dataframe",
    "href": "vis/annual-death-rate-by-sex-years.html#load-data-dataframe",
    "title": "Annual death rates in people of different ages, by sex world",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/annual-death-rates-in-different-age-groups-by-sex.csv\")|&gt;DataFrame\n\n\n19922×17 DataFrame19897 rows omitted\n\n\n\nRow\nEntity\nCode\nYear\nCentral death rate - Type: period - Sex: female - Age: 0\nCentral death rate - Type: period - Sex: male - Age: 0\nCentral death rate - Type: period - Sex: female - Age: 10\nCentral death rate - Type: period - Sex: male - Age: 10\nCentral death rate - Type: period - Sex: female - Age: 15\nCentral death rate - Type: period - Sex: male - Age: 15\nCentral death rate - Type: period - Sex: female - Age: 25\nCentral death rate - Type: period - Sex: male - Age: 25\nCentral death rate - Type: period - Sex: female - Age: 45\nCentral death rate - Type: period - Sex: male - Age: 45\nCentral death rate - Type: period - Sex: female - Age: 65\nCentral death rate - Type: period - Sex: male - Age: 65\nCentral death rate - Type: period - Sex: female - Age: 80\nCentral death rate - Type: period - Sex: male - Age: 80\n\n\n\nString\nString15?\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nAfghanistan\nAFG\n1950\n328.053\n378.814\n7.72991\n6.52991\n9.96758\n8.11575\n15.0426\n14.8812\n21.2739\n27.5066\n67.6107\n77.0253\n211.223\n226.547\n\n\n2\nAfghanistan\nAFG\n1951\n324.777\n374.956\n7.65714\n6.47173\n9.87427\n8.0444\n14.9049\n14.7495\n21.0961\n27.2708\n67.1116\n76.5053\n209.885\n225.159\n\n\n3\nAfghanistan\nAFG\n1952\n318.286\n366.965\n7.51281\n6.3596\n9.6892\n7.90725\n14.6317\n14.4965\n20.7428\n26.8212\n66.1187\n75.5487\n207.22\n222.703\n\n\n4\nAfghanistan\nAFG\n1953\n311.888\n358.685\n7.37038\n6.25279\n9.50655\n7.77702\n14.3619\n14.2566\n20.3934\n26.3985\n65.1349\n74.6933\n204.573\n220.633\n\n\n5\nAfghanistan\nAFG\n1954\n305.975\n351.087\n7.47033\n6.32612\n9.54872\n7.80432\n14.3075\n14.1708\n20.3094\n26.2079\n64.6866\n74.327\n202.837\n219.442\n\n\n6\nAfghanistan\nAFG\n1955\n298.864\n342.552\n7.08519\n6.0428\n9.14193\n7.52088\n13.824\n13.7848\n19.7027\n25.5661\n63.2202\n72.9975\n199.518\n216.517\n\n\n7\nAfghanistan\nAFG\n1956\n292.437\n334.788\n6.9579\n5.95098\n8.97388\n7.40485\n13.5696\n13.5633\n19.3775\n25.173\n62.3198\n72.1939\n197.145\n214.542\n\n\n8\nAfghanistan\nAFG\n1957\n285.96\n327.082\n6.80497\n5.82437\n8.78425\n7.25426\n13.2964\n13.2944\n19.0277\n24.7002\n61.3636\n71.1901\n194.668\n212.095\n\n\n9\nAfghanistan\nAFG\n1958\n279.403\n319.298\n6.66214\n5.69684\n8.60189\n7.09851\n13.0273\n13.0086\n18.6822\n24.1954\n60.4097\n70.1002\n192.166\n209.401\n\n\n10\nAfghanistan\nAFG\n1959\n273.273\n312.183\n6.52603\n5.58004\n8.42824\n6.9558\n12.7715\n12.7468\n18.3544\n23.7325\n59.5094\n69.0955\n189.867\n206.911\n\n\n11\nAfghanistan\nAFG\n1960\n267.463\n305.598\n6.40648\n5.48074\n8.27133\n6.83256\n12.5389\n12.5175\n18.0579\n23.3241\n58.6735\n68.2023\n187.792\n204.59\n\n\n12\nAfghanistan\nAFG\n1961\n261.854\n298.886\n6.26721\n5.3612\n8.09831\n6.68825\n12.2866\n12.256\n17.7335\n22.8633\n57.8106\n67.1957\n185.652\n202.185\n\n\n13\nAfghanistan\nAFG\n1962\n256.655\n292.773\n6.14919\n5.26366\n7.9478\n6.56954\n12.0652\n12.0384\n17.4491\n22.4812\n57.0294\n66.3898\n183.704\n200.26\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n19911\nZimbabwe\nZWE\n2010\n53.9416\n60.8736\n1.63101\n1.90256\n2.49942\n2.61754\n8.802\n8.97857\n20.8596\n27.2927\n45.8422\n52.5112\n86.3175\n114.257\n\n\n19912\nZimbabwe\nZWE\n2011\n50.7671\n57.5466\n1.5059\n1.7603\n2.24074\n2.40589\n6.98757\n7.8604\n16.663\n23.4714\n41.1328\n49.1328\n85.6723\n113.942\n\n\n19913\nZimbabwe\nZWE\n2012\n45.8417\n52.3628\n1.2744\n1.53946\n1.90764\n2.12629\n5.97021\n6.73963\n14.7873\n20.558\n37.6887\n46.8993\n85.0377\n113.63\n\n\n19914\nZimbabwe\nZWE\n2013\n42.4171\n48.8878\n1.14827\n1.36861\n1.71382\n1.9229\n5.13833\n5.92327\n13.1951\n18.2398\n35.8164\n45.3136\n84.4419\n113.357\n\n\n19915\nZimbabwe\nZWE\n2014\n40.2433\n46.6497\n1.06513\n1.26043\n1.58333\n1.78416\n4.57123\n5.31936\n12.052\n16.3566\n34.5043\n43.8205\n83.7835\n113.008\n\n\n19916\nZimbabwe\nZWE\n2015\n39.3862\n45.7603\n1.03008\n1.21829\n1.51606\n1.7263\n4.23604\n5.0488\n11.3024\n15.4633\n33.6349\n43.0445\n83.1682\n112.702\n\n\n19917\nZimbabwe\nZWE\n2016\n37.7949\n44.0875\n0.97629\n1.14752\n1.43611\n1.64832\n3.93881\n4.80345\n10.7236\n14.872\n32.8932\n42.7217\n82.5508\n112.388\n\n\n19918\nZimbabwe\nZWE\n2017\n36.8661\n43.1389\n0.95685\n1.12218\n1.38986\n1.61538\n3.73174\n4.70667\n10.2912\n14.6938\n32.3443\n42.7099\n81.9914\n112.102\n\n\n19919\nZimbabwe\nZWE\n2018\n35.4646\n41.6297\n0.89795\n1.04302\n1.32043\n1.53221\n3.51856\n4.42719\n9.86634\n13.892\n31.726\n42.13\n81.3326\n111.776\n\n\n19920\nZimbabwe\nZWE\n2019\n35.3383\n41.4167\n0.93255\n1.07613\n1.32845\n1.55651\n3.48048\n4.53653\n9.78645\n14.3989\n31.6513\n42.7631\n80.8855\n111.541\n\n\n19921\nZimbabwe\nZWE\n2020\n34.9539\n40.9834\n0.87637\n1.02782\n1.20826\n1.39351\n3.11532\n4.14614\n9.38663\n15.0135\n33.6533\n48.0212\n82.9557\n120.98\n\n\n19922\nZimbabwe\nZWE\n2021\n34.9083\n40.922\n0.86883\n1.02383\n1.30698\n1.58042\n3.38878\n4.70133\n10.5541\n17.1106\n38.6799\n56.6425\n100.369\n143.754\n\n\n\n\n\n\n\n\nCode\ncats=names(df)\nrename!(df,  \"Central death rate - Type: period - Sex: female - Age: 0\"=&gt;:female_age0, \n             \"Central death rate - Type: period - Sex: male - Age: 0\"=&gt;:male_age0, \n             \"Central death rate - Type: period - Sex: female - Age: 10\"=&gt;:female_age10, \n             \"Central death rate - Type: period - Sex: male - Age: 10\"=&gt;:male_age10, \n             \"Central death rate - Type: period - Sex: female - Age: 15\"=&gt;:female_age15, \n             \"Central death rate - Type: period - Sex: male - Age: 15\"=&gt;:male_age15, \n             \"Central death rate - Type: period - Sex: female - Age: 25\"=&gt;:female_age25, \n             \"Central death rate - Type: period - Sex: male - Age: 25\"=&gt;:male_age25, \n             \"Central death rate - Type: period - Sex: female - Age: 45\"=&gt;:female_age45, \n             \"Central death rate - Type: period - Sex: male - Age: 45\"=&gt;:male_age45,\n              \"Central death rate - Type: period - Sex: female - Age: 65\"=&gt;:female_age65, \n              \"Central death rate - Type: period - Sex: male - Age: 65\"=&gt;:male_age65, \n              \"Central death rate - Type: period - Sex: female - Age: 80\"=&gt;:female_age80, \n              \"Central death rate - Type: period - Sex: male - Age: 80\" =&gt;:male_age80 \n)\n\n\n19922×17 DataFrame19897 rows omitted\n\n\n\nRow\nEntity\nCode\nYear\nfemale_age0\nmale_age0\nfemale_age10\nmale_age10\nfemale_age15\nmale_age15\nfemale_age25\nmale_age25\nfemale_age45\nmale_age45\nfemale_age65\nmale_age65\nfemale_age80\nmale_age80\n\n\n\nString\nString15?\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nAfghanistan\nAFG\n1950\n328.053\n378.814\n7.72991\n6.52991\n9.96758\n8.11575\n15.0426\n14.8812\n21.2739\n27.5066\n67.6107\n77.0253\n211.223\n226.547\n\n\n2\nAfghanistan\nAFG\n1951\n324.777\n374.956\n7.65714\n6.47173\n9.87427\n8.0444\n14.9049\n14.7495\n21.0961\n27.2708\n67.1116\n76.5053\n209.885\n225.159\n\n\n3\nAfghanistan\nAFG\n1952\n318.286\n366.965\n7.51281\n6.3596\n9.6892\n7.90725\n14.6317\n14.4965\n20.7428\n26.8212\n66.1187\n75.5487\n207.22\n222.703\n\n\n4\nAfghanistan\nAFG\n1953\n311.888\n358.685\n7.37038\n6.25279\n9.50655\n7.77702\n14.3619\n14.2566\n20.3934\n26.3985\n65.1349\n74.6933\n204.573\n220.633\n\n\n5\nAfghanistan\nAFG\n1954\n305.975\n351.087\n7.47033\n6.32612\n9.54872\n7.80432\n14.3075\n14.1708\n20.3094\n26.2079\n64.6866\n74.327\n202.837\n219.442\n\n\n6\nAfghanistan\nAFG\n1955\n298.864\n342.552\n7.08519\n6.0428\n9.14193\n7.52088\n13.824\n13.7848\n19.7027\n25.5661\n63.2202\n72.9975\n199.518\n216.517\n\n\n7\nAfghanistan\nAFG\n1956\n292.437\n334.788\n6.9579\n5.95098\n8.97388\n7.40485\n13.5696\n13.5633\n19.3775\n25.173\n62.3198\n72.1939\n197.145\n214.542\n\n\n8\nAfghanistan\nAFG\n1957\n285.96\n327.082\n6.80497\n5.82437\n8.78425\n7.25426\n13.2964\n13.2944\n19.0277\n24.7002\n61.3636\n71.1901\n194.668\n212.095\n\n\n9\nAfghanistan\nAFG\n1958\n279.403\n319.298\n6.66214\n5.69684\n8.60189\n7.09851\n13.0273\n13.0086\n18.6822\n24.1954\n60.4097\n70.1002\n192.166\n209.401\n\n\n10\nAfghanistan\nAFG\n1959\n273.273\n312.183\n6.52603\n5.58004\n8.42824\n6.9558\n12.7715\n12.7468\n18.3544\n23.7325\n59.5094\n69.0955\n189.867\n206.911\n\n\n11\nAfghanistan\nAFG\n1960\n267.463\n305.598\n6.40648\n5.48074\n8.27133\n6.83256\n12.5389\n12.5175\n18.0579\n23.3241\n58.6735\n68.2023\n187.792\n204.59\n\n\n12\nAfghanistan\nAFG\n1961\n261.854\n298.886\n6.26721\n5.3612\n8.09831\n6.68825\n12.2866\n12.256\n17.7335\n22.8633\n57.8106\n67.1957\n185.652\n202.185\n\n\n13\nAfghanistan\nAFG\n1962\n256.655\n292.773\n6.14919\n5.26366\n7.9478\n6.56954\n12.0652\n12.0384\n17.4491\n22.4812\n57.0294\n66.3898\n183.704\n200.26\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n19911\nZimbabwe\nZWE\n2010\n53.9416\n60.8736\n1.63101\n1.90256\n2.49942\n2.61754\n8.802\n8.97857\n20.8596\n27.2927\n45.8422\n52.5112\n86.3175\n114.257\n\n\n19912\nZimbabwe\nZWE\n2011\n50.7671\n57.5466\n1.5059\n1.7603\n2.24074\n2.40589\n6.98757\n7.8604\n16.663\n23.4714\n41.1328\n49.1328\n85.6723\n113.942\n\n\n19913\nZimbabwe\nZWE\n2012\n45.8417\n52.3628\n1.2744\n1.53946\n1.90764\n2.12629\n5.97021\n6.73963\n14.7873\n20.558\n37.6887\n46.8993\n85.0377\n113.63\n\n\n19914\nZimbabwe\nZWE\n2013\n42.4171\n48.8878\n1.14827\n1.36861\n1.71382\n1.9229\n5.13833\n5.92327\n13.1951\n18.2398\n35.8164\n45.3136\n84.4419\n113.357\n\n\n19915\nZimbabwe\nZWE\n2014\n40.2433\n46.6497\n1.06513\n1.26043\n1.58333\n1.78416\n4.57123\n5.31936\n12.052\n16.3566\n34.5043\n43.8205\n83.7835\n113.008\n\n\n19916\nZimbabwe\nZWE\n2015\n39.3862\n45.7603\n1.03008\n1.21829\n1.51606\n1.7263\n4.23604\n5.0488\n11.3024\n15.4633\n33.6349\n43.0445\n83.1682\n112.702\n\n\n19917\nZimbabwe\nZWE\n2016\n37.7949\n44.0875\n0.97629\n1.14752\n1.43611\n1.64832\n3.93881\n4.80345\n10.7236\n14.872\n32.8932\n42.7217\n82.5508\n112.388\n\n\n19918\nZimbabwe\nZWE\n2017\n36.8661\n43.1389\n0.95685\n1.12218\n1.38986\n1.61538\n3.73174\n4.70667\n10.2912\n14.6938\n32.3443\n42.7099\n81.9914\n112.102\n\n\n19919\nZimbabwe\nZWE\n2018\n35.4646\n41.6297\n0.89795\n1.04302\n1.32043\n1.53221\n3.51856\n4.42719\n9.86634\n13.892\n31.726\n42.13\n81.3326\n111.776\n\n\n19920\nZimbabwe\nZWE\n2019\n35.3383\n41.4167\n0.93255\n1.07613\n1.32845\n1.55651\n3.48048\n4.53653\n9.78645\n14.3989\n31.6513\n42.7631\n80.8855\n111.541\n\n\n19921\nZimbabwe\nZWE\n2020\n34.9539\n40.9834\n0.87637\n1.02782\n1.20826\n1.39351\n3.11532\n4.14614\n9.38663\n15.0135\n33.6533\n48.0212\n82.9557\n120.98\n\n\n19922\nZimbabwe\nZWE\n2021\n34.9083\n40.922\n0.86883\n1.02383\n1.30698\n1.58042\n3.38878\n4.70133\n10.5541\n17.1106\n38.6799\n56.6425\n100.369\n143.754\n\n\n\n\n\n\n\n\nCode\nfemale_data=@chain df begin\n   @filter(Year==2021)\n   @select(1,3:17)\n   @select(startswith(\"female\"))\n   @summarize(female_age0=mean(female_age0),female_age10=mean(female_age10),female_age15=mean(female_age15),female_age25=mean(female_age25),    female_age45=mean(female_age45),female_age65=mean(female_age65),female_age80=mean(female_age80))\nend\n\n\n1×7 DataFrame\n\n\n\nRow\nfemale_age0\nfemale_age10\nfemale_age15\nfemale_age25\nfemale_age45\nfemale_age65\nfemale_age80\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n16.8304\n0.426706\n0.564174\n1.06755\n3.32511\n18.0247\n77.9603\n\n\n\n\n\n\n\n\nCode\nmale_data=@chain df begin\n   @filter(Year==2021)\n   @select(1,3:17)\n   @select(startswith(\"male\"))\n   @summarize(male_age0=mean(male_age0),male_age10=mean(male_age10),male_age15=mean(male_age15),male_age25=mean(male_age25),male_age45=mean(male_age45),male_age65=mean(male_age65),male_age80=mean(male_age80))\nend\n\n\n1×7 DataFrame\n\n\n\nRow\nmale_age0\nmale_age10\nmale_age15\nmale_age25\nmale_age45\nmale_age65\nmale_age80\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n20.0176\n0.504313\n0.759778\n1.84672\n5.45103\n29.892\n109.894",
    "crumbs": [
      "Data Viz",
      "Annual death rates in people of different ages, by sex world"
    ]
  },
  {
    "objectID": "vis/fishing-with-net-type.html",
    "href": "vis/fishing-with-net-type.html",
    "title": "Wild fish catch by gear type, World",
    "section": "",
    "text": "info\n\n\n\n\nref:Wild fish catch by gear type, World\nfishing gear type : Fish and Overfishing - Our World in Data\nload pacakge\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Wild fish catch by gear type, World"
    ]
  },
  {
    "objectID": "vis/fishing-with-net-type.html#load-data-dataframe",
    "href": "vis/fishing-with-net-type.html#load-data-dataframe",
    "title": "Wild fish catch by gear type, World",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/fish-catch-gear-type.csv\")|&gt;DataFrame|&gt;DataFrame|&gt;coalesce.(_, 0.0)|&gt;rename!(_,\"pelagic trawl\"=&gt;:pelagic_trawl)\n\n\n13730×11 DataFrame13705 rows omitted\n\n\n\nRow\nEntity\nCode\nYear\nunknown_gear\nother_gear\nlongline\ngillnet\nsmall_scale\npurse_seine\npelagic_trawl\nbottom_trawl\n\n\n\nString\nAny\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nAlbania\nALB\n1995\n1.21382\n135.643\n0.0\n0.0\n39.7734\n54.0707\n104.631\n1120.05\n\n\n2\nAlbania\nALB\n1996\n16.5429\n209.023\n0.0\n0.0\n50.4084\n84.432\n163.963\n1804.86\n\n\n3\nAlbania\nALB\n1997\n14.2151\n113.616\n0.0\n0.0\n13.3192\n38.8843\n75.6516\n810.648\n\n\n4\nAlbania\nALB\n1998\n14.2151\n219.064\n0.0\n0.0\n10.9106\n88.8256\n173.728\n1897.43\n\n\n5\nAlbania\nALB\n1999\n14.2151\n227.661\n0.0\n0.0\n11.3388\n92.3117\n180.907\n1972.6\n\n\n6\nAlbania\nALB\n2011\n634.994\n0.0\n0.0\n0.0\n21.7128\n143.804\n0.0\n3144.62\n\n\n7\nAlbania\nALB\n2012\n1499.1\n0.0\n0.0\n0.0\n45.1773\n339.495\n0.0\n7423.87\n\n\n8\nAlbania\nALB\n2013\n1561.1\n0.0\n0.0\n0.0\n47.0043\n353.535\n0.0\n7730.9\n\n\n9\nAlbania\nALB\n2014\n1869.72\n0.0\n0.0\n0.0\n71.146\n282.188\n0.0\n6170.72\n\n\n10\nAlbania\nALB\n2015\n1149.99\n0.0\n0.0\n0.0\n33.2955\n273.578\n0.0\n5982.43\n\n\n11\nAlbania\nALB\n2016\n1447.69\n0.0\n0.0\n0.0\n51.6242\n251.592\n0.0\n5501.66\n\n\n12\nAlbania\nALB\n2017\n1566.67\n0.0\n0.0\n0.0\n58.2399\n249.588\n0.0\n5457.85\n\n\n13\nAlbania\nALB\n2018\n899.878\n0.0\n0.0\n0.0\n17.0815\n299.842\n0.0\n6556.76\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n13719\nYemen\nYEM\n1999\n0.0\n10150.0\n0.0\n0.0\n1.73005e5\n0.0\n0.0\n89861.3\n\n\n13720\nYemen\nYEM\n2000\n0.0\n11239.5\n0.0\n0.0\n1.47774e5\n0.0\n0.0\n89681.5\n\n\n13721\nYemen\nYEM\n2001\n0.0\n10217.8\n0.0\n0.0\n1.85588e5\n0.0\n0.0\n1.02895e5\n\n\n13722\nYemen\nYEM\n2002\n0.0\n9503.93\n0.0\n0.0\n2.49449e5\n0.0\n0.0\n1.14498e5\n\n\n13723\nYemen\nYEM\n2003\n0.0\n26166.0\n0.0\n0.0\n3.29698e5\n0.0\n0.0\n1.03919e5\n\n\n13724\nYemen\nYEM\n2004\n0.0\n32574.7\n0.0\n0.0\n372192.0\n0.0\n0.0\n1.0894e5\n\n\n13725\nYemen\nYEM\n2005\n0.0\n30072.7\n0.0\n0.0\n351902.0\n0.0\n0.0\n95306.5\n\n\n13726\nYemen\nYEM\n2006\n0.0\n30707.2\n0.0\n0.0\n3.45725e5\n0.0\n0.0\n86286.5\n\n\n13727\nYemen\nYEM\n2007\n0.0\n27540.5\n0.0\n0.0\n2.61181e5\n0.0\n0.0\n74653.9\n\n\n13728\nYemen\nYEM\n2008\n0.0\n20552.1\n0.0\n0.0\n1.80339e5\n0.0\n0.0\n43331.4\n\n\n13729\nYemen\nYEM\n2009\n0.0\n24330.6\n0.0\n0.0\n2.29675e5\n0.0\n0.0\n57511.8\n\n\n13730\nYemen\nYEM\n2010\n0.0\n28806.0\n0.0\n0.0\n2.64376e5\n0.0\n0.0\n93367.3",
    "crumbs": [
      "Data Viz",
      "Wild fish catch by gear type, World"
    ]
  },
  {
    "objectID": "vis/fishing-with-net-type.html#data-processing",
    "href": "vis/fishing-with-net-type.html#data-processing",
    "title": "Wild fish catch by gear type, World",
    "section": "3. data processing",
    "text": "3. data processing\n\n\nCode\ndf=@chain df begin\n   @group_by(Year)\n   @summarize(unknown_gear=sum(unknown_gear),\n              other_gear=sum(other_gear),\n              longline=sum(other_gear),\n              gillnet=sum(gillnet),\n              small_scale=sum(small_scale),\n              purse_seine=sum(purse_seine),\n              pelagic_trawl=sum(pelagic_trawl),\n              bottom_trawl=sum(bottom_trawl)\n    )\n   @ungroup\n   @pivot_longer(_, unknown_gear:bottom_trawl,names_to = gear_type, values_to =weight)\nend\n\n\n552×3 DataFrame527 rows omitted\n\n\n\nRow\nYear\ngear_type\nweight\n\n\n\nInt64\nString\nFloat64\n\n\n\n\n1\n1995\nunknown_gear\n1.06338e7\n\n\n2\n1996\nunknown_gear\n1.0397e7\n\n\n3\n1997\nunknown_gear\n1.1286e7\n\n\n4\n1998\nunknown_gear\n1.08899e7\n\n\n5\n1999\nunknown_gear\n1.15815e7\n\n\n6\n2011\nunknown_gear\n1.05883e7\n\n\n7\n2012\nunknown_gear\n1.07134e7\n\n\n8\n2013\nunknown_gear\n1.0431e7\n\n\n9\n2014\nunknown_gear\n1.19992e7\n\n\n10\n2015\nunknown_gear\n1.54834e7\n\n\n11\n2016\nunknown_gear\n1.20867e7\n\n\n12\n2017\nunknown_gear\n1.6716e7\n\n\n13\n2018\nunknown_gear\n1.57526e7\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n541\n1994\nbottom_trawl\n5.43778e7\n\n\n542\n2000\nbottom_trawl\n5.18786e7\n\n\n543\n2001\nbottom_trawl\n5.23496e7\n\n\n544\n2002\nbottom_trawl\n5.20457e7\n\n\n545\n2003\nbottom_trawl\n5.00434e7\n\n\n546\n2004\nbottom_trawl\n5.05469e7\n\n\n547\n2005\nbottom_trawl\n4.82271e7\n\n\n548\n2006\nbottom_trawl\n4.84797e7\n\n\n549\n2007\nbottom_trawl\n4.7881e7\n\n\n550\n2008\nbottom_trawl\n4.76333e7\n\n\n551\n2009\nbottom_trawl\n4.80774e7\n\n\n552\n2010\nbottom_trawl\n4.89898e7",
    "crumbs": [
      "Data Viz",
      "Wild fish catch by gear type, World"
    ]
  },
  {
    "objectID": "vis/fishing-with-net-type.html#plot",
    "href": "vis/fishing-with-net-type.html#plot",
    "title": "Wild fish catch by gear type, World",
    "section": "4. plot",
    "text": "4. plot\n\n\nCode\n@rput df\nfunction plot_arestack_r()\n R\"\"\"\n    library(ggplot2)\n    library(ggthemes)\n    library(viridis)\n    ggplot(df, aes(x=Year, y=weight, fill=gear_type)) + \n    geom_area(alpha=0.6 , size=.5, colour=\"white\")+scale_fill_viridis(discrete = T)+theme_wsj()\n \"\"\"\nend\nplot_arestack_r()\n\n\n┌ Warning: RCall.jl: Warning: package ‘ggthemes’ was built under R version 4.2.3\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n┌ Warning: RCall.jl: Loading required package: viridisLite\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n┌ Warning: RCall.jl: Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n│ ℹ Please use `linewidth` instead.\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n\n\n\n\n\n\n\n\n\n\n\n(a) different gear fihsing amount\n\n\n\n\n\n\n\nRObject{VecSxp}\n\n\n(b)\n\n\n\n\n\nFigure 1",
    "crumbs": [
      "Data Viz",
      "Wild fish catch by gear type, World"
    ]
  },
  {
    "objectID": "vis/2016-summer-olympic.html",
    "href": "vis/2016-summer-olympic.html",
    "title": "2016 summer olympic games athlete statistics",
    "section": "",
    "text": "Code\nusing CairoMakie,CSV,DataFrames,Pipe,Tidier,AlgebraOfGraphics",
    "crumbs": [
      "Data Viz",
      "2016 summer olympic games athlete statistics"
    ]
  },
  {
    "objectID": "vis/2016-summer-olympic.html#load-pacakge",
    "href": "vis/2016-summer-olympic.html#load-pacakge",
    "title": "2016 summer olympic games athlete statistics",
    "section": "",
    "text": "Code\nusing CairoMakie,CSV,DataFrames,Pipe,Tidier,AlgebraOfGraphics",
    "crumbs": [
      "Data Viz",
      "2016 summer olympic games athlete statistics"
    ]
  },
  {
    "objectID": "vis/2016-summer-olympic.html#load-data-dataframe",
    "href": "vis/2016-summer-olympic.html#load-data-dataframe",
    "title": "2016 summer olympic games athlete statistics",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/penguins.csv\")|&gt;DataFrame\nfirst(df,10)\n\n\n10×7 DataFrame\n\n\n\nRow\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\nString15\nString15\nString7\nString7\nString3\nString7\nString7\n\n\n\n\n1\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n\n\n2\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n\n\n3\nAdelie\nTorgersen\n40.3\n18\n195\n3250\nfemale\n\n\n4\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n\n\n5\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n\n\n6\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n\n\n7\nAdelie\nTorgersen\n38.9\n17.8\n181\n3625\nfemale\n\n\n8\nAdelie\nTorgersen\n39.2\n19.6\n195\n4675\nmale\n\n\n9\nAdelie\nTorgersen\n34.1\n18.1\n193\n3475\nNA\n\n\n10\nAdelie\nTorgersen\n42\n20.2\n190\n4250\nNA\n\n\n\n\n\n\n\n\nCode\ndescribe(df)\n\n\n7×7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nNothing\nInlineSt…\nNothing\nInlineSt…\nInt64\nDataType\n\n\n\n\n1\nspecies\n\nAdelie\n\nGentoo\n0\nString15\n\n\n2\nisland\n\nBiscoe\n\nTorgersen\n0\nString15\n\n\n3\nbill_length_mm\n\n32.1\n\nNA\n0\nString7\n\n\n4\nbill_depth_mm\n\n13.1\n\nNA\n0\nString7\n\n\n5\nflipper_length_mm\n\n172\n\nNA\n0\nString3\n\n\n6\nbody_mass_g\n\n2700\n\nNA\n0\nString7\n\n\n7\nsex\n\nNA\n\nmale\n0\nString7\n\n\n\n\n\n\n#penguins = dropmissing(DataFrame(PalmerPenguins.load()))",
    "crumbs": [
      "Data Viz",
      "2016 summer olympic games athlete statistics"
    ]
  },
  {
    "objectID": "vis/2019-f1-statistics.html",
    "href": "vis/2019-f1-statistics.html",
    "title": "f1 2019 drivers statistics",
    "section": "",
    "text": "feature :[\"Drivers\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\"]",
    "crumbs": [
      "Data Viz",
      "f1 2019 drivers  statistics"
    ]
  },
  {
    "objectID": "vis/2019-f1-statistics.html#load-pacakge",
    "href": "vis/2019-f1-statistics.html#load-pacakge",
    "title": "f1 2019 drivers statistics",
    "section": "1. load pacakge",
    "text": "1. load pacakge\n\n\nCode\nusing CairoMakie,CSV,DataFrames,Pipe,Tidier",
    "crumbs": [
      "Data Viz",
      "f1 2019 drivers  statistics"
    ]
  },
  {
    "objectID": "vis/2019-f1-statistics.html#load-data-dataframe",
    "href": "vis/2019-f1-statistics.html#load-data-dataframe",
    "title": "f1 2019 drivers statistics",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\nfeature=[\"Height\",\"Weight\",\"Bodyfat\"]\ndf=@pipe CSV.File(\"./data/f1_2019_drivers_data.csv\")|&gt;DataFrame|&gt;dropmissing\nrow,cor=size(df)\nname=df.Drivers\nscore=df[:,2:end]\nfirst(df,10)\n\n\n10×22 DataFrame\n\n\n\nRow\nDrivers\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\nString31\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\nLewis Hamilton\n18\n25\n25\n18\n26\n25\n25\n25\n10\n26\n2\n25\n18\n16\n12\n26\n16\n25\n18\n6\n26\n\n\n2\nValtteri Bottas\n26\n18\n18\n25\n18\n15\n13\n18\n15\n18\n0\n4\n15\n18\n10\n18\n25\n15\n25\n0\n12\n\n\n3\nMax Verstappen\n15\n12\n12\n12\n15\n12\n10\n12\n26\n10\n26\n19\n0\n4\n15\n12\n0\n8\n15\n25\n18\n\n\n4\nCharles Leclerc\n10\n16\n10\n11\n10\n0\n15\n15\n18\n15\n0\n12\n25\n25\n18\n15\n8\n13\n13\n0\n15\n\n\n5\nSebastian Vettel\n12\n10\n15\n15\n12\n18\n18\n11\n12\n0\n18\n15\n13\n0\n25\n0\n18\n18\n0\n0\n10\n\n\n6\nCarlos Sainz Jnr\n0\n0\n0\n6\n4\n8\n0\n8\n4\n8\n10\n10\n0\n0\n0\n8\n10\n0\n4\n15\n1\n\n\n7\nPierre Gasly\n0\n4\n9\n0\n8\n11\n4\n1\n6\n12\n0\n8\n2\n0\n4\n0\n6\n2\n0\n18\n0\n\n\n8\nAlexander Albon\n0\n2\n1\n0\n0\n4\n0\n0\n0\n0\n8\n1\n10\n8\n8\n10\n12\n10\n10\n0\n8\n\n\n9\nDaniel Ricciardo\n0\n0\n6\n0\n0\n2\n8\n0\n0\n6\n0\n0\n0\n12\n0\n0\n0\n4\n8\n8\n0\n\n\n10\nSergio Perez\n0\n1\n4\n8\n0\n0\n0\n0\n0\n0\n0\n0\n8\n6\n0\n6\n4\n6\n1\n2\n6",
    "crumbs": [
      "Data Viz",
      "f1 2019 drivers  statistics"
    ]
  },
  {
    "objectID": "vis/2019-f1-statistics.html#plot",
    "href": "vis/2019-f1-statistics.html#plot",
    "title": "f1 2019 drivers statistics",
    "section": "3. plot",
    "text": "3. plot\n\n\nCode\nf1 = ByRow(hidedecorations!)\nf2 =ByRow(hidedecorations!)\nwith_theme(theme_black()) do\n fig=Figure(resolution=(600,900))\n supertitle = Label(fig[0, :], \"Formula One Drivers 2019 Season Points\", fontsize = 24)\n grids =[fig[idx, 1] = GridLayout() for idx in 1:row]\n \n for idx  in eachindex(grids)\n     name=df[idx,:].Drivers\n     score=Vector(df[idx,2:end])\n     sum_score=sum(score)\n     al=Axis(grids[idx][1,1])\n     ac=Axis(grids[idx][1,2])\n     ar=Axis(grids[idx][1,3])\n     text!(al,0,0;text=name,align=(:center,:center),fontsize = 16)\n     barplot!(ac, 1:21,score;color=:red,strokewidth=0.3,strokecolor=(:white))\n     text!(ar,0,0,text=\"$(sum_score)\",align=(:center,:center),fontsize = 16)\n     f1([al,ac,ar])\n     hidespines!(al)\n     hidespines!(ar)\n     hidespines!(ac, :t, :r,:l)\n end\n fig\nend",
    "crumbs": [
      "Data Viz",
      "f1 2019 drivers  statistics"
    ]
  },
  {
    "objectID": "vis/average-temperature-anomaly-world.html",
    "href": "vis/average-temperature-anomaly-world.html",
    "title": "Average temperature anomaly, Global",
    "section": "",
    "text": "info\n\n\n\n\nref:Average temperature anomaly, Global\nload pacakge\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Average temperature anomaly, Global"
    ]
  },
  {
    "objectID": "vis/average-temperature-anomaly-world.html#load-data-dataframe",
    "href": "vis/average-temperature-anomaly-world.html#load-data-dataframe",
    "title": "Average temperature anomaly, Global",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/temperature-anomaly.csv\")|&gt;DataFrame|&gt;DataFrame|&gt;coalesce.(_, 0.0)|&gt;rename!(_,\n\"Global average temperature anomaly relative to 1961-1990\"=&gt;:mean, \"Upper bound of the annual temperature anomaly (95% confidence interval)\"=&gt;:upper, \"Lower bound of the annual temperature anomaly (95% confidence interval)\"=&gt;:lower\n)\n\ngdf=groupby(df,:Entity)\ncats= @pipe keys(gdf) .|&gt; values(_)[1]\n\n\n3-element Vector{String31}:\n \"Global\"\n \"Northern hemisphere\"\n \"Southern hemisphere\"",
    "crumbs": [
      "Data Viz",
      "Average temperature anomaly, Global"
    ]
  },
  {
    "objectID": "vis/average-temperature-anomaly-world.html#plots",
    "href": "vis/average-temperature-anomaly-world.html#plots",
    "title": "Average temperature anomaly, Global",
    "section": "plots",
    "text": "plots\n\n\nCode\n fig=Figure()\n axs=[Axis(fig[i,1]) for i in 1:3]\n function plot_ci(df,ax,title)\n      ax.title=title\n      xs,mean,lower,upper=df.Year,df.mean,df.lower,df.upper\n      hlines!(ax,[0],linestyle=:dot,color=(:red,0.8))\n      lines!(ax,xs,mean,color=:blue)\n      band!(ax,xs,lower,upper,color=(:lightgreen,0.5))\n      \n      \n end\n\n #plot_ci(gdf[1],axs[1],title=\"blank\")\n\n for (idx, df) in enumerate(gdf)\n      plot_ci(df,axs[idx],cats[idx])\n end\n fig",
    "crumbs": [
      "Data Viz",
      "Average temperature anomaly, Global"
    ]
  },
  {
    "objectID": "vis/employment-in-ai.html",
    "href": "vis/employment-in-ai.html",
    "title": "Employer of new AI PhDs in the United States and Canada",
    "section": "",
    "text": "info\n\n\n\n\nref:Employer of new AI PhDs in the United States and Canada\nload pacakge\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Employer of new AI PhDs in the United States and Canada"
    ]
  },
  {
    "objectID": "vis/employment-in-ai.html#load-data-dataframe",
    "href": "vis/employment-in-ai.html#load-data-dataframe",
    "title": "Employer of new AI PhDs in the United States and Canada",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/employer-new-artificial-intelligence-phds-stacked-area.csv\")|&gt;DataFrame|&gt;\nrename!(_,\"New AI PhD graduates\"=&gt;:Phdstudent)\n\n\n36×4 DataFrame11 rows omitted\n\n\n\nRow\nEntity\nCode\nYear\nPhdstudent\n\n\n\nString15\nMissing\nInt64\nInt64\n\n\n\n\n1\nAcademia\nmissing\n2010\n72\n\n\n2\nAcademia\nmissing\n2011\n63\n\n\n3\nAcademia\nmissing\n2012\n47\n\n\n4\nAcademia\nmissing\n2013\n51\n\n\n5\nAcademia\nmissing\n2014\n43\n\n\n6\nAcademia\nmissing\n2015\n42\n\n\n7\nAcademia\nmissing\n2016\n63\n\n\n8\nAcademia\nmissing\n2017\n60\n\n\n9\nAcademia\nmissing\n2018\n73\n\n\n10\nAcademia\nmissing\n2019\n65\n\n\n11\nAcademia\nmissing\n2020\n61\n\n\n12\nAcademia\nmissing\n2021\n84\n\n\n13\nGovernment\nmissing\n2010\n6\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n25\nIndustry\nmissing\n2010\n76\n\n\n26\nIndustry\nmissing\n2011\n64\n\n\n27\nIndustry\nmissing\n2012\n101\n\n\n28\nIndustry\nmissing\n2013\n74\n\n\n29\nIndustry\nmissing\n2014\n85\n\n\n30\nIndustry\nmissing\n2015\n77\n\n\n31\nIndustry\nmissing\n2016\n134\n\n\n32\nIndustry\nmissing\n2017\n116\n\n\n33\nIndustry\nmissing\n2018\n162\n\n\n34\nIndustry\nmissing\n2019\n180\n\n\n35\nIndustry\nmissing\n2020\n153\n\n\n36\nIndustry\nmissing\n2021\n195",
    "crumbs": [
      "Data Viz",
      "Employer of new AI PhDs in the United States and Canada"
    ]
  },
  {
    "objectID": "vis/employment-in-ai.html#plot",
    "href": "vis/employment-in-ai.html#plot",
    "title": "Employer of new AI PhDs in the United States and Canada",
    "section": "3. plot",
    "text": "3. plot\n\n\nCode\n@rput df\nfunction plot_arestack_r()\n R\"\"\"\n    library(ggplot2)\n    library(ggthemes)\n    library(viridis)\n    ggplot(df, aes(x=Year, y=Phdstudent, fill=Entity)) + \n    geom_area(alpha=0.6 , size=.5, colour=\"white\")+scale_fill_viridis(discrete = T)+theme_wsj()\n \"\"\"\nend\nplot_arestack_r()\n\n\n┌ Warning: RCall.jl: Warning: package ‘ggthemes’ was built under R version 4.2.3\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n┌ Warning: RCall.jl: Loading required package: viridisLite\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n┌ Warning: RCall.jl: Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n│ ℹ Please use `linewidth` instead.\n└ @ RCall ~/.julia/packages/RCall/gOwEW/src/io.jl:172\n\n\n\n\n\n\n\n\n\n\n\n(a) Employer of new AI PhDs in the United States and Canada\n\n\n\n\n\n\n\nRObject{VecSxp}\n\n\n(b)\n\n\n\n\n\nFigure 1",
    "crumbs": [
      "Data Viz",
      "Employer of new AI PhDs in the United States and Canada"
    ]
  },
  {
    "objectID": "vis/american-view-on-ai.html",
    "href": "vis/american-view-on-ai.html",
    "title": "Views of Americans about robot vs. human intelligence, All adults”",
    "section": "",
    "text": "info\n\n\n\n\nref:Views of Americans about robot vs. human intelligence, All adults\nload pacakge\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Views of Americans about robot vs. human intelligence, All adults\""
    ]
  },
  {
    "objectID": "vis/american-view-on-ai.html#load-data-dataframe",
    "href": "vis/american-view-on-ai.html#load-data-dataframe",
    "title": "Views of Americans about robot vs. human intelligence, All adults”",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\n    df=@pipe CSV.File(\"./data/views-of-americans-robot-vs-human-intelligence.csv\")|&gt;DataFrame|&gt;coalesce.(_, 0.0)\n\nfirst(df,5)\n\n\n5×8 DataFrame\n\n\n\nRow\nEntity\nCode\nDay\nNone of these\nDon't know\nMost robots have already developed higher levels of intelligence than humans\nRobots will never be able to develop higher levels of intelligence than humans\nRobots will be able to develop higher levels of intelligence than humans in the future\n\n\n\nString31\nFloat64\nDate\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\n18-29 years\n0.0\n2021-01-07\n6\n18\n14\n14\n47\n\n\n2\n18-29 years\n0.0\n2021-07-01\n8\n22\n19\n12\n39\n\n\n3\n18-29 years\n0.0\n2022-01-06\n3\n20\n11\n17\n49\n\n\n4\n18-29 years\n0.0\n2022-06-30\n9\n18\n20\n18\n35\n\n\n5\n18-29 years\n0.0\n2023-01-05\n9\n14\n16\n15\n46",
    "crumbs": [
      "Data Viz",
      "Views of Americans about robot vs. human intelligence, All adults\""
    ]
  },
  {
    "objectID": "vis/american-view-on-ai.html#data-processing",
    "href": "vis/american-view-on-ai.html#data-processing",
    "title": "Views of Americans about robot vs. human intelligence, All adults”",
    "section": "data processing",
    "text": "data processing\n\n\nCode\n cats=names(df)\n rename!(df,\"None of these\"=&gt;:none,\"Don't know\"=&gt;:dtkonw,\n \"Most robots have already developed higher levels of intelligence than humans\"=&gt;:better,\n \"Robots will never be able to develop higher levels of intelligence than humans\"=&gt;:nobetter,\n \"Robots will be able to develop higher levels of intelligence than humans in the future\"=&gt;:future\n \n )\n\n df2=@chain df begin\n    @group_by(Day)\n    @summarize(none=sum(none),dtkonw=sum(dtkonw),   better=sum(better),nobetter=sum(better),future=sum(future))\n    \n end\n\n\n6×6 DataFrame\n\n\n\nRow\nDay\nnone\ndtkonw\nbetter\nnobetter\nfuture\n\n\n\nDate\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\n2021-01-07\n136\n482\n263\n263\n958\n\n\n2\n2021-07-01\n139\n560\n345\n345\n793\n\n\n3\n2022-01-06\n146\n538\n277\n277\n933\n\n\n4\n2022-06-30\n243\n441\n346\n346\n883\n\n\n5\n2023-01-05\n240\n494\n303\n303\n906\n\n\n6\n2023-06-29\n181\n478\n410\n410\n832\n\n\n\n\n\n\n\n\nCode\naxis = (width = 1000, height =500,xticklabelrotation = pi/8,title=\"Attitude about AI development\",yticks=(range(100,1000,7),[\"$i %\" for i in 5:5:35]))\ndata_layer = data(df2)\nmapping_layer=mapping(:Day,[:none,:dtkonw,:better,:nobetter,:future].=&gt; \"value\", color=dims(1) =&gt; renamer(cats[4:8]) =&gt; \"opinion\")\nvisual_layer = visual(ScatterLines;stroke=1,strokecolor=(:red,0.8),markersize=10,linewidth=3)\ndraw(data_layer * mapping_layer * visual_layer,axis=axis,\n legend=(position=:right, titleposition=:top, framevisible=true, padding=5)\n)\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Views of Americans about robot vs. human intelligence, All adults\""
    ]
  },
  {
    "objectID": "vis/tidierplot-1.html",
    "href": "vis/tidierplot-1.html",
    "title": "TidierPlot demo",
    "section": "",
    "text": "Code\nusing Tidier,TidierPlots\nusing DataFrames,CSV,Pipe\n\npenguins =@pipe CSV.File(\"./data/penguine_data.csv\")|&gt;DataFrame|&gt;dropmissing\n@show penguins\nggplot(data = penguins) + \n    geom_bar(aes(x = :species,color=:species))+labs(x = \"Species\")\n\n\npenguins = 344×7 DataFrame\n Row │ species    island     bill_length_mm  bill_depth_mm  flipper_length_mm  body_mass_g  sex\n     │ String15   String15   String7         String7        String3            String7      String7\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ Adelie     Torgersen  39.1            18.7           181                3750         male\n   2 │ Adelie     Torgersen  39.5            17.4           186                3800         female\n   3 │ Adelie     Torgersen  40.3            18             195                3250         female\n   4 │ Adelie     Torgersen  NA              NA             NA                 NA           NA\n   5 │ Adelie     Torgersen  36.7            19.3           193                3450         female\n   6 │ Adelie     Torgersen  39.3            20.6           190                3650         male\n   7 │ Adelie     Torgersen  38.9            17.8           181                3625         female\n   8 │ Adelie     Torgersen  39.2            19.6           195                4675         male\n   9 │ Adelie     Torgersen  34.1            18.1           193                3475         NA\n  10 │ Adelie     Torgersen  42              20.2           190                4250         NA\n  11 │ Adelie     Torgersen  37.8            17.1           186                3300         NA\n  12 │ Adelie     Torgersen  37.8            17.3           180                3700         NA\n  13 │ Adelie     Torgersen  41.1            17.6           182                3200         female\n  14 │ Adelie     Torgersen  38.6            21.2           191                3800         male\n  15 │ Adelie     Torgersen  34.6            21.1           198                4400         male\n  16 │ Adelie     Torgersen  36.6            17.8           185                3700         female\n  17 │ Adelie     Torgersen  38.7            19             195                3450         female\n  18 │ Adelie     Torgersen  42.5            20.7           197                4500         male\n  19 │ Adelie     Torgersen  34.4            18.4           184                3325         female\n  20 │ Adelie     Torgersen  46              21.5           194                4200         male\n  21 │ Adelie     Biscoe     37.8            18.3           174                3400         female\n  22 │ Adelie     Biscoe     37.7            18.7           180                3600         male\n  23 │ Adelie     Biscoe     35.9            19.2           189                3800         female\n  24 │ Adelie     Biscoe     38.2            18.1           185                3950         male\n  25 │ Adelie     Biscoe     38.8            17.2           180                3800         male\n  26 │ Adelie     Biscoe     35.3            18.9           187                3800         female\n  27 │ Adelie     Biscoe     40.6            18.6           183                3550         male\n  28 │ Adelie     Biscoe     40.5            17.9           187                3200         female\n  29 │ Adelie     Biscoe     37.9            18.6           172                3150         female\n  30 │ Adelie     Biscoe     40.5            18.9           180                3950         male\n  31 │ Adelie     Dream      39.5            16.7           178                3250         female\n  32 │ Adelie     Dream      37.2            18.1           178                3900         male\n  33 │ Adelie     Dream      39.5            17.8           188                3300         female\n  34 │ Adelie     Dream      40.9            18.9           184                3900         male\n  35 │ Adelie     Dream      36.4            17             195                3325         female\n  36 │ Adelie     Dream      39.2            21.1           196                4150         male\n  37 │ Adelie     Dream      38.8            20             190                3950         male\n  38 │ Adelie     Dream      42.2            18.5           180                3550         female\n  39 │ Adelie     Dream      37.6            19.3           181                3300         female\n  40 │ Adelie     Dream      39.8            19.1           184                4650         male\n  41 │ Adelie     Dream      36.5            18             182                3150         female\n  42 │ Adelie     Dream      40.8            18.4           195                3900         male\n  43 │ Adelie     Dream      36              18.5           186                3100         female\n  44 │ Adelie     Dream      44.1            19.7           196                4400         male\n  45 │ Adelie     Dream      37              16.9           185                3000         female\n  46 │ Adelie     Dream      39.6            18.8           190                4600         male\n  47 │ Adelie     Dream      41.1            19             182                3425         male\n  48 │ Adelie     Dream      37.5            18.9           179                2975         NA\n  49 │ Adelie     Dream      36              17.9           190                3450         female\n  50 │ Adelie     Dream      42.3            21.2           191                4150         male\n  51 │ Adelie     Biscoe     39.6            17.7           186                3500         female\n  52 │ Adelie     Biscoe     40.1            18.9           188                4300         male\n  53 │ Adelie     Biscoe     35              17.9           190                3450         female\n  54 │ Adelie     Biscoe     42              19.5           200                4050         male\n  55 │ Adelie     Biscoe     34.5            18.1           187                2900         female\n  56 │ Adelie     Biscoe     41.4            18.6           191                3700         male\n  57 │ Adelie     Biscoe     39              17.5           186                3550         female\n  58 │ Adelie     Biscoe     40.6            18.8           193                3800         male\n  59 │ Adelie     Biscoe     36.5            16.6           181                2850         female\n  60 │ Adelie     Biscoe     37.6            19.1           194                3750         male\n  61 │ Adelie     Biscoe     35.7            16.9           185                3150         female\n  62 │ Adelie     Biscoe     41.3            21.1           195                4400         male\n  63 │ Adelie     Biscoe     37.6            17             185                3600         female\n  64 │ Adelie     Biscoe     41.1            18.2           192                4050         male\n  65 │ Adelie     Biscoe     36.4            17.1           184                2850         female\n  66 │ Adelie     Biscoe     41.6            18             192                3950         male\n  67 │ Adelie     Biscoe     35.5            16.2           195                3350         female\n  68 │ Adelie     Biscoe     41.1            19.1           188                4100         male\n  69 │ Adelie     Torgersen  35.9            16.6           190                3050         female\n  70 │ Adelie     Torgersen  41.8            19.4           198                4450         male\n  71 │ Adelie     Torgersen  33.5            19             190                3600         female\n  72 │ Adelie     Torgersen  39.7            18.4           190                3900         male\n  73 │ Adelie     Torgersen  39.6            17.2           196                3550         female\n  74 │ Adelie     Torgersen  45.8            18.9           197                4150         male\n  75 │ Adelie     Torgersen  35.5            17.5           190                3700         female\n  76 │ Adelie     Torgersen  42.8            18.5           195                4250         male\n  77 │ Adelie     Torgersen  40.9            16.8           191                3700         female\n  78 │ Adelie     Torgersen  37.2            19.4           184                3900         male\n  79 │ Adelie     Torgersen  36.2            16.1           187                3550         female\n  80 │ Adelie     Torgersen  42.1            19.1           195                4000         male\n  81 │ Adelie     Torgersen  34.6            17.2           189                3200         female\n  82 │ Adelie     Torgersen  42.9            17.6           196                4700         male\n  83 │ Adelie     Torgersen  36.7            18.8           187                3800         female\n  84 │ Adelie     Torgersen  35.1            19.4           193                4200         male\n  85 │ Adelie     Dream      37.3            17.8           191                3350         female\n  86 │ Adelie     Dream      41.3            20.3           194                3550         male\n  87 │ Adelie     Dream      36.3            19.5           190                3800         male\n  88 │ Adelie     Dream      36.9            18.6           189                3500         female\n  89 │ Adelie     Dream      38.3            19.2           189                3950         male\n  90 │ Adelie     Dream      38.9            18.8           190                3600         female\n  91 │ Adelie     Dream      35.7            18             202                3550         female\n  92 │ Adelie     Dream      41.1            18.1           205                4300         male\n  93 │ Adelie     Dream      34              17.1           185                3400         female\n  94 │ Adelie     Dream      39.6            18.1           186                4450         male\n  95 │ Adelie     Dream      36.2            17.3           187                3300         female\n  96 │ Adelie     Dream      40.8            18.9           208                4300         male\n  97 │ Adelie     Dream      38.1            18.6           190                3700         female\n  98 │ Adelie     Dream      40.3            18.5           196                4350         male\n  99 │ Adelie     Dream      33.1            16.1           178                2900         female\n 100 │ Adelie     Dream      43.2            18.5           192                4100         male\n 101 │ Adelie     Biscoe     35              17.9           192                3725         female\n 102 │ Adelie     Biscoe     41              20             203                4725         male\n 103 │ Adelie     Biscoe     37.7            16             183                3075         female\n 104 │ Adelie     Biscoe     37.8            20             190                4250         male\n 105 │ Adelie     Biscoe     37.9            18.6           193                2925         female\n 106 │ Adelie     Biscoe     39.7            18.9           184                3550         male\n 107 │ Adelie     Biscoe     38.6            17.2           199                3750         female\n 108 │ Adelie     Biscoe     38.2            20             190                3900         male\n 109 │ Adelie     Biscoe     38.1            17             181                3175         female\n 110 │ Adelie     Biscoe     43.2            19             197                4775         male\n 111 │ Adelie     Biscoe     38.1            16.5           198                3825         female\n 112 │ Adelie     Biscoe     45.6            20.3           191                4600         male\n 113 │ Adelie     Biscoe     39.7            17.7           193                3200         female\n 114 │ Adelie     Biscoe     42.2            19.5           197                4275         male\n 115 │ Adelie     Biscoe     39.6            20.7           191                3900         female\n 116 │ Adelie     Biscoe     42.7            18.3           196                4075         male\n 117 │ Adelie     Torgersen  38.6            17             188                2900         female\n 118 │ Adelie     Torgersen  37.3            20.5           199                3775         male\n 119 │ Adelie     Torgersen  35.7            17             189                3350         female\n 120 │ Adelie     Torgersen  41.1            18.6           189                3325         male\n 121 │ Adelie     Torgersen  36.2            17.2           187                3150         female\n 122 │ Adelie     Torgersen  37.7            19.8           198                3500         male\n 123 │ Adelie     Torgersen  40.2            17             176                3450         female\n 124 │ Adelie     Torgersen  41.4            18.5           202                3875         male\n 125 │ Adelie     Torgersen  35.2            15.9           186                3050         female\n 126 │ Adelie     Torgersen  40.6            19             199                4000         male\n 127 │ Adelie     Torgersen  38.8            17.6           191                3275         female\n 128 │ Adelie     Torgersen  41.5            18.3           195                4300         male\n 129 │ Adelie     Torgersen  39              17.1           191                3050         female\n 130 │ Adelie     Torgersen  44.1            18             210                4000         male\n 131 │ Adelie     Torgersen  38.5            17.9           190                3325         female\n 132 │ Adelie     Torgersen  43.1            19.2           197                3500         male\n 133 │ Adelie     Dream      36.8            18.5           193                3500         female\n 134 │ Adelie     Dream      37.5            18.5           199                4475         male\n 135 │ Adelie     Dream      38.1            17.6           187                3425         female\n 136 │ Adelie     Dream      41.1            17.5           190                3900         male\n 137 │ Adelie     Dream      35.6            17.5           191                3175         female\n 138 │ Adelie     Dream      40.2            20.1           200                3975         male\n 139 │ Adelie     Dream      37              16.5           185                3400         female\n 140 │ Adelie     Dream      39.7            17.9           193                4250         male\n 141 │ Adelie     Dream      40.2            17.1           193                3400         female\n 142 │ Adelie     Dream      40.6            17.2           187                3475         male\n 143 │ Adelie     Dream      32.1            15.5           188                3050         female\n 144 │ Adelie     Dream      40.7            17             190                3725         male\n 145 │ Adelie     Dream      37.3            16.8           192                3000         female\n 146 │ Adelie     Dream      39              18.7           185                3650         male\n 147 │ Adelie     Dream      39.2            18.6           190                4250         male\n 148 │ Adelie     Dream      36.6            18.4           184                3475         female\n 149 │ Adelie     Dream      36              17.8           195                3450         female\n 150 │ Adelie     Dream      37.8            18.1           193                3750         male\n 151 │ Adelie     Dream      36              17.1           187                3700         female\n 152 │ Adelie     Dream      41.5            18.5           201                4000         male\n 153 │ Gentoo     Biscoe     46.1            13.2           211                4500         female\n 154 │ Gentoo     Biscoe     50              16.3           230                5700         male\n 155 │ Gentoo     Biscoe     48.7            14.1           210                4450         female\n 156 │ Gentoo     Biscoe     50              15.2           218                5700         male\n 157 │ Gentoo     Biscoe     47.6            14.5           215                5400         male\n 158 │ Gentoo     Biscoe     46.5            13.5           210                4550         female\n 159 │ Gentoo     Biscoe     45.4            14.6           211                4800         female\n 160 │ Gentoo     Biscoe     46.7            15.3           219                5200         male\n 161 │ Gentoo     Biscoe     43.3            13.4           209                4400         female\n 162 │ Gentoo     Biscoe     46.8            15.4           215                5150         male\n 163 │ Gentoo     Biscoe     40.9            13.7           214                4650         female\n 164 │ Gentoo     Biscoe     49              16.1           216                5550         male\n 165 │ Gentoo     Biscoe     45.5            13.7           214                4650         female\n 166 │ Gentoo     Biscoe     48.4            14.6           213                5850         male\n 167 │ Gentoo     Biscoe     45.8            14.6           210                4200         female\n 168 │ Gentoo     Biscoe     49.3            15.7           217                5850         male\n 169 │ Gentoo     Biscoe     42              13.5           210                4150         female\n 170 │ Gentoo     Biscoe     49.2            15.2           221                6300         male\n 171 │ Gentoo     Biscoe     46.2            14.5           209                4800         female\n 172 │ Gentoo     Biscoe     48.7            15.1           222                5350         male\n 173 │ Gentoo     Biscoe     50.2            14.3           218                5700         male\n 174 │ Gentoo     Biscoe     45.1            14.5           215                5000         female\n 175 │ Gentoo     Biscoe     46.5            14.5           213                4400         female\n 176 │ Gentoo     Biscoe     46.3            15.8           215                5050         male\n 177 │ Gentoo     Biscoe     42.9            13.1           215                5000         female\n 178 │ Gentoo     Biscoe     46.1            15.1           215                5100         male\n 179 │ Gentoo     Biscoe     44.5            14.3           216                4100         NA\n 180 │ Gentoo     Biscoe     47.8            15             215                5650         male\n 181 │ Gentoo     Biscoe     48.2            14.3           210                4600         female\n 182 │ Gentoo     Biscoe     50              15.3           220                5550         male\n 183 │ Gentoo     Biscoe     47.3            15.3           222                5250         male\n 184 │ Gentoo     Biscoe     42.8            14.2           209                4700         female\n 185 │ Gentoo     Biscoe     45.1            14.5           207                5050         female\n 186 │ Gentoo     Biscoe     59.6            17             230                6050         male\n 187 │ Gentoo     Biscoe     49.1            14.8           220                5150         female\n 188 │ Gentoo     Biscoe     48.4            16.3           220                5400         male\n 189 │ Gentoo     Biscoe     42.6            13.7           213                4950         female\n 190 │ Gentoo     Biscoe     44.4            17.3           219                5250         male\n 191 │ Gentoo     Biscoe     44              13.6           208                4350         female\n 192 │ Gentoo     Biscoe     48.7            15.7           208                5350         male\n 193 │ Gentoo     Biscoe     42.7            13.7           208                3950         female\n 194 │ Gentoo     Biscoe     49.6            16             225                5700         male\n 195 │ Gentoo     Biscoe     45.3            13.7           210                4300         female\n 196 │ Gentoo     Biscoe     49.6            15             216                4750         male\n 197 │ Gentoo     Biscoe     50.5            15.9           222                5550         male\n 198 │ Gentoo     Biscoe     43.6            13.9           217                4900         female\n 199 │ Gentoo     Biscoe     45.5            13.9           210                4200         female\n 200 │ Gentoo     Biscoe     50.5            15.9           225                5400         male\n 201 │ Gentoo     Biscoe     44.9            13.3           213                5100         female\n 202 │ Gentoo     Biscoe     45.2            15.8           215                5300         male\n 203 │ Gentoo     Biscoe     46.6            14.2           210                4850         female\n 204 │ Gentoo     Biscoe     48.5            14.1           220                5300         male\n 205 │ Gentoo     Biscoe     45.1            14.4           210                4400         female\n 206 │ Gentoo     Biscoe     50.1            15             225                5000         male\n 207 │ Gentoo     Biscoe     46.5            14.4           217                4900         female\n 208 │ Gentoo     Biscoe     45              15.4           220                5050         male\n 209 │ Gentoo     Biscoe     43.8            13.9           208                4300         female\n 210 │ Gentoo     Biscoe     45.5            15             220                5000         male\n 211 │ Gentoo     Biscoe     43.2            14.5           208                4450         female\n 212 │ Gentoo     Biscoe     50.4            15.3           224                5550         male\n 213 │ Gentoo     Biscoe     45.3            13.8           208                4200         female\n 214 │ Gentoo     Biscoe     46.2            14.9           221                5300         male\n 215 │ Gentoo     Biscoe     45.7            13.9           214                4400         female\n 216 │ Gentoo     Biscoe     54.3            15.7           231                5650         male\n 217 │ Gentoo     Biscoe     45.8            14.2           219                4700         female\n 218 │ Gentoo     Biscoe     49.8            16.8           230                5700         male\n 219 │ Gentoo     Biscoe     46.2            14.4           214                4650         NA\n 220 │ Gentoo     Biscoe     49.5            16.2           229                5800         male\n 221 │ Gentoo     Biscoe     43.5            14.2           220                4700         female\n 222 │ Gentoo     Biscoe     50.7            15             223                5550         male\n 223 │ Gentoo     Biscoe     47.7            15             216                4750         female\n 224 │ Gentoo     Biscoe     46.4            15.6           221                5000         male\n 225 │ Gentoo     Biscoe     48.2            15.6           221                5100         male\n 226 │ Gentoo     Biscoe     46.5            14.8           217                5200         female\n 227 │ Gentoo     Biscoe     46.4            15             216                4700         female\n 228 │ Gentoo     Biscoe     48.6            16             230                5800         male\n 229 │ Gentoo     Biscoe     47.5            14.2           209                4600         female\n 230 │ Gentoo     Biscoe     51.1            16.3           220                6000         male\n 231 │ Gentoo     Biscoe     45.2            13.8           215                4750         female\n 232 │ Gentoo     Biscoe     45.2            16.4           223                5950         male\n 233 │ Gentoo     Biscoe     49.1            14.5           212                4625         female\n 234 │ Gentoo     Biscoe     52.5            15.6           221                5450         male\n 235 │ Gentoo     Biscoe     47.4            14.6           212                4725         female\n 236 │ Gentoo     Biscoe     50              15.9           224                5350         male\n 237 │ Gentoo     Biscoe     44.9            13.8           212                4750         female\n 238 │ Gentoo     Biscoe     50.8            17.3           228                5600         male\n 239 │ Gentoo     Biscoe     43.4            14.4           218                4600         female\n 240 │ Gentoo     Biscoe     51.3            14.2           218                5300         male\n 241 │ Gentoo     Biscoe     47.5            14             212                4875         female\n 242 │ Gentoo     Biscoe     52.1            17             230                5550         male\n 243 │ Gentoo     Biscoe     47.5            15             218                4950         female\n 244 │ Gentoo     Biscoe     52.2            17.1           228                5400         male\n 245 │ Gentoo     Biscoe     45.5            14.5           212                4750         female\n 246 │ Gentoo     Biscoe     49.5            16.1           224                5650         male\n 247 │ Gentoo     Biscoe     44.5            14.7           214                4850         female\n 248 │ Gentoo     Biscoe     50.8            15.7           226                5200         male\n 249 │ Gentoo     Biscoe     49.4            15.8           216                4925         male\n 250 │ Gentoo     Biscoe     46.9            14.6           222                4875         female\n 251 │ Gentoo     Biscoe     48.4            14.4           203                4625         female\n 252 │ Gentoo     Biscoe     51.1            16.5           225                5250         male\n 253 │ Gentoo     Biscoe     48.5            15             219                4850         female\n 254 │ Gentoo     Biscoe     55.9            17             228                5600         male\n 255 │ Gentoo     Biscoe     47.2            15.5           215                4975         female\n 256 │ Gentoo     Biscoe     49.1            15             228                5500         male\n 257 │ Gentoo     Biscoe     47.3            13.8           216                4725         NA\n 258 │ Gentoo     Biscoe     46.8            16.1           215                5500         male\n 259 │ Gentoo     Biscoe     41.7            14.7           210                4700         female\n 260 │ Gentoo     Biscoe     53.4            15.8           219                5500         male\n 261 │ Gentoo     Biscoe     43.3            14             208                4575         female\n 262 │ Gentoo     Biscoe     48.1            15.1           209                5500         male\n 263 │ Gentoo     Biscoe     50.5            15.2           216                5000         female\n 264 │ Gentoo     Biscoe     49.8            15.9           229                5950         male\n 265 │ Gentoo     Biscoe     43.5            15.2           213                4650         female\n 266 │ Gentoo     Biscoe     51.5            16.3           230                5500         male\n 267 │ Gentoo     Biscoe     46.2            14.1           217                4375         female\n 268 │ Gentoo     Biscoe     55.1            16             230                5850         male\n 269 │ Gentoo     Biscoe     44.5            15.7           217                4875         NA\n 270 │ Gentoo     Biscoe     48.8            16.2           222                6000         male\n 271 │ Gentoo     Biscoe     47.2            13.7           214                4925         female\n 272 │ Gentoo     Biscoe     NA              NA             NA                 NA           NA\n 273 │ Gentoo     Biscoe     46.8            14.3           215                4850         female\n 274 │ Gentoo     Biscoe     50.4            15.7           222                5750         male\n 275 │ Gentoo     Biscoe     45.2            14.8           212                5200         female\n 276 │ Gentoo     Biscoe     49.9            16.1           213                5400         male\n 277 │ Chinstrap  Dream      46.5            17.9           192                3500         female\n 278 │ Chinstrap  Dream      50              19.5           196                3900         male\n 279 │ Chinstrap  Dream      51.3            19.2           193                3650         male\n 280 │ Chinstrap  Dream      45.4            18.7           188                3525         female\n 281 │ Chinstrap  Dream      52.7            19.8           197                3725         male\n 282 │ Chinstrap  Dream      45.2            17.8           198                3950         female\n 283 │ Chinstrap  Dream      46.1            18.2           178                3250         female\n 284 │ Chinstrap  Dream      51.3            18.2           197                3750         male\n 285 │ Chinstrap  Dream      46              18.9           195                4150         female\n 286 │ Chinstrap  Dream      51.3            19.9           198                3700         male\n 287 │ Chinstrap  Dream      46.6            17.8           193                3800         female\n 288 │ Chinstrap  Dream      51.7            20.3           194                3775         male\n 289 │ Chinstrap  Dream      47              17.3           185                3700         female\n 290 │ Chinstrap  Dream      52              18.1           201                4050         male\n 291 │ Chinstrap  Dream      45.9            17.1           190                3575         female\n 292 │ Chinstrap  Dream      50.5            19.6           201                4050         male\n 293 │ Chinstrap  Dream      50.3            20             197                3300         male\n 294 │ Chinstrap  Dream      58              17.8           181                3700         female\n 295 │ Chinstrap  Dream      46.4            18.6           190                3450         female\n 296 │ Chinstrap  Dream      49.2            18.2           195                4400         male\n 297 │ Chinstrap  Dream      42.4            17.3           181                3600         female\n 298 │ Chinstrap  Dream      48.5            17.5           191                3400         male\n 299 │ Chinstrap  Dream      43.2            16.6           187                2900         female\n 300 │ Chinstrap  Dream      50.6            19.4           193                3800         male\n 301 │ Chinstrap  Dream      46.7            17.9           195                3300         female\n 302 │ Chinstrap  Dream      52              19             197                4150         male\n 303 │ Chinstrap  Dream      50.5            18.4           200                3400         female\n 304 │ Chinstrap  Dream      49.5            19             200                3800         male\n 305 │ Chinstrap  Dream      46.4            17.8           191                3700         female\n 306 │ Chinstrap  Dream      52.8            20             205                4550         male\n 307 │ Chinstrap  Dream      40.9            16.6           187                3200         female\n 308 │ Chinstrap  Dream      54.2            20.8           201                4300         male\n 309 │ Chinstrap  Dream      42.5            16.7           187                3350         female\n 310 │ Chinstrap  Dream      51              18.8           203                4100         male\n 311 │ Chinstrap  Dream      49.7            18.6           195                3600         male\n 312 │ Chinstrap  Dream      47.5            16.8           199                3900         female\n 313 │ Chinstrap  Dream      47.6            18.3           195                3850         female\n 314 │ Chinstrap  Dream      52              20.7           210                4800         male\n 315 │ Chinstrap  Dream      46.9            16.6           192                2700         female\n 316 │ Chinstrap  Dream      53.5            19.9           205                4500         male\n 317 │ Chinstrap  Dream      49              19.5           210                3950         male\n 318 │ Chinstrap  Dream      46.2            17.5           187                3650         female\n 319 │ Chinstrap  Dream      50.9            19.1           196                3550         male\n 320 │ Chinstrap  Dream      45.5            17             196                3500         female\n 321 │ Chinstrap  Dream      50.9            17.9           196                3675         female\n 322 │ Chinstrap  Dream      50.8            18.5           201                4450         male\n 323 │ Chinstrap  Dream      50.1            17.9           190                3400         female\n 324 │ Chinstrap  Dream      49              19.6           212                4300         male\n 325 │ Chinstrap  Dream      51.5            18.7           187                3250         male\n 326 │ Chinstrap  Dream      49.8            17.3           198                3675         female\n 327 │ Chinstrap  Dream      48.1            16.4           199                3325         female\n 328 │ Chinstrap  Dream      51.4            19             201                3950         male\n 329 │ Chinstrap  Dream      45.7            17.3           193                3600         female\n 330 │ Chinstrap  Dream      50.7            19.7           203                4050         male\n 331 │ Chinstrap  Dream      42.5            17.3           187                3350         female\n 332 │ Chinstrap  Dream      52.2            18.8           197                3450         male\n 333 │ Chinstrap  Dream      45.2            16.6           191                3250         female\n 334 │ Chinstrap  Dream      49.3            19.9           203                4050         male\n 335 │ Chinstrap  Dream      50.2            18.8           202                3800         male\n 336 │ Chinstrap  Dream      45.6            19.4           194                3525         female\n 337 │ Chinstrap  Dream      51.9            19.5           206                3950         male\n 338 │ Chinstrap  Dream      46.8            16.5           189                3650         female\n 339 │ Chinstrap  Dream      45.7            17             195                3650         female\n 340 │ Chinstrap  Dream      55.8            19.8           207                4000         male\n 341 │ Chinstrap  Dream      43.5            18.1           202                3400         female\n 342 │ Chinstrap  Dream      49.6            18.2           193                3775         male\n 343 │ Chinstrap  Dream      50.8            19             210                4100         male\n 344 │ Chinstrap  Dream      50.2            18.7           198                3775         female\nheight: 400\nx: Species\nwidth: 600\n\ngeom_bar\ndata: inherits from plot\nx: species \nstack: species\ncolor: species\n\n\n\n\n\n\n\n\n\n\n\nggplot options\ndata: A DataFrame (344 rows, 7 columns)",
    "crumbs": [
      "Data Viz",
      "TidierPlot demo"
    ]
  },
  {
    "objectID": "vis/private-investment-on-ai-by-focus.html",
    "href": "vis/private-investment-on-ai-by-focus.html",
    "title": "Private Investment on AI by focus",
    "section": "",
    "text": "ref\n\n\n\n\nref :Annual private investment in artificial intelligence, by focus area\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success\nCode\nmake_title(\"Part 1 : data processing\")\n\n\n    \n       Part 1 : data processing",
    "crumbs": [
      "Data Viz",
      "Private Investment on AI  by focus"
    ]
  },
  {
    "objectID": "vis/private-investment-on-ai-by-focus.html#load-data-dataframe",
    "href": "vis/private-investment-on-ai-by-focus.html#load-data-dataframe",
    "title": "Private Investment on AI by focus",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/private-investment-in-artificial-intelligence-by-focus-area.csv\")|&gt;DataFrame\nrename!(df,\"European Union and United Kingdom\"=&gt;:EU,\"United States\"=&gt;:US)\nselect!(df,Not(\"Code\"))\n\n\n160×6 DataFrame135 rows omitted\n\n\n\nRow\nEntity\nYear\nWorld\nEU\nChina\nUS\n\n\n\nString\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\nAI ventures\n2017\n705626292\n34720055\n233168581\n404163765\n\n\n2\nAI ventures\n2018\n1539250299\n30321937\n591347599\n857474812\n\n\n3\nAI ventures\n2019\n1212544984\n15388467\n93042361\n962517568\n\n\n4\nAI ventures\n2020\n1545821073\n5170265\n91954563\n1358836062\n\n\n5\nAI ventures\n2021\n2379370717\n1013359242\n258977775\n923024967\n\n\n6\nAI ventures\n2022\n1242838005\n14814431\n451988999\n641729703\n\n\n7\nAgricultural technology\n2017\n309478503\n7554717\n10391318\n261846503\n\n\n8\nAgricultural technology\n2018\n280024054\n33194058\n0\n194254290\n\n\n9\nAgricultural technology\n2019\n502672339\n116117865\n18018197\n283437548\n\n\n10\nAgricultural technology\n2020\n686735808\n25459779\n7959031\n624487776\n\n\n11\nAgricultural technology\n2021\n1351178581\n469886955\n0\n838525337\n\n\n12\nAgricultural technology\n2022\n810137282\n76739673\n95402811\n509921645\n\n\n13\nAugmented or virtual reality\n2017\n313686338\n28642184\n156899836\n107616472\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n149\nTotal\n2017\n28434536002\n2687729049\n7314151975\n15548790772\n\n\n150\nTotal\n2018\n46508641939\n2955166939\n15069705393\n22716597215\n\n\n151\nTotal\n2019\n58389972850\n6202067697\n14892596238\n30795184157\n\n\n152\nTotal\n2020\n64505628706\n5599432467\n17094749150\n35531472847\n\n\n153\nTotal\n2021\n125356874235\n12500782453\n22848295305\n73395940859\n\n\n154\nTotal\n2022\n85055265067\n10217823819\n12412402667\n43848726664\n\n\n155\nVenture capital\n2017\n160103509\n9424792\n115426266\n15476426\n\n\n156\nVenture capital\n2018\n217600809\n0\n107910146\n109690663\n\n\n157\nVenture capital\n2019\n106903067\n26497349\n0\n28617137\n\n\n158\nVenture capital\n2020\n179347432\n0\n124590452\n4502008\n\n\n159\nVenture capital\n2021\n225784599\n0\n0\n60011724\n\n\n160\nVenture capital\n2022\n14814431\n14814431\n0\n0\n\n\n\n\n\n\n\n\nCode\ndf2=@chain df begin \n   @pivot_longer(_, 3:6, names_to =area, values_to =investment)\n   @mutate(investment=investment/10_000_000_000)\n   @group_by(Entity)\n   @arrange(Year)\n   @ungroup\n   @filter(Entity ∈ [\"Medical and healthcare\",\"Data management\",\"Cybersecurity\",\"Industrial automation\",\"Semiconductors\",\"Drones\"])\nend\n\n\n144×4 DataFrame119 rows omitted\n\n\n\nRow\nEntity\nYear\narea\ninvestment\n\n\n\nString\nInt64\nString\nFloat64\n\n\n\n\n1\nCybersecurity\n2017\nWorld\n0.247797\n\n\n2\nCybersecurity\n2017\nEU\n0.0211647\n\n\n3\nCybersecurity\n2017\nChina\n0.0799647\n\n\n4\nCybersecurity\n2017\nUS\n0.0895792\n\n\n5\nCybersecurity\n2018\nWorld\n0.407162\n\n\n6\nCybersecurity\n2018\nEU\n0.0172524\n\n\n7\nCybersecurity\n2018\nChina\n0.0583573\n\n\n8\nCybersecurity\n2018\nUS\n0.191833\n\n\n9\nCybersecurity\n2019\nWorld\n0.411088\n\n\n10\nCybersecurity\n2019\nEU\n0.0161193\n\n\n11\nCybersecurity\n2019\nChina\n0.196212\n\n\n12\nCybersecurity\n2019\nUS\n0.171356\n\n\n13\nCybersecurity\n2020\nWorld\n0.379812\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n133\nSemiconductors\n2020\nWorld\n0.092762\n\n\n134\nSemiconductors\n2020\nEU\n0.00523489\n\n\n135\nSemiconductors\n2020\nChina\n0.0207361\n\n\n136\nSemiconductors\n2020\nUS\n0.0576268\n\n\n137\nSemiconductors\n2021\nWorld\n0.0632604\n\n\n138\nSemiconductors\n2021\nEU\n0.00857049\n\n\n139\nSemiconductors\n2021\nChina\n0.020434\n\n\n140\nSemiconductors\n2021\nUS\n0.0156559\n\n\n141\nSemiconductors\n2022\nWorld\n0.153211\n\n\n142\nSemiconductors\n2022\nEU\n0.00114812\n\n\n143\nSemiconductors\n2022\nChina\n0.0946097\n\n\n144\nSemiconductors\n2022\nUS\n0.0536569\n\n\n\n\n\n\n\n\nCode\n make_title(\"Part 2 :Plot\")\n\n\n    \n       Part 2 :Plot\n    \n\n\n\n\nCode\ndata_layer=data(df2)\n  map_layer=mapping(:Year,:investment,layout=:Entity,color=:area)\n  visual_layer = visual(Lines,linewidth=2)\n  \n  plt=data_layer*map_layer*visual_layer\n  draw(plt,legend=(position=:bottom, titleposition=:left, framevisible=true, padding=2),facet = (;linkyaxes = :true))\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Private Investment on AI  by focus"
    ]
  },
  {
    "objectID": "vis/internet-user-view.html",
    "href": "vis/internet-user-view.html",
    "title": "Number of people using the Internet”",
    "section": "",
    "text": "info\n\n\n\n\nref:Number of people using the Internet\nload pacakge\nCode\ninclude(\"utils.jl\")\n\n\n[ Info: loading success",
    "crumbs": [
      "Data Viz",
      "Number of people using the Internet\""
    ]
  },
  {
    "objectID": "vis/internet-user-view.html#load-data-dataframe",
    "href": "vis/internet-user-view.html#load-data-dataframe",
    "title": "Number of people using the Internet”",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\n    df=@pipe CSV.File(\"./data/number-of-internet-users.csv\")|&gt;DataFrame|&gt;rename(_,\"Number of Internet users\"=&gt;:num_user)|&gt;coalesce.(_, 0.0)\n\nfirst(df,5)\n\n\n5×4 DataFrame\n\n\n\nRow\nEntity\nCode\nYear\nnum_user\n\n\n\nString\nAny\nInt64\nInt64\n\n\n\n\n1\nAfghanistan\nAFG\n1990\n0\n\n\n2\nAfghanistan\nAFG\n1991\n0\n\n\n3\nAfghanistan\nAFG\n1992\n0\n\n\n4\nAfghanistan\nAFG\n1993\n0\n\n\n5\nAfghanistan\nAFG\n1994\n0\n\n\n\n\n\n\n\n\nCode\nlist=(\"World\",\"Asia\",\"Europe\",\"North America\",\"Africa\",\"Oceania\")\n@eval(Main, myvars =list )\ndf2=@chain df begin\n    @select(Entity,Year,num_user)\n    @filter(Entity in !!myvars)\n    @mutate(num_user=num_user/1_000_000_000)\n    @arrange(desc(num_user))\nend\n\n\n183×3 DataFrame158 rows omitted\n\n\n\nRow\nEntity\nYear\nnum_user\n\n\n\nString\nInt64\nFloat64\n\n\n\n\n1\nWorld\n2020\n4.69989\n\n\n2\nWorld\n2019\n4.19408\n\n\n3\nWorld\n2018\n3.79552\n\n\n4\nWorld\n2017\n3.48375\n\n\n5\nWorld\n2016\n3.25622\n\n\n6\nWorld\n2015\n3.00458\n\n\n7\nWorld\n2014\n2.79366\n\n\n8\nWorld\n2013\n2.59861\n\n\n9\nAsia\n2020\n2.55759\n\n\n10\nWorld\n2012\n2.42685\n\n\n11\nAsia\n2019\n2.22554\n\n\n12\nWorld\n2011\n2.21888\n\n\n13\nWorld\n2010\n2.02115\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n172\nAfrica\n1995\n0.000324226\n\n\n173\nOceania\n1992\n0.000318972\n\n\n174\nAsia\n1992\n0.000247731\n\n\n175\nOceania\n1991\n0.000189499\n\n\n176\nAfrica\n1994\n0.000112387\n\n\n177\nOceania\n1990\n9.9747e-5\n\n\n178\nAsia\n1991\n9.3535e-5\n\n\n179\nAfrica\n1993\n4.897e-5\n\n\n180\nAsia\n1990\n4.0687e-5\n\n\n181\nAfrica\n1992\n1.6232e-5\n\n\n182\nAfrica\n1991\n5.434e-6\n\n\n183\nAfrica\n1990\n0.0",
    "crumbs": [
      "Data Viz",
      "Number of people using the Internet\""
    ]
  },
  {
    "objectID": "vis/internet-user-view.html#plot",
    "href": "vis/internet-user-view.html#plot",
    "title": "Number of people using the Internet”",
    "section": "plot",
    "text": "plot\n\n\nCode\naxis = (width = 1000, height =500,xticklabelrotation = pi/8,title=\"Internet user \",subtitle=\"Measured in billion.\",\nyticks=(1:7,[\"$i billion\" for i in 1:7]))\ndata_layer = data(df2)\nmapping_layer=mapping(:Year,:num_user,color=:Entity)\nvisual_layer = visual(ScatterLines;stroke=1,strokecolor=(:red,0.8),markersize=10,linewidth=3)\ndraw(data_layer * mapping_layer * visual_layer,axis=axis)\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Number of people using the Internet\""
    ]
  },
  {
    "objectID": "vis/ai-supercomputer-ability.html",
    "href": "vis/ai-supercomputer-ability.html",
    "title": "Computation used to train notable artificial intelligence systems”",
    "section": "",
    "text": "info\n\n\n\n\nref:Computation used to train notable artificial intelligence systems\nload pacakge\nCode\nusing CairoMakie,CSV,DataFrames,Pipe,Tidier,HypertextLiteral\nusing MakieThemes\nusing StatsBase\nusing AlgebraOfGraphics\nMakie.set_theme!(ggthemr(:dust))",
    "crumbs": [
      "Data Viz",
      "Computation used to train notable artificial intelligence systems\""
    ]
  },
  {
    "objectID": "vis/ai-supercomputer-ability.html#load-data-dataframe",
    "href": "vis/ai-supercomputer-ability.html#load-data-dataframe",
    "title": "Computation used to train notable artificial intelligence systems”",
    "section": "2. load data->dataframe",
    "text": "2. load data-&gt;dataframe\n\n\nCode\ndf=@pipe CSV.File(\"./data/artificial-intelligence-training-computation.csv\")|&gt;DataFrame\ndf=coalesce.(df, 0.0)\nrename!(df,\"Training computation (petaFLOP)\"=&gt;:petaFLOP)\ndf=@pipe sort(df,:petaFLOP;rev=true)|&gt;first(_,40)\n\n\n40×5 DataFrame15 rows omitted\n\n\n\nRow\nEntity\nCode\nDay\npetaFLOP\nDomain\n\n\n\nString\nFloat64\nDate\nFloat64\nString15\n\n\n\n\n1\nGPT-4\n0.0\n2023-03-15\n2.1e10\nMultimodal\n\n\n2\nPaLM 2\n0.0\n2023-05-10\n7.34e9\nLanguage\n\n\n3\nClaude 2\n0.0\n2023-07-11\n3.87e9\nLanguage\n\n\n4\nFalcon 180B\n0.0\n2023-09-06\n3.78e9\nLanguage\n\n\n5\nMinerva (540B)\n0.0\n2022-06-29\n2.74e9\nLanguage\n\n\n6\nGPT-3.5 (text-davinci-003)\n0.0\n2022-11-28\n2.58e9\nLanguage\n\n\n7\nPaLM (540B)\n0.0\n2022-04-04\n2.53e9\nLanguage\n\n\n8\nMegatron-Turing NLG 530B\n0.0\n2021-10-11\n1.17e9\nLanguage\n\n\n9\nERNIE 3.0 Titan\n0.0\n2021-12-23\n1.04e9\nLanguage\n\n\n10\nLlama 2\n0.0\n2023-07-18\n8.1e8\nLanguage\n\n\n11\nGopher (280B)\n0.0\n2021-12-08\n6.31e8\nLanguage\n\n\n12\nMegatron-BERT\n0.0\n2019-09-17\n6.03e8\nLanguage\n\n\n13\nChinchilla\n0.0\n2022-03-29\n5.76e8\nLanguage\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n29\nBloombergGPT\n0.0\n2023-03-30\n2.36e8\nLanguage\n\n\n30\nALIGN\n0.0\n2021-06-11\n2.15e8\nMultimodal\n\n\n31\nAlexaTM 20B\n0.0\n2022-08-02\n2.04e8\nLanguage\n\n\n32\nAlphaStar\n0.0\n2019-10-30\n2.02e8\nGames\n\n\n33\nBLOOM\n0.0\n2022-11-08\n1.8e8\nLanguage\n\n\n34\nAlphaGo Master\n0.0\n2017-01-01\n1.5e8\nGames\n\n\n35\nHyperClova\n0.0\n2021-09-10\n1.48e8\nLanguage\n\n\n36\nMeena\n0.0\n2020-01-28\n1.12e8\nLanguage\n\n\n37\nStarCoder\n0.0\n2023-05-09\n1.12e8\nLanguage\n\n\n38\nGPT-NeoX-20B\n0.0\n2022-02-09\n9.32e7\nLanguage\n\n\n39\nCoAtNet\n0.0\n2021-06-09\n8.5e7\nVision\n\n\n40\nBASIC-L\n0.0\n2021-11-19\n8.3e7\nVision\n\n\n\n\n\n\n\n\nCode\naxis = (width = 600, height =300,xticklabelrotation = pi/8,title=\"Computation used to train notable artificial intelligence systems\")\ndata_layer = data(df)\nmapping_layer=mapping(:Day,:petaFLOP,color=:Domain)\nvisual_layer = visual(Scatter;stroke=1,strokecolor=(:red,0.8),markersize=18)\ndraw(data_layer * mapping_layer * visual_layer,axis=axis)\n\n\n┌ Warning: Keyword argument `bgcolor` is deprecated, use `backgroundcolor` instead.\n└ @ Makie ~/.julia/packages/Makie/RgxaV/src/makielayout/blocks/legend.jl:23",
    "crumbs": [
      "Data Viz",
      "Computation used to train notable artificial intelligence systems\""
    ]
  },
  {
    "objectID": "using-dash.html",
    "href": "using-dash.html",
    "title": "Using Dash",
    "section": "",
    "text": "Code\nusing Dash\nusing DataFrames, CSV, PlotlyJS, RDatasets\n\niris = RDatasets.dataset(\"datasets\", \"iris\")\n\nPlot(iris, x=:SepalLength, y=:SepalWidth, mode=\"markers\", marker_size=8, group=:Species)"
  }
]