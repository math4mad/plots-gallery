{
  "hash": "888866489742a779709fd7fda6dfa150",
  "result": {
    "markdown": "---\ntitle: \"7-mv-normal-sampling\"\nauthor: \"math4mads\"\ncode-fold: true\n---\n\n:::{.callout-note title=\"方法\"}\n通过`contour:levels`参数控制曲线的范围\n\n`levels=1` 则只绘制出一条等位线\n:::\n\n## 1. load package\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing Distributions,GLMakie,Random\nRandom.seed!(343434)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nTaskLocalRNG()\n```\n:::\n:::\n\n\n## 2. define distributions params\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nμ=[3,2]\nΣ=[1 -1.5;-1.5 4]\nd=MvNormal(μ,Σ)\nxs=range(0,6,100)\nys=range(-4,7,100)\ndens_mvnormal = [pdf(d, [i, j]) for i in xs, j in ys]\nrand_sample=rand(d,100)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n2×100 Matrix{Float64}:\n 2.04893  3.14939  2.04006  2.96766  3.14777  …  2.9465   2.47969   3.17612\n 3.31172  2.04522  2.43717  1.83891  1.69139     2.44297  0.862216  0.327061\n```\n:::\n:::\n\n\n## 3. plot res\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nfunction plot_func(fig,idx,levels=1)\n    ax=Axis(fig[1,idx], xlabel=L\"X\", ylabel=L\"Y\")\n    Box(fig[1,idx];color = (:orange,0.1))\n    scatter!(ax,rand_sample;marker=:circle,markersize=10,color=(:green,0.1),\n             strokewidth=1,strokecolor=:black)\n    contour!(ax,xs, ys,dens_mvnormal;levels=levels,linewidth=1)\nend\nfunction plot_mvnormal()\n    fig=Figure(resolution=(800,400))\n    [plot_func(fig,idx,levels) for (idx,levels) in enumerate([1,16])]\n    fig\nend\nplot_mvnormal()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n![](7-mvnormal-sampling_files/figure-html/cell-4-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "7-mvnormal-sampling_files"
    ],
    "filters": [],
    "includes": {}
  }
}